

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 06 20:04:38 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F18325
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x620,48
    74                           	dabs	1,0x5A0,80
    75                           	dabs	1,0x520,80
    76                           	dabs	1,0x4EC,4
    77                           	dabs	1,0x231C,0,_tSys
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.35
    81                           ; Generated 13/04/2021 GMT
    82                           ; 
    83                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F18325 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000E                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  008C                     	;# 
   149  008E                     	;# 
   150  0090                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0097                     	;# 
   156  009B                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010E                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  018C                     	;# 
   174  018E                     	;# 
   175  0197                     	;# 
   176  0199                     	;# 
   177  0199                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019A                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019C                     	;# 
   188  019C                     	;# 
   189  019C                     	;# 
   190  019D                     	;# 
   191  019D                     	;# 
   192  019D                     	;# 
   193  019E                     	;# 
   194  019E                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  020C                     	;# 
   202  020E                     	;# 
   203  0211                     	;# 
   204  0211                     	;# 
   205  0212                     	;# 
   206  0212                     	;# 
   207  0213                     	;# 
   208  0213                     	;# 
   209  0214                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0216                     	;# 
   216  0216                     	;# 
   217  0217                     	;# 
   218  0217                     	;# 
   219  0219                     	;# 
   220  021A                     	;# 
   221  021B                     	;# 
   222  021C                     	;# 
   223  021D                     	;# 
   224  021D                     	;# 
   225  021E                     	;# 
   226  021F                     	;# 
   227  028C                     	;# 
   228  028E                     	;# 
   229  0291                     	;# 
   230  0291                     	;# 
   231  0292                     	;# 
   232  0293                     	;# 
   233  0294                     	;# 
   234  0295                     	;# 
   235  0295                     	;# 
   236  0296                     	;# 
   237  0297                     	;# 
   238  0298                     	;# 
   239  029F                     	;# 
   240  030C                     	;# 
   241  030E                     	;# 
   242  0311                     	;# 
   243  0311                     	;# 
   244  0312                     	;# 
   245  0313                     	;# 
   246  0314                     	;# 
   247  0315                     	;# 
   248  0315                     	;# 
   249  0316                     	;# 
   250  0317                     	;# 
   251  0318                     	;# 
   252  038C                     	;# 
   253  038E                     	;# 
   254  0391                     	;# 
   255  0392                     	;# 
   256  0393                     	;# 
   257  0397                     	;# 
   258  0398                     	;# 
   259  0399                     	;# 
   260  039A                     	;# 
   261  039C                     	;# 
   262  039D                     	;# 
   263  039E                     	;# 
   264  039F                     	;# 
   265  0411                     	;# 
   266  0411                     	;# 
   267  0412                     	;# 
   268  0413                     	;# 
   269  0414                     	;# 
   270  0415                     	;# 
   271  0416                     	;# 
   272  0417                     	;# 
   273  0418                     	;# 
   274  0418                     	;# 
   275  0419                     	;# 
   276  041A                     	;# 
   277  041B                     	;# 
   278  041C                     	;# 
   279  041D                     	;# 
   280  041E                     	;# 
   281  041F                     	;# 
   282  0498                     	;# 
   283  0498                     	;# 
   284  0499                     	;# 
   285  049A                     	;# 
   286  049B                     	;# 
   287  049B                     	;# 
   288  049C                     	;# 
   289  049D                     	;# 
   290  049E                     	;# 
   291  049F                     	;# 
   292  0617                     	;# 
   293  0618                     	;# 
   294  0619                     	;# 
   295  0619                     	;# 
   296  061A                     	;# 
   297  061B                     	;# 
   298  061C                     	;# 
   299  061C                     	;# 
   300  061F                     	;# 
   301  0691                     	;# 
   302  0692                     	;# 
   303  0693                     	;# 
   304  0694                     	;# 
   305  0695                     	;# 
   306  0696                     	;# 
   307  0697                     	;# 
   308  0698                     	;# 
   309  0699                     	;# 
   310  0711                     	;# 
   311  0712                     	;# 
   312  0713                     	;# 
   313  0714                     	;# 
   314  0715                     	;# 
   315  0716                     	;# 
   316  0717                     	;# 
   317  0718                     	;# 
   318  0719                     	;# 
   319  0891                     	;# 
   320  0891                     	;# 
   321  0891                     	;# 
   322  0891                     	;# 
   323  0891                     	;# 
   324  0891                     	;# 
   325  0892                     	;# 
   326  0892                     	;# 
   327  0892                     	;# 
   328  0893                     	;# 
   329  0893                     	;# 
   330  0893                     	;# 
   331  0893                     	;# 
   332  0893                     	;# 
   333  0893                     	;# 
   334  0894                     	;# 
   335  0894                     	;# 
   336  0894                     	;# 
   337  0895                     	;# 
   338  0895                     	;# 
   339  0895                     	;# 
   340  0896                     	;# 
   341  0896                     	;# 
   342  0896                     	;# 
   343  089B                     	;# 
   344  0911                     	;# 
   345  0912                     	;# 
   346  0913                     	;# 
   347  0914                     	;# 
   348  0915                     	;# 
   349  0916                     	;# 
   350  0918                     	;# 
   351  0919                     	;# 
   352  091A                     	;# 
   353  091B                     	;# 
   354  091C                     	;# 
   355  091D                     	;# 
   356  091E                     	;# 
   357  091F                     	;# 
   358  0E0F                     	;# 
   359  0E10                     	;# 
   360  0E11                     	;# 
   361  0E12                     	;# 
   362  0E13                     	;# 
   363  0E14                     	;# 
   364  0E15                     	;# 
   365  0E16                     	;# 
   366  0E17                     	;# 
   367  0E18                     	;# 
   368  0E19                     	;# 
   369  0E1A                     	;# 
   370  0E1B                     	;# 
   371  0E1C                     	;# 
   372  0E1D                     	;# 
   373  0E1E                     	;# 
   374  0E1F                     	;# 
   375  0E20                     	;# 
   376  0E21                     	;# 
   377  0E22                     	;# 
   378  0E24                     	;# 
   379  0E25                     	;# 
   380  0E28                     	;# 
   381  0E29                     	;# 
   382  0E2A                     	;# 
   383  0E2B                     	;# 
   384  0E2C                     	;# 
   385  0E2D                     	;# 
   386  0E2E                     	;# 
   387  0E2F                     	;# 
   388  0E90                     	;# 
   389  0E91                     	;# 
   390  0E92                     	;# 
   391  0E94                     	;# 
   392  0E95                     	;# 
   393  0EA0                     	;# 
   394  0EA1                     	;# 
   395  0EA2                     	;# 
   396  0EA3                     	;# 
   397  0EA4                     	;# 
   398  0EA5                     	;# 
   399  0F0F                     	;# 
   400  0F10                     	;# 
   401  0F11                     	;# 
   402  0F12                     	;# 
   403  0F13                     	;# 
   404  0F14                     	;# 
   405  0F15                     	;# 
   406  0F16                     	;# 
   407  0F17                     	;# 
   408  0F18                     	;# 
   409  0F19                     	;# 
   410  0F1A                     	;# 
   411  0F1B                     	;# 
   412  0F1C                     	;# 
   413  0F1D                     	;# 
   414  0F1E                     	;# 
   415  0F1F                     	;# 
   416  0F20                     	;# 
   417  0F21                     	;# 
   418  0F22                     	;# 
   419  0F23                     	;# 
   420  0F24                     	;# 
   421  0F25                     	;# 
   422  0F26                     	;# 
   423  0F27                     	;# 
   424  0F28                     	;# 
   425  0F29                     	;# 
   426  0F2A                     	;# 
   427  0F2B                     	;# 
   428  0F2C                     	;# 
   429  0F2D                     	;# 
   430  0F2E                     	;# 
   431  0F2F                     	;# 
   432  0F30                     	;# 
   433  0F31                     	;# 
   434  0F32                     	;# 
   435  0F33                     	;# 
   436  0F34                     	;# 
   437  0F35                     	;# 
   438  0F36                     	;# 
   439  0F37                     	;# 
   440  0FE4                     	;# 
   441  0FE5                     	;# 
   442  0FE6                     	;# 
   443  0FE7                     	;# 
   444  0FE8                     	;# 
   445  0FE9                     	;# 
   446  0FEA                     	;# 
   447  0FEB                     	;# 
   448  0FED                     	;# 
   449  0FEE                     	;# 
   450  0FEF                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000E                     	;# 
   465  0010                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001C                     	;# 
   481  001D                     	;# 
   482  001E                     	;# 
   483  001F                     	;# 
   484  008C                     	;# 
   485  008E                     	;# 
   486  0090                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0094                     	;# 
   491  0097                     	;# 
   492  009B                     	;# 
   493  009B                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010E                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  018C                     	;# 
   510  018E                     	;# 
   511  0197                     	;# 
   512  0199                     	;# 
   513  0199                     	;# 
   514  0199                     	;# 
   515  019A                     	;# 
   516  019A                     	;# 
   517  019A                     	;# 
   518  019B                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019C                     	;# 
   524  019C                     	;# 
   525  019C                     	;# 
   526  019D                     	;# 
   527  019D                     	;# 
   528  019D                     	;# 
   529  019E                     	;# 
   530  019E                     	;# 
   531  019E                     	;# 
   532  019F                     	;# 
   533  019F                     	;# 
   534  019F                     	;# 
   535  019F                     	;# 
   536  019F                     	;# 
   537  020C                     	;# 
   538  020E                     	;# 
   539  0211                     	;# 
   540  0211                     	;# 
   541  0212                     	;# 
   542  0212                     	;# 
   543  0213                     	;# 
   544  0213                     	;# 
   545  0214                     	;# 
   546  0214                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0215                     	;# 
   550  0215                     	;# 
   551  0216                     	;# 
   552  0216                     	;# 
   553  0217                     	;# 
   554  0217                     	;# 
   555  0219                     	;# 
   556  021A                     	;# 
   557  021B                     	;# 
   558  021C                     	;# 
   559  021D                     	;# 
   560  021D                     	;# 
   561  021E                     	;# 
   562  021F                     	;# 
   563  028C                     	;# 
   564  028E                     	;# 
   565  0291                     	;# 
   566  0291                     	;# 
   567  0292                     	;# 
   568  0293                     	;# 
   569  0294                     	;# 
   570  0295                     	;# 
   571  0295                     	;# 
   572  0296                     	;# 
   573  0297                     	;# 
   574  0298                     	;# 
   575  029F                     	;# 
   576  030C                     	;# 
   577  030E                     	;# 
   578  0311                     	;# 
   579  0311                     	;# 
   580  0312                     	;# 
   581  0313                     	;# 
   582  0314                     	;# 
   583  0315                     	;# 
   584  0315                     	;# 
   585  0316                     	;# 
   586  0317                     	;# 
   587  0318                     	;# 
   588  038C                     	;# 
   589  038E                     	;# 
   590  0391                     	;# 
   591  0392                     	;# 
   592  0393                     	;# 
   593  0397                     	;# 
   594  0398                     	;# 
   595  0399                     	;# 
   596  039A                     	;# 
   597  039C                     	;# 
   598  039D                     	;# 
   599  039E                     	;# 
   600  039F                     	;# 
   601  0411                     	;# 
   602  0411                     	;# 
   603  0412                     	;# 
   604  0413                     	;# 
   605  0414                     	;# 
   606  0415                     	;# 
   607  0416                     	;# 
   608  0417                     	;# 
   609  0418                     	;# 
   610  0418                     	;# 
   611  0419                     	;# 
   612  041A                     	;# 
   613  041B                     	;# 
   614  041C                     	;# 
   615  041D                     	;# 
   616  041E                     	;# 
   617  041F                     	;# 
   618  0498                     	;# 
   619  0498                     	;# 
   620  0499                     	;# 
   621  049A                     	;# 
   622  049B                     	;# 
   623  049B                     	;# 
   624  049C                     	;# 
   625  049D                     	;# 
   626  049E                     	;# 
   627  049F                     	;# 
   628  0617                     	;# 
   629  0618                     	;# 
   630  0619                     	;# 
   631  0619                     	;# 
   632  061A                     	;# 
   633  061B                     	;# 
   634  061C                     	;# 
   635  061C                     	;# 
   636  061F                     	;# 
   637  0691                     	;# 
   638  0692                     	;# 
   639  0693                     	;# 
   640  0694                     	;# 
   641  0695                     	;# 
   642  0696                     	;# 
   643  0697                     	;# 
   644  0698                     	;# 
   645  0699                     	;# 
   646  0711                     	;# 
   647  0712                     	;# 
   648  0713                     	;# 
   649  0714                     	;# 
   650  0715                     	;# 
   651  0716                     	;# 
   652  0717                     	;# 
   653  0718                     	;# 
   654  0719                     	;# 
   655  0891                     	;# 
   656  0891                     	;# 
   657  0891                     	;# 
   658  0891                     	;# 
   659  0891                     	;# 
   660  0891                     	;# 
   661  0892                     	;# 
   662  0892                     	;# 
   663  0892                     	;# 
   664  0893                     	;# 
   665  0893                     	;# 
   666  0893                     	;# 
   667  0893                     	;# 
   668  0893                     	;# 
   669  0893                     	;# 
   670  0894                     	;# 
   671  0894                     	;# 
   672  0894                     	;# 
   673  0895                     	;# 
   674  0895                     	;# 
   675  0895                     	;# 
   676  0896                     	;# 
   677  0896                     	;# 
   678  0896                     	;# 
   679  089B                     	;# 
   680  0911                     	;# 
   681  0912                     	;# 
   682  0913                     	;# 
   683  0914                     	;# 
   684  0915                     	;# 
   685  0916                     	;# 
   686  0918                     	;# 
   687  0919                     	;# 
   688  091A                     	;# 
   689  091B                     	;# 
   690  091C                     	;# 
   691  091D                     	;# 
   692  091E                     	;# 
   693  091F                     	;# 
   694  0E0F                     	;# 
   695  0E10                     	;# 
   696  0E11                     	;# 
   697  0E12                     	;# 
   698  0E13                     	;# 
   699  0E14                     	;# 
   700  0E15                     	;# 
   701  0E16                     	;# 
   702  0E17                     	;# 
   703  0E18                     	;# 
   704  0E19                     	;# 
   705  0E1A                     	;# 
   706  0E1B                     	;# 
   707  0E1C                     	;# 
   708  0E1D                     	;# 
   709  0E1E                     	;# 
   710  0E1F                     	;# 
   711  0E20                     	;# 
   712  0E21                     	;# 
   713  0E22                     	;# 
   714  0E24                     	;# 
   715  0E25                     	;# 
   716  0E28                     	;# 
   717  0E29                     	;# 
   718  0E2A                     	;# 
   719  0E2B                     	;# 
   720  0E2C                     	;# 
   721  0E2D                     	;# 
   722  0E2E                     	;# 
   723  0E2F                     	;# 
   724  0E90                     	;# 
   725  0E91                     	;# 
   726  0E92                     	;# 
   727  0E94                     	;# 
   728  0E95                     	;# 
   729  0EA0                     	;# 
   730  0EA1                     	;# 
   731  0EA2                     	;# 
   732  0EA3                     	;# 
   733  0EA4                     	;# 
   734  0EA5                     	;# 
   735  0F0F                     	;# 
   736  0F10                     	;# 
   737  0F11                     	;# 
   738  0F12                     	;# 
   739  0F13                     	;# 
   740  0F14                     	;# 
   741  0F15                     	;# 
   742  0F16                     	;# 
   743  0F17                     	;# 
   744  0F18                     	;# 
   745  0F19                     	;# 
   746  0F1A                     	;# 
   747  0F1B                     	;# 
   748  0F1C                     	;# 
   749  0F1D                     	;# 
   750  0F1E                     	;# 
   751  0F1F                     	;# 
   752  0F20                     	;# 
   753  0F21                     	;# 
   754  0F22                     	;# 
   755  0F23                     	;# 
   756  0F24                     	;# 
   757  0F25                     	;# 
   758  0F26                     	;# 
   759  0F27                     	;# 
   760  0F28                     	;# 
   761  0F29                     	;# 
   762  0F2A                     	;# 
   763  0F2B                     	;# 
   764  0F2C                     	;# 
   765  0F2D                     	;# 
   766  0F2E                     	;# 
   767  0F2F                     	;# 
   768  0F30                     	;# 
   769  0F31                     	;# 
   770  0F32                     	;# 
   771  0F33                     	;# 
   772  0F34                     	;# 
   773  0F35                     	;# 
   774  0F36                     	;# 
   775  0F37                     	;# 
   776  0FE4                     	;# 
   777  0FE5                     	;# 
   778  0FE6                     	;# 
   779  0FE7                     	;# 
   780  0FE8                     	;# 
   781  0FE9                     	;# 
   782  0FEA                     	;# 
   783  0FEB                     	;# 
   784  0FED                     	;# 
   785  0FEE                     	;# 
   786  0FEF                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0008                     	;# 
   796  0009                     	;# 
   797  000A                     	;# 
   798  000B                     	;# 
   799  000C                     	;# 
   800  000E                     	;# 
   801  0010                     	;# 
   802  0011                     	;# 
   803  0012                     	;# 
   804  0013                     	;# 
   805  0014                     	;# 
   806  0015                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  0019                     	;# 
   814  001A                     	;# 
   815  001B                     	;# 
   816  001C                     	;# 
   817  001D                     	;# 
   818  001E                     	;# 
   819  001F                     	;# 
   820  008C                     	;# 
   821  008E                     	;# 
   822  0090                     	;# 
   823  0091                     	;# 
   824  0092                     	;# 
   825  0093                     	;# 
   826  0094                     	;# 
   827  0097                     	;# 
   828  009B                     	;# 
   829  009B                     	;# 
   830  009C                     	;# 
   831  009D                     	;# 
   832  009E                     	;# 
   833  009F                     	;# 
   834  010C                     	;# 
   835  010E                     	;# 
   836  0111                     	;# 
   837  0112                     	;# 
   838  0113                     	;# 
   839  0114                     	;# 
   840  0115                     	;# 
   841  0116                     	;# 
   842  0117                     	;# 
   843  0118                     	;# 
   844  0119                     	;# 
   845  018C                     	;# 
   846  018E                     	;# 
   847  0197                     	;# 
   848  0199                     	;# 
   849  0199                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019A                     	;# 
   853  019A                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019E                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020E                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0214                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0216                     	;# 
   888  0216                     	;# 
   889  0217                     	;# 
   890  0217                     	;# 
   891  0219                     	;# 
   892  021A                     	;# 
   893  021B                     	;# 
   894  021C                     	;# 
   895  021D                     	;# 
   896  021D                     	;# 
   897  021E                     	;# 
   898  021F                     	;# 
   899  028C                     	;# 
   900  028E                     	;# 
   901  0291                     	;# 
   902  0291                     	;# 
   903  0292                     	;# 
   904  0293                     	;# 
   905  0294                     	;# 
   906  0295                     	;# 
   907  0295                     	;# 
   908  0296                     	;# 
   909  0297                     	;# 
   910  0298                     	;# 
   911  029F                     	;# 
   912  030C                     	;# 
   913  030E                     	;# 
   914  0311                     	;# 
   915  0311                     	;# 
   916  0312                     	;# 
   917  0313                     	;# 
   918  0314                     	;# 
   919  0315                     	;# 
   920  0315                     	;# 
   921  0316                     	;# 
   922  0317                     	;# 
   923  0318                     	;# 
   924  038C                     	;# 
   925  038E                     	;# 
   926  0391                     	;# 
   927  0392                     	;# 
   928  0393                     	;# 
   929  0397                     	;# 
   930  0398                     	;# 
   931  0399                     	;# 
   932  039A                     	;# 
   933  039C                     	;# 
   934  039D                     	;# 
   935  039E                     	;# 
   936  039F                     	;# 
   937  0411                     	;# 
   938  0411                     	;# 
   939  0412                     	;# 
   940  0413                     	;# 
   941  0414                     	;# 
   942  0415                     	;# 
   943  0416                     	;# 
   944  0417                     	;# 
   945  0418                     	;# 
   946  0418                     	;# 
   947  0419                     	;# 
   948  041A                     	;# 
   949  041B                     	;# 
   950  041C                     	;# 
   951  041D                     	;# 
   952  041E                     	;# 
   953  041F                     	;# 
   954  0498                     	;# 
   955  0498                     	;# 
   956  0499                     	;# 
   957  049A                     	;# 
   958  049B                     	;# 
   959  049B                     	;# 
   960  049C                     	;# 
   961  049D                     	;# 
   962  049E                     	;# 
   963  049F                     	;# 
   964  0617                     	;# 
   965  0618                     	;# 
   966  0619                     	;# 
   967  0619                     	;# 
   968  061A                     	;# 
   969  061B                     	;# 
   970  061C                     	;# 
   971  061C                     	;# 
   972  061F                     	;# 
   973  0691                     	;# 
   974  0692                     	;# 
   975  0693                     	;# 
   976  0694                     	;# 
   977  0695                     	;# 
   978  0696                     	;# 
   979  0697                     	;# 
   980  0698                     	;# 
   981  0699                     	;# 
   982  0711                     	;# 
   983  0712                     	;# 
   984  0713                     	;# 
   985  0714                     	;# 
   986  0715                     	;# 
   987  0716                     	;# 
   988  0717                     	;# 
   989  0718                     	;# 
   990  0719                     	;# 
   991  0891                     	;# 
   992  0891                     	;# 
   993  0891                     	;# 
   994  0891                     	;# 
   995  0891                     	;# 
   996  0891                     	;# 
   997  0892                     	;# 
   998  0892                     	;# 
   999  0892                     	;# 
  1000  0893                     	;# 
  1001  0893                     	;# 
  1002  0893                     	;# 
  1003  0893                     	;# 
  1004  0893                     	;# 
  1005  0893                     	;# 
  1006  0894                     	;# 
  1007  0894                     	;# 
  1008  0894                     	;# 
  1009  0895                     	;# 
  1010  0895                     	;# 
  1011  0895                     	;# 
  1012  0896                     	;# 
  1013  0896                     	;# 
  1014  0896                     	;# 
  1015  089B                     	;# 
  1016  0911                     	;# 
  1017  0912                     	;# 
  1018  0913                     	;# 
  1019  0914                     	;# 
  1020  0915                     	;# 
  1021  0916                     	;# 
  1022  0918                     	;# 
  1023  0919                     	;# 
  1024  091A                     	;# 
  1025  091B                     	;# 
  1026  091C                     	;# 
  1027  091D                     	;# 
  1028  091E                     	;# 
  1029  091F                     	;# 
  1030  0E0F                     	;# 
  1031  0E10                     	;# 
  1032  0E11                     	;# 
  1033  0E12                     	;# 
  1034  0E13                     	;# 
  1035  0E14                     	;# 
  1036  0E15                     	;# 
  1037  0E16                     	;# 
  1038  0E17                     	;# 
  1039  0E18                     	;# 
  1040  0E19                     	;# 
  1041  0E1A                     	;# 
  1042  0E1B                     	;# 
  1043  0E1C                     	;# 
  1044  0E1D                     	;# 
  1045  0E1E                     	;# 
  1046  0E1F                     	;# 
  1047  0E20                     	;# 
  1048  0E21                     	;# 
  1049  0E22                     	;# 
  1050  0E24                     	;# 
  1051  0E25                     	;# 
  1052  0E28                     	;# 
  1053  0E29                     	;# 
  1054  0E2A                     	;# 
  1055  0E2B                     	;# 
  1056  0E2C                     	;# 
  1057  0E2D                     	;# 
  1058  0E2E                     	;# 
  1059  0E2F                     	;# 
  1060  0E90                     	;# 
  1061  0E91                     	;# 
  1062  0E92                     	;# 
  1063  0E94                     	;# 
  1064  0E95                     	;# 
  1065  0EA0                     	;# 
  1066  0EA1                     	;# 
  1067  0EA2                     	;# 
  1068  0EA3                     	;# 
  1069  0EA4                     	;# 
  1070  0EA5                     	;# 
  1071  0F0F                     	;# 
  1072  0F10                     	;# 
  1073  0F11                     	;# 
  1074  0F12                     	;# 
  1075  0F13                     	;# 
  1076  0F14                     	;# 
  1077  0F15                     	;# 
  1078  0F16                     	;# 
  1079  0F17                     	;# 
  1080  0F18                     	;# 
  1081  0F19                     	;# 
  1082  0F1A                     	;# 
  1083  0F1B                     	;# 
  1084  0F1C                     	;# 
  1085  0F1D                     	;# 
  1086  0F1E                     	;# 
  1087  0F1F                     	;# 
  1088  0F20                     	;# 
  1089  0F21                     	;# 
  1090  0F22                     	;# 
  1091  0F23                     	;# 
  1092  0F24                     	;# 
  1093  0F25                     	;# 
  1094  0F26                     	;# 
  1095  0F27                     	;# 
  1096  0F28                     	;# 
  1097  0F29                     	;# 
  1098  0F2A                     	;# 
  1099  0F2B                     	;# 
  1100  0F2C                     	;# 
  1101  0F2D                     	;# 
  1102  0F2E                     	;# 
  1103  0F2F                     	;# 
  1104  0F30                     	;# 
  1105  0F31                     	;# 
  1106  0F32                     	;# 
  1107  0F33                     	;# 
  1108  0F34                     	;# 
  1109  0F35                     	;# 
  1110  0F36                     	;# 
  1111  0F37                     	;# 
  1112  0FE4                     	;# 
  1113  0FE5                     	;# 
  1114  0FE6                     	;# 
  1115  0FE7                     	;# 
  1116  0FE8                     	;# 
  1117  0FE9                     	;# 
  1118  0FEA                     	;# 
  1119  0FEB                     	;# 
  1120  0FED                     	;# 
  1121  0FEE                     	;# 
  1122  0FEF                     	;# 
  1123  0000                     	;# 
  1124  0001                     	;# 
  1125  0002                     	;# 
  1126  0003                     	;# 
  1127  0004                     	;# 
  1128  0005                     	;# 
  1129  0006                     	;# 
  1130  0007                     	;# 
  1131  0008                     	;# 
  1132  0009                     	;# 
  1133  000A                     	;# 
  1134  000B                     	;# 
  1135  000C                     	;# 
  1136  000E                     	;# 
  1137  0010                     	;# 
  1138  0011                     	;# 
  1139  0012                     	;# 
  1140  0013                     	;# 
  1141  0014                     	;# 
  1142  0015                     	;# 
  1143  0015                     	;# 
  1144  0016                     	;# 
  1145  0016                     	;# 
  1146  0017                     	;# 
  1147  0018                     	;# 
  1148  0019                     	;# 
  1149  0019                     	;# 
  1150  001A                     	;# 
  1151  001B                     	;# 
  1152  001C                     	;# 
  1153  001D                     	;# 
  1154  001E                     	;# 
  1155  001F                     	;# 
  1156  008C                     	;# 
  1157  008E                     	;# 
  1158  0090                     	;# 
  1159  0091                     	;# 
  1160  0092                     	;# 
  1161  0093                     	;# 
  1162  0094                     	;# 
  1163  0097                     	;# 
  1164  009B                     	;# 
  1165  009B                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009E                     	;# 
  1169  009F                     	;# 
  1170  010C                     	;# 
  1171  010E                     	;# 
  1172  0111                     	;# 
  1173  0112                     	;# 
  1174  0113                     	;# 
  1175  0114                     	;# 
  1176  0115                     	;# 
  1177  0116                     	;# 
  1178  0117                     	;# 
  1179  0118                     	;# 
  1180  0119                     	;# 
  1181  018C                     	;# 
  1182  018E                     	;# 
  1183  0197                     	;# 
  1184  0199                     	;# 
  1185  0199                     	;# 
  1186  0199                     	;# 
  1187  019A                     	;# 
  1188  019A                     	;# 
  1189  019A                     	;# 
  1190  019B                     	;# 
  1191  019B                     	;# 
  1192  019B                     	;# 
  1193  019B                     	;# 
  1194  019B                     	;# 
  1195  019C                     	;# 
  1196  019C                     	;# 
  1197  019C                     	;# 
  1198  019D                     	;# 
  1199  019D                     	;# 
  1200  019D                     	;# 
  1201  019E                     	;# 
  1202  019E                     	;# 
  1203  019E                     	;# 
  1204  019F                     	;# 
  1205  019F                     	;# 
  1206  019F                     	;# 
  1207  019F                     	;# 
  1208  019F                     	;# 
  1209  020C                     	;# 
  1210  020E                     	;# 
  1211  0211                     	;# 
  1212  0211                     	;# 
  1213  0212                     	;# 
  1214  0212                     	;# 
  1215  0213                     	;# 
  1216  0213                     	;# 
  1217  0214                     	;# 
  1218  0214                     	;# 
  1219  0215                     	;# 
  1220  0215                     	;# 
  1221  0215                     	;# 
  1222  0215                     	;# 
  1223  0216                     	;# 
  1224  0216                     	;# 
  1225  0217                     	;# 
  1226  0217                     	;# 
  1227  0219                     	;# 
  1228  021A                     	;# 
  1229  021B                     	;# 
  1230  021C                     	;# 
  1231  021D                     	;# 
  1232  021D                     	;# 
  1233  021E                     	;# 
  1234  021F                     	;# 
  1235  028C                     	;# 
  1236  028E                     	;# 
  1237  0291                     	;# 
  1238  0291                     	;# 
  1239  0292                     	;# 
  1240  0293                     	;# 
  1241  0294                     	;# 
  1242  0295                     	;# 
  1243  0295                     	;# 
  1244  0296                     	;# 
  1245  0297                     	;# 
  1246  0298                     	;# 
  1247  029F                     	;# 
  1248  030C                     	;# 
  1249  030E                     	;# 
  1250  0311                     	;# 
  1251  0311                     	;# 
  1252  0312                     	;# 
  1253  0313                     	;# 
  1254  0314                     	;# 
  1255  0315                     	;# 
  1256  0315                     	;# 
  1257  0316                     	;# 
  1258  0317                     	;# 
  1259  0318                     	;# 
  1260  038C                     	;# 
  1261  038E                     	;# 
  1262  0391                     	;# 
  1263  0392                     	;# 
  1264  0393                     	;# 
  1265  0397                     	;# 
  1266  0398                     	;# 
  1267  0399                     	;# 
  1268  039A                     	;# 
  1269  039C                     	;# 
  1270  039D                     	;# 
  1271  039E                     	;# 
  1272  039F                     	;# 
  1273  0411                     	;# 
  1274  0411                     	;# 
  1275  0412                     	;# 
  1276  0413                     	;# 
  1277  0414                     	;# 
  1278  0415                     	;# 
  1279  0416                     	;# 
  1280  0417                     	;# 
  1281  0418                     	;# 
  1282  0418                     	;# 
  1283  0419                     	;# 
  1284  041A                     	;# 
  1285  041B                     	;# 
  1286  041C                     	;# 
  1287  041D                     	;# 
  1288  041E                     	;# 
  1289  041F                     	;# 
  1290  0498                     	;# 
  1291  0498                     	;# 
  1292  0499                     	;# 
  1293  049A                     	;# 
  1294  049B                     	;# 
  1295  049B                     	;# 
  1296  049C                     	;# 
  1297  049D                     	;# 
  1298  049E                     	;# 
  1299  049F                     	;# 
  1300  0617                     	;# 
  1301  0618                     	;# 
  1302  0619                     	;# 
  1303  0619                     	;# 
  1304  061A                     	;# 
  1305  061B                     	;# 
  1306  061C                     	;# 
  1307  061C                     	;# 
  1308  061F                     	;# 
  1309  0691                     	;# 
  1310  0692                     	;# 
  1311  0693                     	;# 
  1312  0694                     	;# 
  1313  0695                     	;# 
  1314  0696                     	;# 
  1315  0697                     	;# 
  1316  0698                     	;# 
  1317  0699                     	;# 
  1318  0711                     	;# 
  1319  0712                     	;# 
  1320  0713                     	;# 
  1321  0714                     	;# 
  1322  0715                     	;# 
  1323  0716                     	;# 
  1324  0717                     	;# 
  1325  0718                     	;# 
  1326  0719                     	;# 
  1327  0891                     	;# 
  1328  0891                     	;# 
  1329  0891                     	;# 
  1330  0891                     	;# 
  1331  0891                     	;# 
  1332  0891                     	;# 
  1333  0892                     	;# 
  1334  0892                     	;# 
  1335  0892                     	;# 
  1336  0893                     	;# 
  1337  0893                     	;# 
  1338  0893                     	;# 
  1339  0893                     	;# 
  1340  0893                     	;# 
  1341  0893                     	;# 
  1342  0894                     	;# 
  1343  0894                     	;# 
  1344  0894                     	;# 
  1345  0895                     	;# 
  1346  0895                     	;# 
  1347  0895                     	;# 
  1348  0896                     	;# 
  1349  0896                     	;# 
  1350  0896                     	;# 
  1351  089B                     	;# 
  1352  0911                     	;# 
  1353  0912                     	;# 
  1354  0913                     	;# 
  1355  0914                     	;# 
  1356  0915                     	;# 
  1357  0916                     	;# 
  1358  0918                     	;# 
  1359  0919                     	;# 
  1360  091A                     	;# 
  1361  091B                     	;# 
  1362  091C                     	;# 
  1363  091D                     	;# 
  1364  091E                     	;# 
  1365  091F                     	;# 
  1366  0E0F                     	;# 
  1367  0E10                     	;# 
  1368  0E11                     	;# 
  1369  0E12                     	;# 
  1370  0E13                     	;# 
  1371  0E14                     	;# 
  1372  0E15                     	;# 
  1373  0E16                     	;# 
  1374  0E17                     	;# 
  1375  0E18                     	;# 
  1376  0E19                     	;# 
  1377  0E1A                     	;# 
  1378  0E1B                     	;# 
  1379  0E1C                     	;# 
  1380  0E1D                     	;# 
  1381  0E1E                     	;# 
  1382  0E1F                     	;# 
  1383  0E20                     	;# 
  1384  0E21                     	;# 
  1385  0E22                     	;# 
  1386  0E24                     	;# 
  1387  0E25                     	;# 
  1388  0E28                     	;# 
  1389  0E29                     	;# 
  1390  0E2A                     	;# 
  1391  0E2B                     	;# 
  1392  0E2C                     	;# 
  1393  0E2D                     	;# 
  1394  0E2E                     	;# 
  1395  0E2F                     	;# 
  1396  0E90                     	;# 
  1397  0E91                     	;# 
  1398  0E92                     	;# 
  1399  0E94                     	;# 
  1400  0E95                     	;# 
  1401  0EA0                     	;# 
  1402  0EA1                     	;# 
  1403  0EA2                     	;# 
  1404  0EA3                     	;# 
  1405  0EA4                     	;# 
  1406  0EA5                     	;# 
  1407  0F0F                     	;# 
  1408  0F10                     	;# 
  1409  0F11                     	;# 
  1410  0F12                     	;# 
  1411  0F13                     	;# 
  1412  0F14                     	;# 
  1413  0F15                     	;# 
  1414  0F16                     	;# 
  1415  0F17                     	;# 
  1416  0F18                     	;# 
  1417  0F19                     	;# 
  1418  0F1A                     	;# 
  1419  0F1B                     	;# 
  1420  0F1C                     	;# 
  1421  0F1D                     	;# 
  1422  0F1E                     	;# 
  1423  0F1F                     	;# 
  1424  0F20                     	;# 
  1425  0F21                     	;# 
  1426  0F22                     	;# 
  1427  0F23                     	;# 
  1428  0F24                     	;# 
  1429  0F25                     	;# 
  1430  0F26                     	;# 
  1431  0F27                     	;# 
  1432  0F28                     	;# 
  1433  0F29                     	;# 
  1434  0F2A                     	;# 
  1435  0F2B                     	;# 
  1436  0F2C                     	;# 
  1437  0F2D                     	;# 
  1438  0F2E                     	;# 
  1439  0F2F                     	;# 
  1440  0F30                     	;# 
  1441  0F31                     	;# 
  1442  0F32                     	;# 
  1443  0F33                     	;# 
  1444  0F34                     	;# 
  1445  0F35                     	;# 
  1446  0F36                     	;# 
  1447  0F37                     	;# 
  1448  0FE4                     	;# 
  1449  0FE5                     	;# 
  1450  0FE6                     	;# 
  1451  0FE7                     	;# 
  1452  0FE8                     	;# 
  1453  0FE9                     	;# 
  1454  0FEA                     	;# 
  1455  0FEB                     	;# 
  1456  0FED                     	;# 
  1457  0FEE                     	;# 
  1458  0FEF                     	;# 
  1459  0000                     	;# 
  1460  0001                     	;# 
  1461  0002                     	;# 
  1462  0003                     	;# 
  1463  0004                     	;# 
  1464  0005                     	;# 
  1465  0006                     	;# 
  1466  0007                     	;# 
  1467  0008                     	;# 
  1468  0009                     	;# 
  1469  000A                     	;# 
  1470  000B                     	;# 
  1471  000C                     	;# 
  1472  000E                     	;# 
  1473  0010                     	;# 
  1474  0011                     	;# 
  1475  0012                     	;# 
  1476  0013                     	;# 
  1477  0014                     	;# 
  1478  0015                     	;# 
  1479  0015                     	;# 
  1480  0016                     	;# 
  1481  0016                     	;# 
  1482  0017                     	;# 
  1483  0018                     	;# 
  1484  0019                     	;# 
  1485  0019                     	;# 
  1486  001A                     	;# 
  1487  001B                     	;# 
  1488  001C                     	;# 
  1489  001D                     	;# 
  1490  001E                     	;# 
  1491  001F                     	;# 
  1492  008C                     	;# 
  1493  008E                     	;# 
  1494  0090                     	;# 
  1495  0091                     	;# 
  1496  0092                     	;# 
  1497  0093                     	;# 
  1498  0094                     	;# 
  1499  0097                     	;# 
  1500  009B                     	;# 
  1501  009B                     	;# 
  1502  009C                     	;# 
  1503  009D                     	;# 
  1504  009E                     	;# 
  1505  009F                     	;# 
  1506  010C                     	;# 
  1507  010E                     	;# 
  1508  0111                     	;# 
  1509  0112                     	;# 
  1510  0113                     	;# 
  1511  0114                     	;# 
  1512  0115                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  0118                     	;# 
  1516  0119                     	;# 
  1517  018C                     	;# 
  1518  018E                     	;# 
  1519  0197                     	;# 
  1520  0199                     	;# 
  1521  0199                     	;# 
  1522  0199                     	;# 
  1523  019A                     	;# 
  1524  019A                     	;# 
  1525  019A                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019B                     	;# 
  1530  019B                     	;# 
  1531  019C                     	;# 
  1532  019C                     	;# 
  1533  019C                     	;# 
  1534  019D                     	;# 
  1535  019D                     	;# 
  1536  019D                     	;# 
  1537  019E                     	;# 
  1538  019E                     	;# 
  1539  019E                     	;# 
  1540  019F                     	;# 
  1541  019F                     	;# 
  1542  019F                     	;# 
  1543  019F                     	;# 
  1544  019F                     	;# 
  1545  020C                     	;# 
  1546  020E                     	;# 
  1547  0211                     	;# 
  1548  0211                     	;# 
  1549  0212                     	;# 
  1550  0212                     	;# 
  1551  0213                     	;# 
  1552  0213                     	;# 
  1553  0214                     	;# 
  1554  0214                     	;# 
  1555  0215                     	;# 
  1556  0215                     	;# 
  1557  0215                     	;# 
  1558  0215                     	;# 
  1559  0216                     	;# 
  1560  0216                     	;# 
  1561  0217                     	;# 
  1562  0217                     	;# 
  1563  0219                     	;# 
  1564  021A                     	;# 
  1565  021B                     	;# 
  1566  021C                     	;# 
  1567  021D                     	;# 
  1568  021D                     	;# 
  1569  021E                     	;# 
  1570  021F                     	;# 
  1571  028C                     	;# 
  1572  028E                     	;# 
  1573  0291                     	;# 
  1574  0291                     	;# 
  1575  0292                     	;# 
  1576  0293                     	;# 
  1577  0294                     	;# 
  1578  0295                     	;# 
  1579  0295                     	;# 
  1580  0296                     	;# 
  1581  0297                     	;# 
  1582  0298                     	;# 
  1583  029F                     	;# 
  1584  030C                     	;# 
  1585  030E                     	;# 
  1586  0311                     	;# 
  1587  0311                     	;# 
  1588  0312                     	;# 
  1589  0313                     	;# 
  1590  0314                     	;# 
  1591  0315                     	;# 
  1592  0315                     	;# 
  1593  0316                     	;# 
  1594  0317                     	;# 
  1595  0318                     	;# 
  1596  038C                     	;# 
  1597  038E                     	;# 
  1598  0391                     	;# 
  1599  0392                     	;# 
  1600  0393                     	;# 
  1601  0397                     	;# 
  1602  0398                     	;# 
  1603  0399                     	;# 
  1604  039A                     	;# 
  1605  039C                     	;# 
  1606  039D                     	;# 
  1607  039E                     	;# 
  1608  039F                     	;# 
  1609  0411                     	;# 
  1610  0411                     	;# 
  1611  0412                     	;# 
  1612  0413                     	;# 
  1613  0414                     	;# 
  1614  0415                     	;# 
  1615  0416                     	;# 
  1616  0417                     	;# 
  1617  0418                     	;# 
  1618  0418                     	;# 
  1619  0419                     	;# 
  1620  041A                     	;# 
  1621  041B                     	;# 
  1622  041C                     	;# 
  1623  041D                     	;# 
  1624  041E                     	;# 
  1625  041F                     	;# 
  1626  0498                     	;# 
  1627  0498                     	;# 
  1628  0499                     	;# 
  1629  049A                     	;# 
  1630  049B                     	;# 
  1631  049B                     	;# 
  1632  049C                     	;# 
  1633  049D                     	;# 
  1634  049E                     	;# 
  1635  049F                     	;# 
  1636  0617                     	;# 
  1637  0618                     	;# 
  1638  0619                     	;# 
  1639  0619                     	;# 
  1640  061A                     	;# 
  1641  061B                     	;# 
  1642  061C                     	;# 
  1643  061C                     	;# 
  1644  061F                     	;# 
  1645  0691                     	;# 
  1646  0692                     	;# 
  1647  0693                     	;# 
  1648  0694                     	;# 
  1649  0695                     	;# 
  1650  0696                     	;# 
  1651  0697                     	;# 
  1652  0698                     	;# 
  1653  0699                     	;# 
  1654  0711                     	;# 
  1655  0712                     	;# 
  1656  0713                     	;# 
  1657  0714                     	;# 
  1658  0715                     	;# 
  1659  0716                     	;# 
  1660  0717                     	;# 
  1661  0718                     	;# 
  1662  0719                     	;# 
  1663  0891                     	;# 
  1664  0891                     	;# 
  1665  0891                     	;# 
  1666  0891                     	;# 
  1667  0891                     	;# 
  1668  0891                     	;# 
  1669  0892                     	;# 
  1670  0892                     	;# 
  1671  0892                     	;# 
  1672  0893                     	;# 
  1673  0893                     	;# 
  1674  0893                     	;# 
  1675  0893                     	;# 
  1676  0893                     	;# 
  1677  0893                     	;# 
  1678  0894                     	;# 
  1679  0894                     	;# 
  1680  0894                     	;# 
  1681  0895                     	;# 
  1682  0895                     	;# 
  1683  0895                     	;# 
  1684  0896                     	;# 
  1685  0896                     	;# 
  1686  0896                     	;# 
  1687  089B                     	;# 
  1688  0911                     	;# 
  1689  0912                     	;# 
  1690  0913                     	;# 
  1691  0914                     	;# 
  1692  0915                     	;# 
  1693  0916                     	;# 
  1694  0918                     	;# 
  1695  0919                     	;# 
  1696  091A                     	;# 
  1697  091B                     	;# 
  1698  091C                     	;# 
  1699  091D                     	;# 
  1700  091E                     	;# 
  1701  091F                     	;# 
  1702  0E0F                     	;# 
  1703  0E10                     	;# 
  1704  0E11                     	;# 
  1705  0E12                     	;# 
  1706  0E13                     	;# 
  1707  0E14                     	;# 
  1708  0E15                     	;# 
  1709  0E16                     	;# 
  1710  0E17                     	;# 
  1711  0E18                     	;# 
  1712  0E19                     	;# 
  1713  0E1A                     	;# 
  1714  0E1B                     	;# 
  1715  0E1C                     	;# 
  1716  0E1D                     	;# 
  1717  0E1E                     	;# 
  1718  0E1F                     	;# 
  1719  0E20                     	;# 
  1720  0E21                     	;# 
  1721  0E22                     	;# 
  1722  0E24                     	;# 
  1723  0E25                     	;# 
  1724  0E28                     	;# 
  1725  0E29                     	;# 
  1726  0E2A                     	;# 
  1727  0E2B                     	;# 
  1728  0E2C                     	;# 
  1729  0E2D                     	;# 
  1730  0E2E                     	;# 
  1731  0E2F                     	;# 
  1732  0E90                     	;# 
  1733  0E91                     	;# 
  1734  0E92                     	;# 
  1735  0E94                     	;# 
  1736  0E95                     	;# 
  1737  0EA0                     	;# 
  1738  0EA1                     	;# 
  1739  0EA2                     	;# 
  1740  0EA3                     	;# 
  1741  0EA4                     	;# 
  1742  0EA5                     	;# 
  1743  0F0F                     	;# 
  1744  0F10                     	;# 
  1745  0F11                     	;# 
  1746  0F12                     	;# 
  1747  0F13                     	;# 
  1748  0F14                     	;# 
  1749  0F15                     	;# 
  1750  0F16                     	;# 
  1751  0F17                     	;# 
  1752  0F18                     	;# 
  1753  0F19                     	;# 
  1754  0F1A                     	;# 
  1755  0F1B                     	;# 
  1756  0F1C                     	;# 
  1757  0F1D                     	;# 
  1758  0F1E                     	;# 
  1759  0F1F                     	;# 
  1760  0F20                     	;# 
  1761  0F21                     	;# 
  1762  0F22                     	;# 
  1763  0F23                     	;# 
  1764  0F24                     	;# 
  1765  0F25                     	;# 
  1766  0F26                     	;# 
  1767  0F27                     	;# 
  1768  0F28                     	;# 
  1769  0F29                     	;# 
  1770  0F2A                     	;# 
  1771  0F2B                     	;# 
  1772  0F2C                     	;# 
  1773  0F2D                     	;# 
  1774  0F2E                     	;# 
  1775  0F2F                     	;# 
  1776  0F30                     	;# 
  1777  0F31                     	;# 
  1778  0F32                     	;# 
  1779  0F33                     	;# 
  1780  0F34                     	;# 
  1781  0F35                     	;# 
  1782  0F36                     	;# 
  1783  0F37                     	;# 
  1784  0FE4                     	;# 
  1785  0FE5                     	;# 
  1786  0FE6                     	;# 
  1787  0FE7                     	;# 
  1788  0FE8                     	;# 
  1789  0FE9                     	;# 
  1790  0FEA                     	;# 
  1791  0FEB                     	;# 
  1792  0FED                     	;# 
  1793  0FEE                     	;# 
  1794  0FEF                     	;# 
  1795  0000                     	;# 
  1796  0001                     	;# 
  1797  0002                     	;# 
  1798  0003                     	;# 
  1799  0004                     	;# 
  1800  0005                     	;# 
  1801  0006                     	;# 
  1802  0007                     	;# 
  1803  0008                     	;# 
  1804  0009                     	;# 
  1805  000A                     	;# 
  1806  000B                     	;# 
  1807  000C                     	;# 
  1808  000E                     	;# 
  1809  0010                     	;# 
  1810  0011                     	;# 
  1811  0012                     	;# 
  1812  0013                     	;# 
  1813  0014                     	;# 
  1814  0015                     	;# 
  1815  0015                     	;# 
  1816  0016                     	;# 
  1817  0016                     	;# 
  1818  0017                     	;# 
  1819  0018                     	;# 
  1820  0019                     	;# 
  1821  0019                     	;# 
  1822  001A                     	;# 
  1823  001B                     	;# 
  1824  001C                     	;# 
  1825  001D                     	;# 
  1826  001E                     	;# 
  1827  001F                     	;# 
  1828  008C                     	;# 
  1829  008E                     	;# 
  1830  0090                     	;# 
  1831  0091                     	;# 
  1832  0092                     	;# 
  1833  0093                     	;# 
  1834  0094                     	;# 
  1835  0097                     	;# 
  1836  009B                     	;# 
  1837  009B                     	;# 
  1838  009C                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  009F                     	;# 
  1842  010C                     	;# 
  1843  010E                     	;# 
  1844  0111                     	;# 
  1845  0112                     	;# 
  1846  0113                     	;# 
  1847  0114                     	;# 
  1848  0115                     	;# 
  1849  0116                     	;# 
  1850  0117                     	;# 
  1851  0118                     	;# 
  1852  0119                     	;# 
  1853  018C                     	;# 
  1854  018E                     	;# 
  1855  0197                     	;# 
  1856  0199                     	;# 
  1857  0199                     	;# 
  1858  0199                     	;# 
  1859  019A                     	;# 
  1860  019A                     	;# 
  1861  019A                     	;# 
  1862  019B                     	;# 
  1863  019B                     	;# 
  1864  019B                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019C                     	;# 
  1868  019C                     	;# 
  1869  019C                     	;# 
  1870  019D                     	;# 
  1871  019D                     	;# 
  1872  019D                     	;# 
  1873  019E                     	;# 
  1874  019E                     	;# 
  1875  019E                     	;# 
  1876  019F                     	;# 
  1877  019F                     	;# 
  1878  019F                     	;# 
  1879  019F                     	;# 
  1880  019F                     	;# 
  1881  020C                     	;# 
  1882  020E                     	;# 
  1883  0211                     	;# 
  1884  0211                     	;# 
  1885  0212                     	;# 
  1886  0212                     	;# 
  1887  0213                     	;# 
  1888  0213                     	;# 
  1889  0214                     	;# 
  1890  0214                     	;# 
  1891  0215                     	;# 
  1892  0215                     	;# 
  1893  0215                     	;# 
  1894  0215                     	;# 
  1895  0216                     	;# 
  1896  0216                     	;# 
  1897  0217                     	;# 
  1898  0217                     	;# 
  1899  0219                     	;# 
  1900  021A                     	;# 
  1901  021B                     	;# 
  1902  021C                     	;# 
  1903  021D                     	;# 
  1904  021D                     	;# 
  1905  021E                     	;# 
  1906  021F                     	;# 
  1907  028C                     	;# 
  1908  028E                     	;# 
  1909  0291                     	;# 
  1910  0291                     	;# 
  1911  0292                     	;# 
  1912  0293                     	;# 
  1913  0294                     	;# 
  1914  0295                     	;# 
  1915  0295                     	;# 
  1916  0296                     	;# 
  1917  0297                     	;# 
  1918  0298                     	;# 
  1919  029F                     	;# 
  1920  030C                     	;# 
  1921  030E                     	;# 
  1922  0311                     	;# 
  1923  0311                     	;# 
  1924  0312                     	;# 
  1925  0313                     	;# 
  1926  0314                     	;# 
  1927  0315                     	;# 
  1928  0315                     	;# 
  1929  0316                     	;# 
  1930  0317                     	;# 
  1931  0318                     	;# 
  1932  038C                     	;# 
  1933  038E                     	;# 
  1934  0391                     	;# 
  1935  0392                     	;# 
  1936  0393                     	;# 
  1937  0397                     	;# 
  1938  0398                     	;# 
  1939  0399                     	;# 
  1940  039A                     	;# 
  1941  039C                     	;# 
  1942  039D                     	;# 
  1943  039E                     	;# 
  1944  039F                     	;# 
  1945  0411                     	;# 
  1946  0411                     	;# 
  1947  0412                     	;# 
  1948  0413                     	;# 
  1949  0414                     	;# 
  1950  0415                     	;# 
  1951  0416                     	;# 
  1952  0417                     	;# 
  1953  0418                     	;# 
  1954  0418                     	;# 
  1955  0419                     	;# 
  1956  041A                     	;# 
  1957  041B                     	;# 
  1958  041C                     	;# 
  1959  041D                     	;# 
  1960  041E                     	;# 
  1961  041F                     	;# 
  1962  0498                     	;# 
  1963  0498                     	;# 
  1964  0499                     	;# 
  1965  049A                     	;# 
  1966  049B                     	;# 
  1967  049B                     	;# 
  1968  049C                     	;# 
  1969  049D                     	;# 
  1970  049E                     	;# 
  1971  049F                     	;# 
  1972  0617                     	;# 
  1973  0618                     	;# 
  1974  0619                     	;# 
  1975  0619                     	;# 
  1976  061A                     	;# 
  1977  061B                     	;# 
  1978  061C                     	;# 
  1979  061C                     	;# 
  1980  061F                     	;# 
  1981  0691                     	;# 
  1982  0692                     	;# 
  1983  0693                     	;# 
  1984  0694                     	;# 
  1985  0695                     	;# 
  1986  0696                     	;# 
  1987  0697                     	;# 
  1988  0698                     	;# 
  1989  0699                     	;# 
  1990  0711                     	;# 
  1991  0712                     	;# 
  1992  0713                     	;# 
  1993  0714                     	;# 
  1994  0715                     	;# 
  1995  0716                     	;# 
  1996  0717                     	;# 
  1997  0718                     	;# 
  1998  0719                     	;# 
  1999  0891                     	;# 
  2000  0891                     	;# 
  2001  0891                     	;# 
  2002  0891                     	;# 
  2003  0891                     	;# 
  2004  0891                     	;# 
  2005  0892                     	;# 
  2006  0892                     	;# 
  2007  0892                     	;# 
  2008  0893                     	;# 
  2009  0893                     	;# 
  2010  0893                     	;# 
  2011  0893                     	;# 
  2012  0893                     	;# 
  2013  0893                     	;# 
  2014  0894                     	;# 
  2015  0894                     	;# 
  2016  0894                     	;# 
  2017  0895                     	;# 
  2018  0895                     	;# 
  2019  0895                     	;# 
  2020  0896                     	;# 
  2021  0896                     	;# 
  2022  0896                     	;# 
  2023  089B                     	;# 
  2024  0911                     	;# 
  2025  0912                     	;# 
  2026  0913                     	;# 
  2027  0914                     	;# 
  2028  0915                     	;# 
  2029  0916                     	;# 
  2030  0918                     	;# 
  2031  0919                     	;# 
  2032  091A                     	;# 
  2033  091B                     	;# 
  2034  091C                     	;# 
  2035  091D                     	;# 
  2036  091E                     	;# 
  2037  091F                     	;# 
  2038  0E0F                     	;# 
  2039  0E10                     	;# 
  2040  0E11                     	;# 
  2041  0E12                     	;# 
  2042  0E13                     	;# 
  2043  0E14                     	;# 
  2044  0E15                     	;# 
  2045  0E16                     	;# 
  2046  0E17                     	;# 
  2047  0E18                     	;# 
  2048  0E19                     	;# 
  2049  0E1A                     	;# 
  2050  0E1B                     	;# 
  2051  0E1C                     	;# 
  2052  0E1D                     	;# 
  2053  0E1E                     	;# 
  2054  0E1F                     	;# 
  2055  0E20                     	;# 
  2056  0E21                     	;# 
  2057  0E22                     	;# 
  2058  0E24                     	;# 
  2059  0E25                     	;# 
  2060  0E28                     	;# 
  2061  0E29                     	;# 
  2062  0E2A                     	;# 
  2063  0E2B                     	;# 
  2064  0E2C                     	;# 
  2065  0E2D                     	;# 
  2066  0E2E                     	;# 
  2067  0E2F                     	;# 
  2068  0E90                     	;# 
  2069  0E91                     	;# 
  2070  0E92                     	;# 
  2071  0E94                     	;# 
  2072  0E95                     	;# 
  2073  0EA0                     	;# 
  2074  0EA1                     	;# 
  2075  0EA2                     	;# 
  2076  0EA3                     	;# 
  2077  0EA4                     	;# 
  2078  0EA5                     	;# 
  2079  0F0F                     	;# 
  2080  0F10                     	;# 
  2081  0F11                     	;# 
  2082  0F12                     	;# 
  2083  0F13                     	;# 
  2084  0F14                     	;# 
  2085  0F15                     	;# 
  2086  0F16                     	;# 
  2087  0F17                     	;# 
  2088  0F18                     	;# 
  2089  0F19                     	;# 
  2090  0F1A                     	;# 
  2091  0F1B                     	;# 
  2092  0F1C                     	;# 
  2093  0F1D                     	;# 
  2094  0F1E                     	;# 
  2095  0F1F                     	;# 
  2096  0F20                     	;# 
  2097  0F21                     	;# 
  2098  0F22                     	;# 
  2099  0F23                     	;# 
  2100  0F24                     	;# 
  2101  0F25                     	;# 
  2102  0F26                     	;# 
  2103  0F27                     	;# 
  2104  0F28                     	;# 
  2105  0F29                     	;# 
  2106  0F2A                     	;# 
  2107  0F2B                     	;# 
  2108  0F2C                     	;# 
  2109  0F2D                     	;# 
  2110  0F2E                     	;# 
  2111  0F2F                     	;# 
  2112  0F30                     	;# 
  2113  0F31                     	;# 
  2114  0F32                     	;# 
  2115  0F33                     	;# 
  2116  0F34                     	;# 
  2117  0F35                     	;# 
  2118  0F36                     	;# 
  2119  0F37                     	;# 
  2120  0FE4                     	;# 
  2121  0FE5                     	;# 
  2122  0FE6                     	;# 
  2123  0FE7                     	;# 
  2124  0FE8                     	;# 
  2125  0FE9                     	;# 
  2126  0FEA                     	;# 
  2127  0FEB                     	;# 
  2128  0FED                     	;# 
  2129  0FEE                     	;# 
  2130  0FEF                     	;# 
  2131  0000                     	;# 
  2132  0001                     	;# 
  2133  0002                     	;# 
  2134  0003                     	;# 
  2135  0004                     	;# 
  2136  0005                     	;# 
  2137  0006                     	;# 
  2138  0007                     	;# 
  2139  0008                     	;# 
  2140  0009                     	;# 
  2141  000A                     	;# 
  2142  000B                     	;# 
  2143  000C                     	;# 
  2144  000E                     	;# 
  2145  0010                     	;# 
  2146  0011                     	;# 
  2147  0012                     	;# 
  2148  0013                     	;# 
  2149  0014                     	;# 
  2150  0015                     	;# 
  2151  0015                     	;# 
  2152  0016                     	;# 
  2153  0016                     	;# 
  2154  0017                     	;# 
  2155  0018                     	;# 
  2156  0019                     	;# 
  2157  0019                     	;# 
  2158  001A                     	;# 
  2159  001B                     	;# 
  2160  001C                     	;# 
  2161  001D                     	;# 
  2162  001E                     	;# 
  2163  001F                     	;# 
  2164  008C                     	;# 
  2165  008E                     	;# 
  2166  0090                     	;# 
  2167  0091                     	;# 
  2168  0092                     	;# 
  2169  0093                     	;# 
  2170  0094                     	;# 
  2171  0097                     	;# 
  2172  009B                     	;# 
  2173  009B                     	;# 
  2174  009C                     	;# 
  2175  009D                     	;# 
  2176  009E                     	;# 
  2177  009F                     	;# 
  2178  010C                     	;# 
  2179  010E                     	;# 
  2180  0111                     	;# 
  2181  0112                     	;# 
  2182  0113                     	;# 
  2183  0114                     	;# 
  2184  0115                     	;# 
  2185  0116                     	;# 
  2186  0117                     	;# 
  2187  0118                     	;# 
  2188  0119                     	;# 
  2189  018C                     	;# 
  2190  018E                     	;# 
  2191  0197                     	;# 
  2192  0199                     	;# 
  2193  0199                     	;# 
  2194  0199                     	;# 
  2195  019A                     	;# 
  2196  019A                     	;# 
  2197  019A                     	;# 
  2198  019B                     	;# 
  2199  019B                     	;# 
  2200  019B                     	;# 
  2201  019B                     	;# 
  2202  019B                     	;# 
  2203  019C                     	;# 
  2204  019C                     	;# 
  2205  019C                     	;# 
  2206  019D                     	;# 
  2207  019D                     	;# 
  2208  019D                     	;# 
  2209  019E                     	;# 
  2210  019E                     	;# 
  2211  019E                     	;# 
  2212  019F                     	;# 
  2213  019F                     	;# 
  2214  019F                     	;# 
  2215  019F                     	;# 
  2216  019F                     	;# 
  2217  020C                     	;# 
  2218  020E                     	;# 
  2219  0211                     	;# 
  2220  0211                     	;# 
  2221  0212                     	;# 
  2222  0212                     	;# 
  2223  0213                     	;# 
  2224  0213                     	;# 
  2225  0214                     	;# 
  2226  0214                     	;# 
  2227  0215                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0219                     	;# 
  2236  021A                     	;# 
  2237  021B                     	;# 
  2238  021C                     	;# 
  2239  021D                     	;# 
  2240  021D                     	;# 
  2241  021E                     	;# 
  2242  021F                     	;# 
  2243  028C                     	;# 
  2244  028E                     	;# 
  2245  0291                     	;# 
  2246  0291                     	;# 
  2247  0292                     	;# 
  2248  0293                     	;# 
  2249  0294                     	;# 
  2250  0295                     	;# 
  2251  0295                     	;# 
  2252  0296                     	;# 
  2253  0297                     	;# 
  2254  0298                     	;# 
  2255  029F                     	;# 
  2256  030C                     	;# 
  2257  030E                     	;# 
  2258  0311                     	;# 
  2259  0311                     	;# 
  2260  0312                     	;# 
  2261  0313                     	;# 
  2262  0314                     	;# 
  2263  0315                     	;# 
  2264  0315                     	;# 
  2265  0316                     	;# 
  2266  0317                     	;# 
  2267  0318                     	;# 
  2268  038C                     	;# 
  2269  038E                     	;# 
  2270  0391                     	;# 
  2271  0392                     	;# 
  2272  0393                     	;# 
  2273  0397                     	;# 
  2274  0398                     	;# 
  2275  0399                     	;# 
  2276  039A                     	;# 
  2277  039C                     	;# 
  2278  039D                     	;# 
  2279  039E                     	;# 
  2280  039F                     	;# 
  2281  0411                     	;# 
  2282  0411                     	;# 
  2283  0412                     	;# 
  2284  0413                     	;# 
  2285  0414                     	;# 
  2286  0415                     	;# 
  2287  0416                     	;# 
  2288  0417                     	;# 
  2289  0418                     	;# 
  2290  0418                     	;# 
  2291  0419                     	;# 
  2292  041A                     	;# 
  2293  041B                     	;# 
  2294  041C                     	;# 
  2295  041D                     	;# 
  2296  041E                     	;# 
  2297  041F                     	;# 
  2298  0498                     	;# 
  2299  0498                     	;# 
  2300  0499                     	;# 
  2301  049A                     	;# 
  2302  049B                     	;# 
  2303  049B                     	;# 
  2304  049C                     	;# 
  2305  049D                     	;# 
  2306  049E                     	;# 
  2307  049F                     	;# 
  2308  0617                     	;# 
  2309  0618                     	;# 
  2310  0619                     	;# 
  2311  0619                     	;# 
  2312  061A                     	;# 
  2313  061B                     	;# 
  2314  061C                     	;# 
  2315  061C                     	;# 
  2316  061F                     	;# 
  2317  0691                     	;# 
  2318  0692                     	;# 
  2319  0693                     	;# 
  2320  0694                     	;# 
  2321  0695                     	;# 
  2322  0696                     	;# 
  2323  0697                     	;# 
  2324  0698                     	;# 
  2325  0699                     	;# 
  2326  0711                     	;# 
  2327  0712                     	;# 
  2328  0713                     	;# 
  2329  0714                     	;# 
  2330  0715                     	;# 
  2331  0716                     	;# 
  2332  0717                     	;# 
  2333  0718                     	;# 
  2334  0719                     	;# 
  2335  0891                     	;# 
  2336  0891                     	;# 
  2337  0891                     	;# 
  2338  0891                     	;# 
  2339  0891                     	;# 
  2340  0891                     	;# 
  2341  0892                     	;# 
  2342  0892                     	;# 
  2343  0892                     	;# 
  2344  0893                     	;# 
  2345  0893                     	;# 
  2346  0893                     	;# 
  2347  0893                     	;# 
  2348  0893                     	;# 
  2349  0893                     	;# 
  2350  0894                     	;# 
  2351  0894                     	;# 
  2352  0894                     	;# 
  2353  0895                     	;# 
  2354  0895                     	;# 
  2355  0895                     	;# 
  2356  0896                     	;# 
  2357  0896                     	;# 
  2358  0896                     	;# 
  2359  089B                     	;# 
  2360  0911                     	;# 
  2361  0912                     	;# 
  2362  0913                     	;# 
  2363  0914                     	;# 
  2364  0915                     	;# 
  2365  0916                     	;# 
  2366  0918                     	;# 
  2367  0919                     	;# 
  2368  091A                     	;# 
  2369  091B                     	;# 
  2370  091C                     	;# 
  2371  091D                     	;# 
  2372  091E                     	;# 
  2373  091F                     	;# 
  2374  0E0F                     	;# 
  2375  0E10                     	;# 
  2376  0E11                     	;# 
  2377  0E12                     	;# 
  2378  0E13                     	;# 
  2379  0E14                     	;# 
  2380  0E15                     	;# 
  2381  0E16                     	;# 
  2382  0E17                     	;# 
  2383  0E18                     	;# 
  2384  0E19                     	;# 
  2385  0E1A                     	;# 
  2386  0E1B                     	;# 
  2387  0E1C                     	;# 
  2388  0E1D                     	;# 
  2389  0E1E                     	;# 
  2390  0E1F                     	;# 
  2391  0E20                     	;# 
  2392  0E21                     	;# 
  2393  0E22                     	;# 
  2394  0E24                     	;# 
  2395  0E25                     	;# 
  2396  0E28                     	;# 
  2397  0E29                     	;# 
  2398  0E2A                     	;# 
  2399  0E2B                     	;# 
  2400  0E2C                     	;# 
  2401  0E2D                     	;# 
  2402  0E2E                     	;# 
  2403  0E2F                     	;# 
  2404  0E90                     	;# 
  2405  0E91                     	;# 
  2406  0E92                     	;# 
  2407  0E94                     	;# 
  2408  0E95                     	;# 
  2409  0EA0                     	;# 
  2410  0EA1                     	;# 
  2411  0EA2                     	;# 
  2412  0EA3                     	;# 
  2413  0EA4                     	;# 
  2414  0EA5                     	;# 
  2415  0F0F                     	;# 
  2416  0F10                     	;# 
  2417  0F11                     	;# 
  2418  0F12                     	;# 
  2419  0F13                     	;# 
  2420  0F14                     	;# 
  2421  0F15                     	;# 
  2422  0F16                     	;# 
  2423  0F17                     	;# 
  2424  0F18                     	;# 
  2425  0F19                     	;# 
  2426  0F1A                     	;# 
  2427  0F1B                     	;# 
  2428  0F1C                     	;# 
  2429  0F1D                     	;# 
  2430  0F1E                     	;# 
  2431  0F1F                     	;# 
  2432  0F20                     	;# 
  2433  0F21                     	;# 
  2434  0F22                     	;# 
  2435  0F23                     	;# 
  2436  0F24                     	;# 
  2437  0F25                     	;# 
  2438  0F26                     	;# 
  2439  0F27                     	;# 
  2440  0F28                     	;# 
  2441  0F29                     	;# 
  2442  0F2A                     	;# 
  2443  0F2B                     	;# 
  2444  0F2C                     	;# 
  2445  0F2D                     	;# 
  2446  0F2E                     	;# 
  2447  0F2F                     	;# 
  2448  0F30                     	;# 
  2449  0F31                     	;# 
  2450  0F32                     	;# 
  2451  0F33                     	;# 
  2452  0F34                     	;# 
  2453  0F35                     	;# 
  2454  0F36                     	;# 
  2455  0F37                     	;# 
  2456  0FE4                     	;# 
  2457  0FE5                     	;# 
  2458  0FE6                     	;# 
  2459  0FE7                     	;# 
  2460  0FE8                     	;# 
  2461  0FE9                     	;# 
  2462  0FEA                     	;# 
  2463  0FEB                     	;# 
  2464  0FED                     	;# 
  2465  0FEE                     	;# 
  2466  0FEF                     	;_tSys
  2467                           
  2468 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2469  0000                     
  2470 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2471  0000                     
  2472 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2473  0000                     
  2474                           	psect	stringtext1
  2475  0000'                    __pstringtext1:
  2476  0000'                    _co2_table:
  2477  0000' 3490               	retlw	144
  2478  0001' 3401               	retlw	1
  2479  0002' 349B               	retlw	155
  2480  0003' 3401               	retlw	1
  2481  0004' 34A6               	retlw	166
  2482  0005' 3401               	retlw	1
  2483  0006' 34B2               	retlw	178
  2484  0007' 3401               	retlw	1
  2485  0008' 34BD               	retlw	189
  2486  0009' 3401               	retlw	1
  2487  000A' 34C9               	retlw	201
  2488  000B' 3401               	retlw	1
  2489  000C' 34D6               	retlw	214
  2490  000D' 3401               	retlw	1
  2491  000E' 34E3               	retlw	227
  2492  000F' 3401               	retlw	1
  2493  0010' 34F0               	retlw	240
  2494  0011' 3401               	retlw	1
  2495  0012' 34FD               	retlw	253
  2496  0013' 3401               	retlw	1
  2497  0014' 340B               	retlw	11
  2498  0015' 3402               	retlw	2
  2499  0016' 3419               	retlw	25
  2500  0017' 3402               	retlw	2
  2501  0018' 3428               	retlw	40
  2502  0019' 3402               	retlw	2
  2503  001A' 3437               	retlw	55
  2504  001B' 3402               	retlw	2
  2505  001C' 3446               	retlw	70
  2506  001D' 3402               	retlw	2
  2507  001E' 3456               	retlw	86
  2508  001F' 3402               	retlw	2
  2509  0020' 3466               	retlw	102
  2510  0021' 3402               	retlw	2
  2511  0022' 3477               	retlw	119
  2512  0023' 3402               	retlw	2
  2513  0024' 3488               	retlw	136
  2514  0025' 3402               	retlw	2
  2515  0026' 349A               	retlw	154
  2516  0027' 3402               	retlw	2
  2517  0028' 34AC               	retlw	172
  2518  0029' 3402               	retlw	2
  2519  002A' 34BF               	retlw	191
  2520  002B' 3402               	retlw	2
  2521  002C' 34D2               	retlw	210
  2522  002D' 3402               	retlw	2
  2523  002E' 34E5               	retlw	229
  2524  002F' 3402               	retlw	2
  2525  0030' 34F9               	retlw	249
  2526  0031' 3402               	retlw	2
  2527  0032' 340E               	retlw	14
  2528  0033' 3403               	retlw	3
  2529  0034' 3423               	retlw	35
  2530  0035' 3403               	retlw	3
  2531  0036' 3439               	retlw	57
  2532  0037' 3403               	retlw	3
  2533  0038' 3450               	retlw	80
  2534  0039' 3403               	retlw	3
  2535  003A' 3467               	retlw	103
  2536  003B' 3403               	retlw	3
  2537  003C' 347E               	retlw	126
  2538  003D' 3403               	retlw	3
  2539  003E' 3497               	retlw	151
  2540  003F' 3403               	retlw	3
  2541  0040' 34B0               	retlw	176
  2542  0041' 3403               	retlw	3
  2543  0042' 34C9               	retlw	201
  2544  0043' 3403               	retlw	3
  2545  0044' 34E4               	retlw	228
  2546  0045' 3403               	retlw	3
  2547  0046' 34FF               	retlw	255
  2548  0047' 3403               	retlw	3
  2549  0048' 341B               	retlw	27
  2550  0049' 3404               	retlw	4
  2551  004A' 3437               	retlw	55
  2552  004B' 3404               	retlw	4
  2553  004C' 3455               	retlw	85
  2554  004D' 3404               	retlw	4
  2555  004E' 3473               	retlw	115
  2556  004F' 3404               	retlw	4
  2557  0050' 3492               	retlw	146
  2558  0051' 3404               	retlw	4
  2559  0052' 34B1               	retlw	177
  2560  0053' 3404               	retlw	4
  2561  0054' 34D2               	retlw	210
  2562  0055' 3404               	retlw	4
  2563  0056' 34F4               	retlw	244
  2564  0057' 3404               	retlw	4
  2565  0058' 3416               	retlw	22
  2566  0059' 3405               	retlw	5
  2567  005A' 343A               	retlw	58
  2568  005B' 3405               	retlw	5
  2569  005C' 345E               	retlw	94
  2570  005D' 3405               	retlw	5
  2571  005E' 3483               	retlw	131
  2572  005F' 3405               	retlw	5
  2573  0060' 34AA               	retlw	170
  2574  0061' 3405               	retlw	5
  2575  0062' 34D1               	retlw	209
  2576  0063' 3405               	retlw	5
  2577  0064' 34FA               	retlw	250
  2578  0065' 3405               	retlw	5
  2579  0066' 3423               	retlw	35
  2580  0067' 3406               	retlw	6
  2581  0068' 344E               	retlw	78
  2582  0069' 3406               	retlw	6
  2583  006A' 347A               	retlw	122
  2584  006B' 3406               	retlw	6
  2585  006C' 34A7               	retlw	167
  2586  006D' 3406               	retlw	6
  2587  006E' 34D5               	retlw	213
  2588  006F' 3406               	retlw	6
  2589  0070' 3405               	retlw	5
  2590  0071' 3407               	retlw	7
  2591  0072' 3435               	retlw	53
  2592  0073' 3407               	retlw	7
  2593  0074' 3468               	retlw	104
  2594  0075' 3407               	retlw	7
  2595  0076' 349B               	retlw	155
  2596  0077' 3407               	retlw	7
  2597  0078' 34D0               	retlw	208
  2598  0079' 3407               	retlw	7
  2599  007A' 3407               	retlw	7
  2600  007B' 3408               	retlw	8
  2601  007C' 343E               	retlw	62
  2602  007D' 3408               	retlw	8
  2603  007E' 3478               	retlw	120
  2604  007F' 3408               	retlw	8
  2605  0080' 34B3               	retlw	179
  2606  0081' 3408               	retlw	8
  2607  0082' 34EF               	retlw	239
  2608  0083' 3408               	retlw	8
  2609  0084' 342D               	retlw	45
  2610  0085' 3409               	retlw	9
  2611  0086' 346D               	retlw	109
  2612  0087' 3409               	retlw	9
  2613  0088' 34AF               	retlw	175
  2614  0089' 3409               	retlw	9
  2615  008A' 34F2               	retlw	242
  2616  008B' 3409               	retlw	9
  2617  008C' 3438               	retlw	56
  2618  008D' 340A               	retlw	10
  2619  008E' 347F               	retlw	127
  2620  008F' 340A               	retlw	10
  2621  0090' 34C8               	retlw	200
  2622  0091' 340A               	retlw	10
  2623  0092' 3413               	retlw	19
  2624  0093' 340B               	retlw	11
  2625  0094' 3460               	retlw	96
  2626  0095' 340B               	retlw	11
  2627  0096' 34AF               	retlw	175
  2628  0097' 340B               	retlw	11
  2629  0098' 3400               	retlw	0
  2630  0099' 340C               	retlw	12
  2631  009A' 3454               	retlw	84
  2632  009B' 340C               	retlw	12
  2633  009C' 34AA               	retlw	170
  2634  009D' 340C               	retlw	12
  2635  009E' 3402               	retlw	2
  2636  009F' 340D               	retlw	13
  2637  00A0' 345C               	retlw	92
  2638  00A1' 340D               	retlw	13
  2639  00A2' 34B9               	retlw	185
  2640  00A3' 340D               	retlw	13
  2641  00A4' 3419               	retlw	25
  2642  00A5' 340E               	retlw	14
  2643  00A6' 347B               	retlw	123
  2644  00A7' 340E               	retlw	14
  2645  00A8' 34E0               	retlw	224
  2646  00A9' 340E               	retlw	14
  2647  00AA' 3447               	retlw	71
  2648  00AB' 340F               	retlw	15
  2649  00AC' 34B2               	retlw	178
  2650  00AD' 340F               	retlw	15
  2651  00AE' 341F               	retlw	31
  2652  00AF' 3410               	retlw	16
  2653  00B0' 348F               	retlw	143
  2654  00B1' 3410               	retlw	16
  2655  00B2' 3402               	retlw	2
  2656  00B3' 3411               	retlw	17
  2657  00B4' 3479               	retlw	121
  2658  00B5' 3411               	retlw	17
  2659  00B6' 34F2               	retlw	242
  2660  00B7' 3411               	retlw	17
  2661  00B8' 346F               	retlw	111
  2662  00B9' 3412               	retlw	18
  2663  00BA' 34EF               	retlw	239
  2664  00BB' 3412               	retlw	18
  2665  00BC' 3473               	retlw	115
  2666  00BD' 3413               	retlw	19
  2667  00BE' 34FB               	retlw	251
  2668  00BF' 3413               	retlw	19
  2669  00C0' 3486               	retlw	134
  2670  00C1' 3414               	retlw	20
  2671  00C2' 3414               	retlw	20
  2672  00C3' 3415               	retlw	21
  2673  00C4' 34A7               	retlw	167
  2674  00C5' 3415               	retlw	21
  2675  00C6' 343E               	retlw	62
  2676  00C7' 3416               	retlw	22
  2677  00C8' 34D9               	retlw	217
  2678  00C9' 3416               	retlw	22
  2679  00CA' 3478               	retlw	120
  2680  00CB' 3417               	retlw	23
  2681  00CC' 341B               	retlw	27
  2682  00CD' 3418               	retlw	24
  2683  00CE'                    __end_of_co2_table:
  2684                           
  2685                           	psect	nvBANK3
  2686  0000'                    __pnvBANK3:
  2687  0000'                    _EUSART_ErrorHandler:
  2688  0000'                    	ds	2
  2689  0002'                    _EUSART_OverrunErrorHandler:
  2690  0002'                    	ds	2
  2691  0004'                    _EUSART_FramingErrorHandler:
  2692  0004'                    	ds	2
  2693  0011                     _PIR1bits	set	17
  2694  009D                     _ADCON0bits	set	157
  2695  009D                     _ADCON0	set	157
  2696  009C                     _ADRESH	set	156
  2697  009B                     _ADRESL	set	155
  2698  009F                     _ADACT	set	159
  2699  009E                     _ADCON1	set	158
  2700  008E                     _TRISC	set	142
  2701  008C                     _TRISA	set	140
  2702  0097                     _WDTCON	set	151
  2703  0117                     _FVRCONbits	set	279
  2704  0117                     _FVRCON	set	279
  2705  010E                     _LATC	set	270
  2706  010C                     _LATA	set	268
  2707  019A                     _TX1REG	set	410
  2708  0199                     _RC1REG	set	409
  2709  019D                     _RC1STAbits	set	413
  2710  019E                     _TX1STAbits	set	414
  2711  019C                     _SP1BRGH	set	412
  2712  019B                     _SP1BRGL	set	411
  2713  019E                     _TX1STA	set	414
  2714  019D                     _RC1STA	set	413
  2715  019F                     _BAUD1CON	set	415
  2716  018C                     _ANSELA	set	396
  2717  018E                     _ANSELC	set	398
  2718  020E                     _WPUC	set	526
  2719  020C                     _WPUA	set	524
  2720  028E                     _ODCONC	set	654
  2721  028C                     _ODCONA	set	652
  2722  030E                     _SLRCONC	set	782
  2723  030C                     _SLRCONA	set	780
  2724  038E                     _INLVLC	set	910
  2725  038C                     _INLVLA	set	908
  2726  0916                     _PMD5	set	2326
  2727  0915                     _PMD4	set	2325
  2728  0914                     _PMD3	set	2324
  2729  0913                     _PMD2	set	2323
  2730  0912                     _PMD1	set	2322
  2731  0911                     _PMD0	set	2321
  2732  091E                     _OSCTUNE	set	2334
  2733  091F                     _OSCFRQ	set	2335
  2734  091D                     _OSCEN	set	2333
  2735  091B                     _OSCCON3	set	2331
  2736  0919                     _OSCCON1	set	2329
  2737  0E24                     _RXPPS	set	3620
  2738  0EA4                     _RC4PPS	set	3748
  2739                           
  2740                           	psect	stringtext2
  2741  0000'                    __pstringtext2:
  2742  0000'                    STR_1:
  2743  0000' 3425               	retlw	37	;'%'
  2744  0001' 3464               	retlw	100	;'d'
  2745  0002' 342C               	retlw	44	;','
  2746  0003' 3425               	retlw	37	;'%'
  2747  0004' 3434               	retlw	52	;'4'
  2748  0005' 342E               	retlw	46	;'.'
  2749  0006' 3432               	retlw	50	;'2'
  2750  0007' 3466               	retlw	102	;'f'
  2751  0008' 3456               	retlw	86	;'V'
  2752  0009' 340D               	retlw	13
  2753  000A' 340A               	retlw	10
  2754  000B' 3400               	retlw	0
  2755                           
  2756                           	psect	stringtext3
  2757  0000'                    __pstringtext3:
  2758  0000'                    STR_2:
  2759  0000' 3449               	retlw	73	;'I'
  2760  0001' 344E               	retlw	78	;'N'
  2761  0002' 3446               	retlw	70	;'F'
  2762  0003' 3400               	retlw	0
  2763                           
  2764                           	psect	stringtext4
  2765  0000'                    __pstringtext4:
  2766  0000'                    STR_6:
  2767  0000' 344E               	retlw	78	;'N'
  2768  0001' 3441               	retlw	65	;'A'
  2769  0002' 344E               	retlw	78	;'N'
  2770  0003' 3400               	retlw	0
  2771                           
  2772                           	psect	stringtext5
  2773  0000'                    __pstringtext5:
  2774  0000'                    STR_3:
  2775  0000' 3469               	retlw	105	;'i'
  2776  0001' 346E               	retlw	110	;'n'
  2777  0002' 3466               	retlw	102	;'f'
  2778  0003' 3400               	retlw	0
  2779                           
  2780                           	psect	stringtext6
  2781  0000'                    __pstringtext6:
  2782  0000'                    STR_7:
  2783  0000' 346E               	retlw	110	;'n'
  2784  0001' 3461               	retlw	97	;'a'
  2785  0002' 346E               	retlw	110	;'n'
  2786  0003' 3400               	retlw	0
  2787                           
  2788                           	psect	stringtext7
  2789  0000'                    __pstringtext7:
  2790  0000'                    STR_10:
  2791  0000' 346C               	retlw	108	;'l'
  2792  0001' 3466               	retlw	102	;'f'
  2793  0002' 3400               	retlw	0
  2794                           
  2795                           	psect	stringtext8
  2796  0000'                    __pstringtext8:
  2797  0000'                    
  2798                           	psect	cinit
  2799  0000'                    start_initialization:	
  2800                           ; #config settings
  2801                           
  2802  0000'                    __initialization:	;BIGRAM
  2803                           
  2804                           ; Clear objects allocated to BIGRAM
  2805  0000' 301C               	movlw	low (0+8988)
  2806  0001' 0084               	movwf	4
  2807  0002' 3023               	movlw	high (0+8988)
  2808  0003' 0085               	movwf	5
  2809  0004' 30D4               	movlw	212
  2810  0005' 00FE               	movwf	btemp
  2811  0006' 3000               	movlw	0
  2812  0007' 00FF               	movwf	btemp+1
  2813  0008' 3180' 2000' 3180'  	fcall	clear_ram0
  2814                           
  2815                           ; Clear objects allocated to BANK2
  2816  000B' 0022               	movlb	2	; select bank2
  2817  000C' 0180'              	clrf	__pbssBANK2& (0+127)
  2818  000D' 0180'              	clrf	(__pbssBANK2+1)& (0+127)
  2819  000E' 0180'              	clrf	(__pbssBANK2+2)& (0+127)
  2820  000F' 0180'              	clrf	(__pbssBANK2+3)& (0+127)
  2821                           
  2822                           ; Clear objects allocated to BANK3
  2823  0010' 3000'              	movlw	low __pbssBANK3
  2824  0011' 0084               	movwf	4
  2825  0012' 3000'              	movlw	high __pbssBANK3
  2826  0013' 0085               	movwf	5
  2827  0014' 300F               	movlw	15
  2828  0015' 00FE               	movwf	btemp
  2829  0016' 3000               	movlw	0
  2830  0017' 00FF               	movwf	btemp+1
  2831  0018' 3180' 2000' 3180'  	fcall	clear_ram0
  2832                           
  2833                           ; Clear objects allocated to BANK4
  2834  001B' 3000'              	movlw	low __pbssBANK4
  2835  001C' 0084               	movwf	4
  2836  001D' 3000'              	movlw	high __pbssBANK4
  2837  001E' 0085               	movwf	5
  2838  001F' 3050               	movlw	80
  2839  0020' 00FE               	movwf	btemp
  2840  0021' 3000               	movlw	0
  2841  0022' 00FF               	movwf	btemp+1
  2842  0023' 3180' 2000' 3180'  	fcall	clear_ram0
  2843  0026'                    end_of_initialization:	
  2844                           ;End of C runtime variable initialization code
  2845                           
  2846  0026'                    __end_of__initialization:
  2847  0026' 0020               	movlb	0
  2848  0027' 3180' 2800'        	ljmp	_main	;jump to C main() function
  2849                           
  2850                           	psect	bssBANK2
  2851  0000'                    __pbssBANK2:
  2852  0000'                    _prec:
  2853  0000'                    	ds	2
  2854  0002'                    _flags:
  2855  0002'                    	ds	2
  2856                           
  2857                           	psect	bssBANK3
  2858  0000'                    __pbssBANK3:
  2859  0000'                    floorf@F527:
  2860  0000'                    	ds	4
  2861  0004'                    ___fpclassifyf@F465:
  2862  0004'                    	ds	4
  2863  0008'                    _nout:
  2864  0008'                    	ds	2
  2865  000A'                    _width:
  2866  000A'                    	ds	2
  2867  000C'                    _ADC_InterruptHandler:
  2868  000C'                    	ds	2
  2869  000E'                    _eusartRxLastError:
  2870  000E'                    	ds	1
  2871                           
  2872                           	psect	bssBANK4
  2873  0000'                    __pbssBANK4:
  2874  0000'                    _dbuf:
  2875  0000'                    	ds	80
  2876                           
  2877                           	psect	clrtext
  2878  0000'                    clear_ram0:	
  2879                           ;	Called with FSR0 containing the base address, and
  2880                           ;	btemp/btemp+1 has the size to clear
  2881                           
  2882  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  2883  0001'                    clrloop0:
  2884  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  2885  0002' 3101               	addfsr 0,1
  2886  0003' 3001               	movlw	1
  2887  0004' 02FE               	subwf	btemp,f
  2888  0005' 3000               	movlw	0
  2889  0006' 3BFF               	subwfb	btemp+1,f
  2890  0007' 087F               	movf	btemp+1,w
  2891  0008' 047E               	iorwf	btemp,w
  2892  0009' 1D03               	skipz
  2893  000A' 2800'              	goto	clrloop0	;have we reached the end yet?
  2894  000B' 3400               	retlw	0	;all done for this memory range, return
  2895                           
  2896                           	psect	cstackBANK2
  2897  0000'                    __pcstackBANK2:
  2898  0000'                    vfpfcnvrt@ll:
  2899                           
  2900                           ; 8 bytes @ 0x0
  2901  0000'                    	ds	8
  2902  0008'                    _vfpfcnvrt$1034:
  2903                           
  2904                           ; 2 bytes @ 0x8
  2905  0008'                    	ds	2
  2906  000A'                    _vfpfcnvrt$1035:
  2907                           
  2908                           ; 2 bytes @ 0xA
  2909  000A'                    	ds	2
  2910  000C'                    _vfpfcnvrt$1040:
  2911                           
  2912                           ; 2 bytes @ 0xC
  2913  000C'                    	ds	2
  2914  000E'                    vfpfcnvrt@f:
  2915                           
  2916                           ; 4 bytes @ 0xE
  2917  000E'                    	ds	4
  2918  0012'                    vfpfcnvrt@ct:
  2919                           
  2920                           ; 3 bytes @ 0x12
  2921  0012'                    	ds	3
  2922  0015'                    vfpfcnvrt@c:
  2923                           
  2924                           ; 1 bytes @ 0x15
  2925  0015'                    	ds	1
  2926  0016'                    vfpfcnvrt@fp:
  2927                           
  2928                           ; 1 bytes @ 0x16
  2929  0016'                    	ds	1
  2930  0017'                    vfprintf@fp:
  2931                           
  2932                           ; 1 bytes @ 0x17
  2933  0017'                    	ds	1
  2934  0018'                    vfprintf@cfmt:
  2935                           
  2936                           ; 2 bytes @ 0x18
  2937  0018'                    	ds	2
  2938  001A'                    ?_sprintf:
  2939  001A'                    sprintf@fmt:	
  2940                           ; 2 bytes @ 0x1A
  2941                           
  2942                           
  2943                           ; 2 bytes @ 0x1A
  2944  001A'                    	ds	10
  2945  0024'                    sprintf@s:
  2946                           
  2947                           ; 1 bytes @ 0x24
  2948  0024'                    	ds	1
  2949  0025'                    sprintf@ap:
  2950                           
  2951                           ; 1 bytes @ 0x25
  2952  0025'                    	ds	1
  2953  0026'                    sprintf@f:
  2954                           
  2955                           ; 5 bytes @ 0x26
  2956  0026'                    	ds	5
  2957  002B'                    ??_main:
  2958                           
  2959                           ; 1 bytes @ 0x2B
  2960  002B'                    	ds	2
  2961  002D'                    main@s:
  2962                           
  2963                           ; 20 bytes @ 0x2D
  2964  002D'                    	ds	20
  2965  0041'                    main@fco2:
  2966                           
  2967                           ; 4 bytes @ 0x41
  2968  0041'                    	ds	4
  2969  0045'                    main@fvr20:
  2970                           
  2971                           ; 4 bytes @ 0x45
  2972  0045'                    	ds	4
  2973  0049'                    main@p:
  2974                           
  2975                           ; 1 bytes @ 0x49
  2976  0049'                    	ds	1
  2977  004A'                    main@n:
  2978                           
  2979                           ; 2 bytes @ 0x4A
  2980  004A'                    	ds	2
  2981                           
  2982                           	psect	cstackBANK1
  2983  0000'                    __pcstackBANK1:
  2984  0000'                    ?_efgtoa:
  2985  0000'                    efgtoa@f:	
  2986                           ; 2 bytes @ 0x0
  2987                           
  2988                           
  2989                           ; 4 bytes @ 0x0
  2990  0000'                    	ds	4
  2991  0004'                    efgtoa@c:
  2992                           
  2993                           ; 1 bytes @ 0x4
  2994  0004'                    	ds	1
  2995  0005'                    ??_efgtoa:
  2996                           
  2997                           ; 1 bytes @ 0x5
  2998  0005'                    	ds	4
  2999  0009'                    _efgtoa$1009:
  3000                           
  3001                           ; 2 bytes @ 0x9
  3002  0009'                    	ds	2
  3003  000B'                    _efgtoa$1010:
  3004                           
  3005                           ; 2 bytes @ 0xB
  3006  000B'                    	ds	2
  3007  000D'                    _efgtoa$1014:
  3008                           
  3009                           ; 2 bytes @ 0xD
  3010  000D'                    	ds	2
  3011  000F'                    _efgtoa$1018:
  3012                           
  3013                           ; 2 bytes @ 0xF
  3014  000F'                    	ds	2
  3015  0011'                    _efgtoa$1019:
  3016                           
  3017                           ; 2 bytes @ 0x11
  3018  0011'                    	ds	2
  3019  0013'                    _efgtoa$1020:
  3020                           
  3021                           ; 2 bytes @ 0x13
  3022  0013'                    	ds	2
  3023  0015'                    efgtoa@t:
  3024                           
  3025                           ; 2 bytes @ 0x15
  3026  0015'                    	ds	2
  3027  0017'                    efgtoa@pp:
  3028                           
  3029                           ; 2 bytes @ 0x17
  3030  0017'                    	ds	2
  3031  0019'                    efgtoa@ne:
  3032                           
  3033                           ; 2 bytes @ 0x19
  3034  0019'                    	ds	2
  3035  001B'                    efgtoa@m:
  3036                           
  3037                           ; 2 bytes @ 0x1B
  3038  001B'                    	ds	2
  3039  001D'                    efgtoa@ou:
  3040                           
  3041                           ; 4 bytes @ 0x1D
  3042  001D'                    	ds	4
  3043  0021'                    efgtoa@d:
  3044                           
  3045                           ; 2 bytes @ 0x21
  3046  0021'                    	ds	2
  3047  0023'                    efgtoa@sign:
  3048                           
  3049                           ; 2 bytes @ 0x23
  3050  0023'                    	ds	2
  3051  0025'                    efgtoa@fp:
  3052                           
  3053                           ; 1 bytes @ 0x25
  3054  0025'                    	ds	1
  3055  0026'                    efgtoa@p:
  3056                           
  3057                           ; 2 bytes @ 0x26
  3058  0026'                    	ds	2
  3059  0028'                    efgtoa@w:
  3060                           
  3061                           ; 2 bytes @ 0x28
  3062  0028'                    	ds	2
  3063  002A'                    efgtoa@nmode:
  3064                           
  3065                           ; 1 bytes @ 0x2A
  3066  002A'                    	ds	1
  3067  002B'                    efgtoa@mode:
  3068                           
  3069                           ; 1 bytes @ 0x2B
  3070  002B'                    	ds	1
  3071  002C'                    efgtoa@h:
  3072                           
  3073                           ; 4 bytes @ 0x2C
  3074  002C'                    	ds	4
  3075  0030'                    efgtoa@l:
  3076                           
  3077                           ; 4 bytes @ 0x30
  3078  0030'                    	ds	4
  3079  0034'                    efgtoa@i:
  3080                           
  3081                           ; 2 bytes @ 0x34
  3082  0034'                    	ds	2
  3083  0036'                    efgtoa@g:
  3084                           
  3085                           ; 4 bytes @ 0x36
  3086  0036'                    	ds	4
  3087  003A'                    efgtoa@e:
  3088                           
  3089                           ; 2 bytes @ 0x3A
  3090  003A'                    	ds	2
  3091  003C'                    efgtoa@n:
  3092                           
  3093                           ; 2 bytes @ 0x3C
  3094  003C'                    	ds	2
  3095  003E'                    efgtoa@u:
  3096                           
  3097                           ; 4 bytes @ 0x3E
  3098  003E'                    	ds	4
  3099  0042'                    ?_vfpfcnvrt:
  3100  0042'                    vfpfcnvrt@fmt:	
  3101                           ; 2 bytes @ 0x42
  3102                           
  3103                           
  3104                           ; 1 bytes @ 0x42
  3105  0042'                    	ds	1
  3106  0043'                    vfpfcnvrt@ap:
  3107                           
  3108                           ; 1 bytes @ 0x43
  3109  0043'                    	ds	1
  3110  0044'                    ??_vfpfcnvrt:
  3111                           
  3112                           ; 1 bytes @ 0x44
  3113  0044'                    	ds	6
  3114  004A'                    ?_vfprintf:
  3115  004A'                    vfprintf@fmt:	
  3116                           ; 2 bytes @ 0x4A
  3117                           
  3118                           
  3119                           ; 2 bytes @ 0x4A
  3120  004A'                    	ds	2
  3121  004C'                    vfprintf@ap:
  3122                           
  3123                           ; 1 bytes @ 0x4C
  3124  004C'                    	ds	1
  3125  004D'                    ??_vfprintf:
  3126                           
  3127                           ; 1 bytes @ 0x4D
  3128  004D'                    	ds	2
  3129  004F'                    ??_sprintf:
  3130                           
  3131                           ; 1 bytes @ 0x4F
  3132  004F'                    	ds	1
  3133                           
  3134                           	psect	cstackCOMMON
  3135  0000'                    __pcstackCOMMON:
  3136  0000'                    ?___fleq:
  3137  0000'                    ?_PMD_Initialize:	
  3138                           ; 1 bit 
  3139                           
  3140  0000'                    ??_PMD_Initialize:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  0000'                    ?_PIN_MANAGER_Initialize:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  0000'                    ??_PIN_MANAGER_Initialize:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  0000'                    ?_OSCILLATOR_Initialize:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  0000'                    ??_OSCILLATOR_Initialize:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  0000'                    ?_WDT_Initialize:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  0000'                    ??_WDT_Initialize:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  0000'                    ?_FVR_Initialize:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164  0000'                    ??_FVR_Initialize:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167  0000'                    ?_ADC_Initialize:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170  0000'                    ??_ADC_Initialize:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173  0000'                    ?_EUSART_Initialize:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176  0000'                    ?_EUSART_SetFramingErrorHandler:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179  0000'                    ?_EUSART_SetOverrunErrorHandler:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182  0000'                    ?_EUSART_SetErrorHandler:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185  0000'                    ??_INTERRUPT_GlobalInterruptEnable:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188  0000'                    ??_INTERRUPT_PeripheralInterruptEnable:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191  0000'                    ?_strcpy:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194  0000'                    ?_putch:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197  0000'                    ??_putch:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200  0000'                    ?_SYSTEM_Initialize:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203  0000'                    ?_ADC_SelectChannel:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206  0000'                    ??_ADC_SelectChannel:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209  0000'                    ?_EUSART_Write:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212  0000'                    ??_EUSART_Write:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215  0000'                    ?_main:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218  0000'                    ??___aodiv:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221  0000'                    ??___aomod:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224  0000'                    ?_INTERRUPT_GlobalInterruptEnable:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227  0000'                    ?_INTERRUPT_PeripheralInterruptEnable:	
  3228                           ; 2 bytes @ 0x0
  3229                           
  3230  0000'                    ?__Umul8_16:	
  3231                           ; 2 bytes @ 0x0
  3232                           
  3233  0000'                    ?_fputc:	
  3234                           ; 2 bytes @ 0x0
  3235                           
  3236  0000'                    ?_strlen:	
  3237                           ; 2 bytes @ 0x0
  3238                           
  3239  0000'                    ?___fpclassifyf:	
  3240                           ; 2 bytes @ 0x0
  3241                           
  3242  0000'                    ?_isupper:	
  3243                           ; 2 bytes @ 0x0
  3244                           
  3245  0000'                    ?_isdigit:	
  3246                           ; 2 bytes @ 0x0
  3247                           
  3248  0000'                    ?_strncmp:	
  3249                           ; 2 bytes @ 0x0
  3250                           
  3251  0000'                    ?_isspace:	
  3252                           ; 2 bytes @ 0x0
  3253                           
  3254  0000'                    ?_ADC_GetConversion:	
  3255                           ; 2 bytes @ 0x0
  3256                           
  3257  0000'                    ?___wmul:	
  3258                           ; 2 bytes @ 0x0
  3259                           
  3260  0000'                    ?___awdiv:	
  3261                           ; 2 bytes @ 0x0
  3262                           
  3263  0000'                    ?___awmod:	
  3264                           ; 2 bytes @ 0x0
  3265                           
  3266  0000'                    ?___flneg:	
  3267                           ; 2 bytes @ 0x0
  3268                           
  3269  0000'                    ?___fladd:	
  3270                           ; 4 bytes @ 0x0
  3271                           
  3272  0000'                    ?___xxtofl:	
  3273                           ; 4 bytes @ 0x0
  3274                           
  3275  0000'                    EUSART_Write@txData:	
  3276                           ; 4 bytes @ 0x0
  3277                           
  3278  0000'                    __Umul8_16@multiplicand:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0000'                    putch@c:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0000'                    EUSART_SetFramingErrorHandler@interruptHandler:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0000'                    EUSART_SetOverrunErrorHandler@interruptHandler:	
  3288                           ; 2 bytes @ 0x0
  3289                           
  3290  0000'                    EUSART_SetErrorHandler@interruptHandler:	
  3291                           ; 2 bytes @ 0x0
  3292                           
  3293  0000'                    ___wmul@multiplier:	
  3294                           ; 2 bytes @ 0x0
  3295                           
  3296  0000'                    ___awdiv@divisor:	
  3297                           ; 2 bytes @ 0x0
  3298                           
  3299  0000'                    ___awmod@divisor:	
  3300                           ; 2 bytes @ 0x0
  3301                           
  3302  0000'                    isdigit@c:	
  3303                           ; 2 bytes @ 0x0
  3304                           
  3305  0000'                    isspace@c:	
  3306                           ; 2 bytes @ 0x0
  3307                           
  3308  0000'                    isupper@c:	
  3309                           ; 2 bytes @ 0x0
  3310                           
  3311  0000'                    fputc@c:	
  3312                           ; 2 bytes @ 0x0
  3313                           
  3314  0000'                    strcpy@src:	
  3315                           ; 2 bytes @ 0x0
  3316                           
  3317  0000'                    strncmp@_r:	
  3318                           ; 2 bytes @ 0x0
  3319                           
  3320  0000'                    ___fleq@ff1:	
  3321                           ; 2 bytes @ 0x0
  3322                           
  3323  0000'                    ___flneg@f1:	
  3324                           ; 4 bytes @ 0x0
  3325                           
  3326  0000'                    ___fladd@b:	
  3327                           ; 4 bytes @ 0x0
  3328                           
  3329  0000'                    ___xxtofl@val:	
  3330                           ; 4 bytes @ 0x0
  3331                           
  3332  0000'                    ___fpclassifyf@x:	
  3333                           ; 4 bytes @ 0x0
  3334                           
  3335                           
  3336                           ; 4 bytes @ 0x0
  3337  0000'                    	ds	1
  3338  0001'                    ADC_SelectChannel@channel:
  3339  0001'                    ___aodiv@counter:	
  3340                           ; 1 bytes @ 0x1
  3341                           
  3342  0001'                    ___aomod@counter:	
  3343                           ; 1 bytes @ 0x1
  3344                           
  3345                           
  3346                           ; 1 bytes @ 0x1
  3347  0001'                    	ds	1
  3348  0002'                    ??_EUSART_Initialize:
  3349  0002'                    ??_EUSART_SetFramingErrorHandler:	
  3350                           ; 1 bytes @ 0x2
  3351                           
  3352  0002'                    ??_EUSART_SetOverrunErrorHandler:	
  3353                           ; 1 bytes @ 0x2
  3354                           
  3355  0002'                    ??_EUSART_SetErrorHandler:	
  3356                           ; 1 bytes @ 0x2
  3357                           
  3358  0002'                    ??__Umul8_16:	
  3359                           ; 1 bytes @ 0x2
  3360                           
  3361  0002'                    ??_strlen:	
  3362                           ; 1 bytes @ 0x2
  3363                           
  3364  0002'                    ??_isupper:	
  3365                           ; 1 bytes @ 0x2
  3366                           
  3367  0002'                    ??_strcpy:	
  3368                           ; 1 bytes @ 0x2
  3369                           
  3370  0002'                    ??_isdigit:	
  3371                           ; 1 bytes @ 0x2
  3372                           
  3373  0002'                    ??_isspace:	
  3374                           ; 1 bytes @ 0x2
  3375                           
  3376  0002'                    ??_SYSTEM_Initialize:	
  3377                           ; 1 bytes @ 0x2
  3378                           
  3379  0002'                    ??_ADC_GetConversion:	
  3380                           ; 1 bytes @ 0x2
  3381                           
  3382  0002'                    ___aodiv@sign:	
  3383                           ; 1 bytes @ 0x2
  3384                           
  3385  0002'                    ___aomod@sign:	
  3386                           ; 1 bytes @ 0x2
  3387                           
  3388  0002'                    fputc@fp:	
  3389                           ; 1 bytes @ 0x2
  3390                           
  3391  0002'                    ___wmul@multiplicand:	
  3392                           ; 1 bytes @ 0x2
  3393                           
  3394  0002'                    ___awdiv@dividend:	
  3395                           ; 2 bytes @ 0x2
  3396                           
  3397  0002'                    ___awmod@dividend:	
  3398                           ; 2 bytes @ 0x2
  3399                           
  3400  0002'                    strncmp@n:	
  3401                           ; 2 bytes @ 0x2
  3402                           
  3403                           
  3404                           ; 2 bytes @ 0x2
  3405  0002'                    	ds	1
  3406  0003'                    ??_fputc:
  3407  0003'                    ?_abs:	
  3408                           ; 1 bytes @ 0x3
  3409                           
  3410  0003'                    ADC_GetConversion@channel:	
  3411                           ; 2 bytes @ 0x3
  3412                           
  3413  0003'                    strlen@a:	
  3414                           ; 1 bytes @ 0x3
  3415                           
  3416  0003'                    abs@a:	
  3417                           ; 1 bytes @ 0x3
  3418                           
  3419  0003'                    ___aodiv@quotient:	
  3420                           ; 2 bytes @ 0x3
  3421                           
  3422                           
  3423                           ; 8 bytes @ 0x3
  3424  0003'                    	ds	1
  3425  0004'                    ??___fpclassifyf:
  3426  0004'                    ??_strncmp:	
  3427                           ; 1 bytes @ 0x4
  3428                           
  3429  0004'                    ??___wmul:	
  3430                           ; 1 bytes @ 0x4
  3431                           
  3432  0004'                    ??___awdiv:	
  3433                           ; 1 bytes @ 0x4
  3434                           
  3435  0004'                    ??___awmod:	
  3436                           ; 1 bytes @ 0x4
  3437                           
  3438  0004'                    ??___flneg:	
  3439                           ; 1 bytes @ 0x4
  3440                           
  3441  0004'                    ??___xxtofl:	
  3442                           ; 1 bytes @ 0x4
  3443                           
  3444  0004'                    _isspace$1107:	
  3445                           ; 1 bytes @ 0x4
  3446                           
  3447  0004'                    strlen@s:	
  3448                           ; 1 bytes @ 0x4
  3449                           
  3450  0004'                    ___wmul@product:	
  3451                           ; 1 bytes @ 0x4
  3452                           
  3453  0004'                    __Umul8_16@product:	
  3454                           ; 2 bytes @ 0x4
  3455                           
  3456  0004'                    strcpy@s:	
  3457                           ; 2 bytes @ 0x4
  3458                           
  3459  0004'                    ___fleq@ff2:	
  3460                           ; 2 bytes @ 0x4
  3461                           
  3462  0004'                    ___fladd@a:	
  3463                           ; 4 bytes @ 0x4
  3464                           
  3465                           
  3466                           ; 4 bytes @ 0x4
  3467  0004'                    	ds	1
  3468  0005'                    ??_abs:
  3469  0005'                    ___awdiv@counter:	
  3470                           ; 1 bytes @ 0x5
  3471                           
  3472  0005'                    ___awmod@counter:	
  3473                           ; 1 bytes @ 0x5
  3474                           
  3475  0005'                    strncmp@_l:	
  3476                           ; 1 bytes @ 0x5
  3477                           
  3478                           
  3479                           ; 1 bytes @ 0x5
  3480  0005'                    	ds	1
  3481  0006'                    ?_tolower:
  3482  0006'                    ?_atoi:	
  3483                           ; 2 bytes @ 0x6
  3484                           
  3485  0006'                    ___awdiv@sign:	
  3486                           ; 2 bytes @ 0x6
  3487                           
  3488  0006'                    ___awmod@sign:	
  3489                           ; 1 bytes @ 0x6
  3490                           
  3491  0006'                    strcpy@d:	
  3492                           ; 1 bytes @ 0x6
  3493                           
  3494  0006'                    __Umul8_16@word_mpld:	
  3495                           ; 1 bytes @ 0x6
  3496                           
  3497  0006'                    atoi@s:	
  3498                           ; 2 bytes @ 0x6
  3499                           
  3500  0006'                    strncmp@r:	
  3501                           ; 2 bytes @ 0x6
  3502                           
  3503  0006'                    tolower@c:	
  3504                           ; 2 bytes @ 0x6
  3505                           
  3506                           
  3507                           ; 2 bytes @ 0x6
  3508  0006'                    	ds	1
  3509  0007'                    strcpy@dest:
  3510  0007'                    ___awdiv@quotient:	
  3511                           ; 1 bytes @ 0x7
  3512                           
  3513                           
  3514                           ; 2 bytes @ 0x7
  3515  0007'                    	ds	1
  3516  0008'                    ??_tolower:
  3517  0008'                    ??_atoi:	
  3518                           ; 1 bytes @ 0x8
  3519                           
  3520  0008'                    ??___fleq:	
  3521                           ; 1 bytes @ 0x8
  3522                           
  3523  0008'                    ?_fputs:	
  3524                           ; 1 bytes @ 0x8
  3525                           
  3526  0008'                    ___fladd@signs:	
  3527                           ; 2 bytes @ 0x8
  3528                           
  3529  0008'                    __Umul8_16@multiplier:	
  3530                           ; 1 bytes @ 0x8
  3531                           
  3532  0008'                    ___xxtofl@sign:	
  3533                           ; 1 bytes @ 0x8
  3534                           
  3535  0008'                    fputs@fp:	
  3536                           ; 1 bytes @ 0x8
  3537                           
  3538  0008'                    strncmp@l:	
  3539                           ; 1 bytes @ 0x8
  3540                           
  3541                           
  3542                           ; 1 bytes @ 0x8
  3543  0008'                    	ds	1
  3544  0009'                    ??_fputs:
  3545  0009'                    ___fladd@aexp:	
  3546                           ; 1 bytes @ 0x9
  3547                           
  3548  0009'                    ___xxtofl@exp:	
  3549                           ; 1 bytes @ 0x9
  3550                           
  3551                           
  3552                           ; 1 bytes @ 0x9
  3553  0009'                    	ds	1
  3554  000A'                    ___fladd@bexp:
  3555  000A'                    ___xxtofl@arg:	
  3556                           ; 1 bytes @ 0xA
  3557                           
  3558                           
  3559                           ; 4 bytes @ 0xA
  3560  000A'                    	ds	1
  3561  000B'                    ___fladd@grs:
  3562                           
  3563                           ; 1 bytes @ 0xB
  3564  000B'                    	ds	1
  3565  000C'                    ??___flsub:
  3566  000C'                    ??_pad:	
  3567                           ; 1 bytes @ 0xC
  3568                           
  3569  000C'                    ___fltol@sign1:	
  3570                           ; 1 bytes @ 0xC
  3571                           
  3572  000C'                    _tolower$1171:	
  3573                           ; 1 bytes @ 0xC
  3574                           
  3575                           
  3576                           ; 2 bytes @ 0xC
  3577  000C'                    	ds	1
  3578  000D'                    ___fltol@exp1:
  3579                           
  3580                           ; 1 bytes @ 0xD
  3581  000D'                    	ds	1
  3582                           
  3583                           	psect	cstackBANK0
  3584  0000'                    __pcstackBANK0:
  3585  0000'                    ??___fladd:
  3586  0000'                    ?___aodiv:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  0000'                    ?___aomod:	
  3590                           ; 8 bytes @ 0x0
  3591                           
  3592  0000'                    fputs@c:	
  3593                           ; 8 bytes @ 0x0
  3594                           
  3595  0000'                    ___fpclassifyf@e:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  0000'                    atoi@neg:	
  3599                           ; 2 bytes @ 0x0
  3600                           
  3601  0000'                    ___aodiv@divisor:	
  3602                           ; 2 bytes @ 0x0
  3603                           
  3604  0000'                    ___aomod@divisor:	
  3605                           ; 8 bytes @ 0x0
  3606                           
  3607                           
  3608                           ; 8 bytes @ 0x0
  3609  0000'                    	ds	1
  3610  0001'                    fputs@i:
  3611                           
  3612                           ; 2 bytes @ 0x1
  3613  0001'                    	ds	1
  3614  0002'                    _atoi$1076:
  3615  0002'                    ___fpclassifyf@u:	
  3616                           ; 2 bytes @ 0x2
  3617                           
  3618                           
  3619                           ; 4 bytes @ 0x2
  3620  0002'                    	ds	1
  3621  0003'                    fputs@s:
  3622                           
  3623                           ; 1 bytes @ 0x3
  3624  0003'                    	ds	1
  3625  0004'                    ?_pad:
  3626  0004'                    pad@buf:	
  3627                           ; 2 bytes @ 0x4
  3628                           
  3629  0004'                    _atoi$1078:	
  3630                           ; 1 bytes @ 0x4
  3631                           
  3632                           
  3633                           ; 2 bytes @ 0x4
  3634  0004'                    	ds	1
  3635  0005'                    pad@p:
  3636                           
  3637                           ; 2 bytes @ 0x5
  3638  0005'                    	ds	1
  3639  0006'                    _atoi$1077:
  3640                           
  3641                           ; 1 bytes @ 0x6
  3642  0006'                    	ds	1
  3643  0007'                    pad@i:
  3644  0007'                    atoi@n:	
  3645                           ; 2 bytes @ 0x7
  3646                           
  3647                           
  3648                           ; 2 bytes @ 0x7
  3649  0007'                    	ds	1
  3650  0008'                    ?___flsub:
  3651  0008'                    ___flsub@a:	
  3652                           ; 4 bytes @ 0x8
  3653                           
  3654  0008'                    ___aodiv@dividend:	
  3655                           ; 4 bytes @ 0x8
  3656                           
  3657  0008'                    ___aomod@dividend:	
  3658                           ; 8 bytes @ 0x8
  3659                           
  3660                           
  3661                           ; 8 bytes @ 0x8
  3662  0008'                    	ds	1
  3663  0009'                    pad@w:
  3664                           
  3665                           ; 2 bytes @ 0x9
  3666  0009'                    	ds	2
  3667  000B'                    pad@fp:
  3668                           
  3669                           ; 1 bytes @ 0xB
  3670  000B'                    	ds	1
  3671  000C'                    ___flsub@b:
  3672                           
  3673                           ; 4 bytes @ 0xC
  3674  000C'                    	ds	4
  3675  0010'                    ?_dtoa:
  3676  0010'                    ?___fldiv:	
  3677                           ; 2 bytes @ 0x10
  3678                           
  3679  0010'                    ___fldiv@a:	
  3680                           ; 4 bytes @ 0x10
  3681                           
  3682  0010'                    dtoa@d:	
  3683                           ; 4 bytes @ 0x10
  3684                           
  3685                           
  3686                           ; 8 bytes @ 0x10
  3687  0010'                    	ds	4
  3688  0014'                    ___fldiv@b:
  3689                           
  3690                           ; 4 bytes @ 0x14
  3691  0014'                    	ds	4
  3692  0018'                    ??___fldiv:
  3693  0018'                    ??_dtoa:	
  3694                           ; 1 bytes @ 0x18
  3695                           
  3696                           
  3697                           ; 1 bytes @ 0x18
  3698  0018'                    	ds	3
  3699  001B'                    _dtoa$985:
  3700                           
  3701                           ; 2 bytes @ 0x1B
  3702  001B'                    	ds	2
  3703  001D'                    dtoa@fp:
  3704  001D'                    ___fldiv@rem:	
  3705                           ; 1 bytes @ 0x1D
  3706                           
  3707                           
  3708                           ; 4 bytes @ 0x1D
  3709  001D'                    	ds	1
  3710  001E'                    dtoa@p:
  3711                           
  3712                           ; 2 bytes @ 0x1E
  3713  001E'                    	ds	2
  3714  0020'                    dtoa@w:
  3715                           
  3716                           ; 2 bytes @ 0x20
  3717  0020'                    	ds	1
  3718  0021'                    ___fldiv@sign:
  3719                           
  3720                           ; 1 bytes @ 0x21
  3721  0021'                    	ds	1
  3722  0022'                    ___fldiv@new_exp:
  3723  0022'                    dtoa@s:	
  3724                           ; 2 bytes @ 0x22
  3725                           
  3726                           
  3727                           ; 2 bytes @ 0x22
  3728  0022'                    	ds	2
  3729  0024'                    ___fldiv@grs:
  3730  0024'                    dtoa@n:	
  3731                           ; 4 bytes @ 0x24
  3732                           
  3733                           
  3734                           ; 8 bytes @ 0x24
  3735  0024'                    	ds	4
  3736  0028'                    ___fldiv@bexp:
  3737                           
  3738                           ; 1 bytes @ 0x28
  3739  0028'                    	ds	1
  3740  0029'                    ___fldiv@aexp:
  3741                           
  3742                           ; 1 bytes @ 0x29
  3743  0029'                    	ds	1
  3744  002A'                    ?_floorf:
  3745  002A'                    ?___fltol:	
  3746                           ; 4 bytes @ 0x2A
  3747                           
  3748  002A'                    ?___flmul:	
  3749                           ; 4 bytes @ 0x2A
  3750                           
  3751  002A'                    ___fltol@f1:	
  3752                           ; 4 bytes @ 0x2A
  3753                           
  3754  002A'                    ___flmul@b:	
  3755                           ; 4 bytes @ 0x2A
  3756                           
  3757  002A'                    floorf@x:	
  3758                           ; 4 bytes @ 0x2A
  3759                           
  3760                           
  3761                           ; 4 bytes @ 0x2A
  3762  002A'                    	ds	2
  3763  002C'                    dtoa@i:
  3764                           
  3765                           ; 2 bytes @ 0x2C
  3766  002C'                    	ds	2
  3767  002E'                    ??_floorf:
  3768  002E'                    ??___fltol:	
  3769                           ; 1 bytes @ 0x2E
  3770                           
  3771  002E'                    ___flmul@a:	
  3772                           ; 1 bytes @ 0x2E
  3773                           
  3774                           
  3775                           ; 4 bytes @ 0x2E
  3776  002E'                    	ds	4
  3777  0032'                    ??___flmul:
  3778                           
  3779                           ; 1 bytes @ 0x32
  3780  0032'                    	ds	2
  3781  0034'                    floorf@m:
  3782                           
  3783                           ; 4 bytes @ 0x34
  3784  0034'                    	ds	3
  3785  0037'                    ___flmul@sign:
  3786                           
  3787                           ; 1 bytes @ 0x37
  3788  0037'                    	ds	1
  3789  0038'                    floorf@e:
  3790  0038'                    ___flmul@grs:	
  3791                           ; 2 bytes @ 0x38
  3792                           
  3793                           
  3794                           ; 4 bytes @ 0x38
  3795  0038'                    	ds	2
  3796  003A'                    floorf@u:
  3797                           
  3798                           ; 4 bytes @ 0x3A
  3799  003A'                    	ds	2
  3800  003C'                    ___flmul@aexp:
  3801                           
  3802                           ; 1 bytes @ 0x3C
  3803  003C'                    	ds	1
  3804  003D'                    ___flmul@bexp:
  3805                           
  3806                           ; 1 bytes @ 0x3D
  3807  003D'                    	ds	1
  3808  003E'                    ___flmul@prod:
  3809                           
  3810                           ; 4 bytes @ 0x3E
  3811  003E'                    	ds	4
  3812  0042'                    ___flmul@temp:
  3813                           
  3814                           ; 2 bytes @ 0x42
  3815  0042'                    	ds	2
  3816  0044'                    ?___flge:
  3817  0044'                    ___flge@ff1:	
  3818                           ; 1 bit 
  3819                           
  3820                           
  3821                           ; 4 bytes @ 0x44
  3822  0044'                    	ds	4
  3823  0048'                    ___flge@ff2:
  3824                           
  3825                           ; 4 bytes @ 0x48
  3826  0048'                    	ds	4
  3827  004C'                    ??___flge:
  3828                           
  3829                           ; 1 bytes @ 0x4C
  3830  004C'                    	ds	4
  3831                           
  3832                           	psect	maintext
  3833  0000'                    __pmaintext:	
  3834 ;;
  3835 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3836 ;;
  3837 ;; *************** function _main *****************
  3838 ;; Defined at:
  3839 ;;		line 82 in file "main.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  s              20   45[BANK2 ] unsigned char [20]
  3844 ;;  fvr20           4   69[BANK2 ] float 
  3845 ;;  fco2            4   65[BANK2 ] float 
  3846 ;;  e               4    0        float 
  3847 ;;  n               2   74[BANK2 ] int 
  3848 ;;  p               1   73[BANK2 ] PTR unsigned char 
  3849 ;;		 -> main@s(20), 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : B1F/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Locals:         0       0       0      31       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;      Totals:         0       0       0      33       0       0       0       0       0       0       0       0       
      +0       0
  3863 ;;Total ram usage:       33 bytes
  3864 ;; Hardware stack levels required when called:    8
  3865 ;; This function calls:
  3866 ;;		_ADC_GetConversion
  3867 ;;		_ADC_SelectChannel
  3868 ;;		_EUSART_Write
  3869 ;;		_INTERRUPT_GlobalInterruptEnable
  3870 ;;		_INTERRUPT_PeripheralInterruptEnable
  3871 ;;		_SYSTEM_Initialize
  3872 ;;		___fldiv
  3873 ;;		___flmul
  3874 ;;		___flsub
  3875 ;;		___fltol
  3876 ;;		___xxtofl
  3877 ;;		_sprintf
  3878 ;; This function is called by:
  3879 ;;		Startup code after reset
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _main
  3885  0000'                    _main:
  3886  0000'                    l4563:	
  3887                           ;incstack = 0
  3888                           ; Regs used in _main: [allreg]
  3889                           
  3890                           
  3891                           ;main.c: 85:     SYSTEM_Initialize();
  3892  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  3893  0003'                    l4565:
  3894                           
  3895                           ;main.c: 91:     INTERRUPT_GlobalInterruptEnable();
  3896  0003' 3180' 2000' 3180'  	fcall	_INTERRUPT_GlobalInterruptEnable
  3897  0006'                    l4567:
  3898                           
  3899                           ;main.c: 94:     INTERRUPT_PeripheralInterruptEnable();
  3900  0006' 3180' 2000' 3180'  	fcall	_INTERRUPT_PeripheralInterruptEnable
  3901  0009'                    l251:	
  3902                           ;main.c: 103:     while (1)
  3903                           
  3904                           
  3905                           ;main.c: 104:     {;main.c: 105:         char s[20];;main.c: 106:         char *p;;main.
      +                          c: 107:         float fco2,fvr20;;main.c: 108:         float e;;main.c: 109:         int
      +                           n;;main.c: 111:         ADC_SelectChannel(0b000010); _delay((unsigned long)((20)*(40000
      +                          00/4000000.0)));
  3906  0009' 3002               	movlw	2
  3907  000A' 3180' 2000' 3180'  	fcall	_ADC_SelectChannel
  3908  000D'                    l4569:
  3909  000D' 3006               	movlw	6
  3910  000E'                    u6617:
  3911  000E' 0B89               	decfsz	9,f
  3912  000F' 2800'              	goto	u6617
  3913  0010' 3200               	nop2
  3914  0011'                    l4571:
  3915                           
  3916                           ;main.c: 112:         tSys.co2val = ADC_GetConversion(0b000010);
  3917  0011' 3002               	movlw	2
  3918  0012' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  3919  0015' 301C               	movlw	28
  3920  0016' 0086               	movwf	6
  3921  0017' 3023               	movlw	35
  3922  0018' 0087               	movwf	7
  3923  0019' 0800'              	movf	?_ADC_GetConversion,w
  3924  001A' 3FC0               	movwi [0]fsr1
  3925  001B' 0801'              	movf	?_ADC_GetConversion+1,w
  3926  001C' 3FC1               	movwi [1]fsr1
  3927  001D'                    l4573:
  3928                           
  3929                           ;main.c: 114:         ADC_SelectChannel(0b111111); _delay((unsigned long)((20)*(4000000/
      +                          4000000.0)));
  3930  001D' 303F               	movlw	63
  3931  001E' 3180' 2000' 3180'  	fcall	_ADC_SelectChannel
  3932  0021'                    l4575:
  3933  0021' 3006               	movlw	6
  3934  0022'                    u6627:
  3935  0022' 0B89               	decfsz	9,f
  3936  0023' 2800'              	goto	u6627
  3937  0024' 3200               	nop2
  3938                           
  3939                           ;main.c: 115:         tSys.fvr20 = ADC_GetConversion(0b111111);
  3940  0025' 303F               	movlw	63
  3941  0026' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  3942  0029' 301C               	movlw	28
  3943  002A' 0086               	movwf	6
  3944  002B' 3023               	movlw	35
  3945  002C' 0087               	movwf	7
  3946  002D' 3142               	addfsr 1,2
  3947  002E' 0800'              	movf	?_ADC_GetConversion,w
  3948  002F' 3FC0               	movwi [0]fsr1
  3949  0030' 0801'              	movf	?_ADC_GetConversion+1,w
  3950  0031' 3FC1               	movwi [1]fsr1
  3951                           
  3952                           ;main.c: 116:         fvr20 = tSys.fvr20;
  3953  0032' 301C               	movlw	28
  3954  0033' 0086               	movwf	6
  3955  0034' 3023               	movlw	35
  3956  0035' 0087               	movwf	7
  3957  0036' 3142               	addfsr 1,2
  3958  0037' 3F40               	moviw [0]fsr1
  3959  0038' 0022               	movlb	2	; select bank2
  3960  0039' 0080'              	movwf	??_main^(0+256)
  3961  003A' 3F41               	moviw [1]fsr1
  3962  003B' 0081'              	movwf	(??_main^(0+256)+1)
  3963  003C' 0800'              	movf	??_main^(0+256),w
  3964  003D' 0080'              	movwf	___xxtofl@val
  3965  003E' 0800'              	movf	(??_main+1)^(0+256),w
  3966  003F' 0081'              	movwf	___xxtofl@val+1
  3967  0040' 0182'              	clrf	___xxtofl@val+2
  3968  0041' 0183'              	clrf	___xxtofl@val+3
  3969  0042' 3000               	movlw	0
  3970  0043' 3180' 2000' 3180'  	fcall	___xxtofl
  3971  0046' 0803'              	movf	?___xxtofl+3,w
  3972  0047' 0022               	movlb	2	; select bank2
  3973  0048' 0080'              	movwf	(main@fvr20+3)^(0+256)
  3974  0049' 0802'              	movf	?___xxtofl+2,w
  3975  004A' 0080'              	movwf	(main@fvr20+2)^(0+256)
  3976  004B' 0801'              	movf	?___xxtofl+1,w
  3977  004C' 0080'              	movwf	(main@fvr20+1)^(0+256)
  3978  004D' 0800'              	movf	?___xxtofl,w
  3979  004E' 0080'              	movwf	main@fvr20^(0+256)
  3980                           
  3981                           ;main.c: 117:         fco2 = tSys.co2val;
  3982  004F' 301C               	movlw	28
  3983  0050' 0086               	movwf	6
  3984  0051' 3023               	movlw	35
  3985  0052' 0087               	movwf	7
  3986  0053' 3F40               	moviw [0]fsr1
  3987  0054' 0080'              	movwf	??_main^(0+256)
  3988  0055' 3F41               	moviw [1]fsr1
  3989  0056' 0081'              	movwf	(??_main^(0+256)+1)
  3990  0057' 0800'              	movf	??_main^(0+256),w
  3991  0058' 0080'              	movwf	___xxtofl@val
  3992  0059' 0800'              	movf	(??_main+1)^(0+256),w
  3993  005A' 0081'              	movwf	___xxtofl@val+1
  3994  005B' 0182'              	clrf	___xxtofl@val+2
  3995  005C' 0183'              	clrf	___xxtofl@val+3
  3996  005D' 3000               	movlw	0
  3997  005E' 3180' 2000' 3180'  	fcall	___xxtofl
  3998  0061' 0803'              	movf	?___xxtofl+3,w
  3999  0062' 0022               	movlb	2	; select bank2
  4000  0063' 0080'              	movwf	(main@fco2+3)^(0+256)
  4001  0064' 0802'              	movf	?___xxtofl+2,w
  4002  0065' 0080'              	movwf	(main@fco2+2)^(0+256)
  4003  0066' 0801'              	movf	?___xxtofl+1,w
  4004  0067' 0080'              	movwf	(main@fco2+1)^(0+256)
  4005  0068' 0800'              	movf	?___xxtofl,w
  4006  0069' 0080'              	movwf	main@fco2^(0+256)
  4007                           
  4008                           ;main.c: 118:         tSys.fco2v = fco2 * (2.048/fvr20);
  4009  006A' 0800'              	movf	(main@fco2+3)^(0+256),w
  4010  006B' 0020               	movlb	0	; select bank0
  4011  006C' 00AD'              	movwf	___flmul@b+3
  4012  006D' 0022               	movlb	2	; select bank2
  4013  006E' 0800'              	movf	(main@fco2+2)^(0+256),w
  4014  006F' 0020               	movlb	0	; select bank0
  4015  0070' 00AC'              	movwf	___flmul@b+2
  4016  0071' 0022               	movlb	2	; select bank2
  4017  0072' 0800'              	movf	(main@fco2+1)^(0+256),w
  4018  0073' 0020               	movlb	0	; select bank0
  4019  0074' 00AB'              	movwf	___flmul@b+1
  4020  0075' 0022               	movlb	2	; select bank2
  4021  0076' 0800'              	movf	main@fco2^(0+256),w
  4022  0077' 0020               	movlb	0	; select bank0
  4023  0078' 00AA'              	movwf	___flmul@b
  4024  0079' 0022               	movlb	2	; select bank2
  4025  007A' 0800'              	movf	(main@fvr20+3)^(0+256),w
  4026  007B' 0020               	movlb	0	; select bank0
  4027  007C' 0093'              	movwf	___fldiv@a+3
  4028  007D' 0022               	movlb	2	; select bank2
  4029  007E' 0800'              	movf	(main@fvr20+2)^(0+256),w
  4030  007F' 0020               	movlb	0	; select bank0
  4031  0080' 0092'              	movwf	___fldiv@a+2
  4032  0081' 0022               	movlb	2	; select bank2
  4033  0082' 0800'              	movf	(main@fvr20+1)^(0+256),w
  4034  0083' 0020               	movlb	0	; select bank0
  4035  0084' 0091'              	movwf	___fldiv@a+1
  4036  0085' 0022               	movlb	2	; select bank2
  4037  0086' 0800'              	movf	main@fvr20^(0+256),w
  4038  0087' 0020               	movlb	0	; select bank0
  4039  0088' 0090'              	movwf	___fldiv@a
  4040  0089' 3040               	movlw	64
  4041  008A' 0097'              	movwf	___fldiv@b+3
  4042  008B' 3003               	movlw	3
  4043  008C' 0096'              	movwf	___fldiv@b+2
  4044  008D' 3012               	movlw	18
  4045  008E' 0095'              	movwf	___fldiv@b+1
  4046  008F' 306F               	movlw	111
  4047  0090' 0094'              	movwf	___fldiv@b
  4048  0091' 3180' 2000' 3180'  	fcall	___fldiv
  4049  0094' 0020               	movlb	0	; select bank0
  4050  0095' 0813'              	movf	?___fldiv+3,w
  4051  0096' 00B1'              	movwf	___flmul@a+3
  4052  0097' 0812'              	movf	?___fldiv+2,w
  4053  0098' 00B0'              	movwf	___flmul@a+2
  4054  0099' 0811'              	movf	?___fldiv+1,w
  4055  009A' 00AF'              	movwf	___flmul@a+1
  4056  009B' 0810'              	movf	?___fldiv,w
  4057  009C' 00AE'              	movwf	___flmul@a
  4058  009D' 3180' 2000' 3180'  	fcall	___flmul
  4059  00A0' 30E8               	movlw	232
  4060  00A1' 0086               	movwf	6
  4061  00A2' 3023               	movlw	35
  4062  00A3' 0087               	movwf	7
  4063  00A4' 0020               	movlb	0	; select bank0
  4064  00A5' 082A'              	movf	?___flmul,w
  4065  00A6' 3FC0               	movwi [0]fsr1
  4066  00A7' 082B'              	movf	?___flmul+1,w
  4067  00A8' 3FC1               	movwi [1]fsr1
  4068  00A9' 082C'              	movf	?___flmul+2,w
  4069  00AA' 3FC2               	movwi [2]fsr1
  4070  00AB' 082D'              	movf	?___flmul+3,w
  4071  00AC' 3FC3               	movwi [3]fsr1
  4072                           
  4073                           ;main.c: 120:         n = (3.23-tSys.fco2v)/(5E-3);
  4074  00AD' 3040               	movlw	64
  4075  00AE' 008F'              	movwf	___flsub@b+3
  4076  00AF' 304E               	movlw	78
  4077  00B0' 008E'              	movwf	___flsub@b+2
  4078  00B1' 30B8               	movlw	184
  4079  00B2' 008D'              	movwf	___flsub@b+1
  4080  00B3' 3052               	movlw	82
  4081  00B4' 008C'              	movwf	___flsub@b
  4082  00B5' 30E8               	movlw	232
  4083  00B6' 0086               	movwf	6
  4084  00B7' 3023               	movlw	35
  4085  00B8' 0087               	movwf	7
  4086  00B9' 3F40               	moviw [0]fsr1
  4087  00BA' 0088'              	movwf	___flsub@a
  4088  00BB' 3F41               	moviw [1]fsr1
  4089  00BC' 0089'              	movwf	___flsub@a+1
  4090  00BD' 3F42               	moviw [2]fsr1
  4091  00BE' 008A'              	movwf	___flsub@a+2
  4092  00BF' 3F43               	moviw [3]fsr1
  4093  00C0' 008B'              	movwf	___flsub@a+3
  4094  00C1' 3180' 2000' 3180'  	fcall	___flsub
  4095  00C4' 0020               	movlb	0	; select bank0
  4096  00C5' 080B'              	movf	?___flsub+3,w
  4097  00C6' 0097'              	movwf	___fldiv@b+3
  4098  00C7' 080A'              	movf	?___flsub+2,w
  4099  00C8' 0096'              	movwf	___fldiv@b+2
  4100  00C9' 0809'              	movf	?___flsub+1,w
  4101  00CA' 0095'              	movwf	___fldiv@b+1
  4102  00CB' 0808'              	movf	?___flsub,w
  4103  00CC' 0094'              	movwf	___fldiv@b
  4104  00CD' 303B               	movlw	59
  4105  00CE' 0093'              	movwf	___fldiv@a+3
  4106  00CF' 30A3               	movlw	163
  4107  00D0' 0092'              	movwf	___fldiv@a+2
  4108  00D1' 30D7               	movlw	215
  4109  00D2' 0091'              	movwf	___fldiv@a+1
  4110  00D3' 300A               	movlw	10
  4111  00D4' 0090'              	movwf	___fldiv@a
  4112  00D5' 3180' 2000' 3180'  	fcall	___fldiv
  4113  00D8' 0020               	movlb	0	; select bank0
  4114  00D9' 0813'              	movf	?___fldiv+3,w
  4115  00DA' 00AD'              	movwf	___fltol@f1+3
  4116  00DB' 0812'              	movf	?___fldiv+2,w
  4117  00DC' 00AC'              	movwf	___fltol@f1+2
  4118  00DD' 0811'              	movf	?___fldiv+1,w
  4119  00DE' 00AB'              	movwf	___fltol@f1+1
  4120  00DF' 0810'              	movf	?___fldiv,w
  4121  00E0' 00AA'              	movwf	___fltol@f1
  4122  00E1' 3180' 2000' 3180'  	fcall	___fltol
  4123  00E4' 0020               	movlb	0	; select bank0
  4124  00E5' 082B'              	movf	?___fltol+1,w
  4125  00E6' 0022               	movlb	2	; select bank2
  4126  00E7' 0080'              	movwf	(main@n+1)^(0+256)
  4127  00E8' 0020               	movlb	0	; select bank0
  4128  00E9' 082A'              	movf	?___fltol,w
  4129  00EA' 0022               	movlb	2	; select bank2
  4130  00EB' 0080'              	movwf	main@n^(0+256)
  4131  00EC'                    l4577:
  4132                           
  4133                           ;main.c: 121:         if(n<0) n= 0;
  4134  00EC' 1F80'              	btfss	(main@n+1)^(0+256),7
  4135  00ED' 2800'              	goto	u6581
  4136  00EE' 2800'              	goto	u6580
  4137  00EF'                    u6581:
  4138  00EF' 2800'              	goto	l4581
  4139  00F0'                    u6580:
  4140  00F0'                    l4579:
  4141  00F0' 0180'              	clrf	main@n^(0+256)
  4142  00F1' 0180'              	clrf	(main@n+1)^(0+256)
  4143  00F2' 2800'              	goto	l4585
  4144  00F3'                    l4581:
  4145  00F3' 3000               	movlw	0
  4146  00F4' 0200'              	subwf	(main@n+1)^(0+256),w
  4147  00F5' 3067               	movlw	103
  4148  00F6' 1903               	skipnz
  4149  00F7' 0200'              	subwf	main@n^(0+256),w
  4150  00F8' 1C03               	skipc
  4151  00F9' 2800'              	goto	u6591
  4152  00FA' 2800'              	goto	u6590
  4153  00FB'                    u6591:
  4154  00FB' 2800'              	goto	l4585
  4155  00FC'                    u6590:
  4156  00FC'                    l4583:
  4157  00FC' 3066               	movlw	102
  4158  00FD' 0080'              	movwf	main@n^(0+256)
  4159  00FE' 3000               	movlw	0
  4160  00FF' 0081'              	movwf	(main@n^(0+256)+1)
  4161  0100'                    l4585:
  4162                           
  4163                           ;main.c: 123:         sprintf(s,"%d,%4.2fV\r\n",co2_table[n],tSys.fco2v);
  4164  0100' 3000'              	movlw	low (STR_1| (0+32768))
  4165  0101' 0080'              	movwf	sprintf@fmt^(0+256)
  4166  0102' 3000'              	movlw	high (STR_1| (0+32768))
  4167  0103' 0081'              	movwf	(sprintf@fmt^(0+256)+1)
  4168  0104' 0800'              	movf	(main@n+1)^(0+256),w
  4169  0105' 0085               	movwf	5
  4170  0106' 0800'              	movf	main@n^(0+256),w
  4171  0107' 0084               	movwf	4
  4172  0108' 3584               	lslf	4,f
  4173  0109' 0D85               	rlf	5,f
  4174  010A' 3000'              	movlw	low (_co2_table| (0+32768))
  4175  010B' 0784               	addwf	4,f
  4176  010C' 3000'              	movlw	high (_co2_table| (0+32768))
  4177  010D' 3D85               	addwfc	5,f
  4178  010E' 3F00               	moviw [0]fsr0
  4179  010F' 0082'              	movwf	(?_sprintf^(0+256)+2)
  4180  0110' 3F01               	moviw [1]fsr0
  4181  0111' 0082'              	movwf	((?_sprintf+1)^(0+256)+2)
  4182  0112' 30E8               	movlw	232
  4183  0113' 0086               	movwf	6
  4184  0114' 3023               	movlw	35
  4185  0115' 0087               	movwf	7
  4186  0116' 3F40               	moviw [0]fsr1
  4187  0117' 0084'              	movwf	(?_sprintf^(0+256)+4)
  4188  0118' 3F41               	moviw [1]fsr1
  4189  0119' 0084'              	movwf	((?_sprintf+1)^(0+256)+4)
  4190  011A' 3F42               	moviw [2]fsr1
  4191  011B' 0084'              	movwf	((?_sprintf+2)^(0+256)+4)
  4192  011C' 3F43               	moviw [3]fsr1
  4193  011D' 0084'              	movwf	((?_sprintf+3)^(0+256)+4)
  4194  011E' 3000'              	movlw	(low (main@s| (0+256)))& (0+255)
  4195  011F' 3180' 2000' 3180'  	fcall	_sprintf
  4196  0122'                    l4587:
  4197                           
  4198                           ;main.c: 124:         p = s;
  4199  0122' 3000'              	movlw	(low (main@s| (0+256)))& (0+255)
  4200  0123' 0022               	movlb	2	; select bank2
  4201  0124' 0080'              	movwf	??_main^(0+256)
  4202  0125' 0800'              	movf	??_main^(0+256),w
  4203  0126' 0080'              	movwf	main@p^(0+256)
  4204                           
  4205                           ;main.c: 125:         while(*p){
  4206  0127' 2800'              	goto	l4593
  4207  0128'                    l4589:
  4208                           
  4209                           ;main.c: 126:             EUSART_Write(*p);
  4210  0128' 0800'              	movf	main@p^(0+256),w
  4211  0129' 0086               	movwf	6
  4212  012A' 3001               	movlw	1	; select bank2/3
  4213  012B' 0087               	movwf	7
  4214  012C' 0801               	movf	1,w
  4215  012D' 3180' 2000' 3180'  	fcall	_EUSART_Write
  4216  0130'                    l4591:
  4217                           
  4218                           ;main.c: 127:             p++;
  4219  0130' 3001               	movlw	1
  4220  0131' 0022               	movlb	2	; select bank2
  4221  0132' 0080'              	movwf	??_main^(0+256)
  4222  0133' 0800'              	movf	??_main^(0+256),w
  4223  0134' 0780'              	addwf	main@p^(0+256),f
  4224  0135'                    l4593:
  4225                           
  4226                           ;main.c: 125:         while(*p){
  4227  0135' 0800'              	movf	main@p^(0+256),w
  4228  0136' 0086               	movwf	6
  4229  0137' 3001               	movlw	1	; select bank2/3
  4230  0138' 0087               	movwf	7
  4231  0139' 0801               	movf	1,w
  4232  013A' 1D03               	btfss	3,2
  4233  013B' 2800'              	goto	u6601
  4234  013C' 2800'              	goto	u6600
  4235  013D'                    u6601:
  4236  013D' 2800'              	goto	l4589
  4237  013E'                    u6600:
  4238  013E'                    l4595:
  4239                           
  4240                           ;main.c: 129:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  4241  013E' 3006               	movlw	6
  4242  013F' 0022               	movlb	2	; select bank2
  4243  0140' 0081'              	movwf	(??_main^(0+256)+1)
  4244  0141' 3013               	movlw	19
  4245  0142' 0080'              	movwf	??_main^(0+256)
  4246  0143' 30AD               	movlw	173
  4247  0144'                    u6637:
  4248  0144' 0B89               	decfsz	9,f
  4249  0145' 2800'              	goto	u6637
  4250  0146' 0B80'              	decfsz	??_main^(0+256),f
  4251  0147' 2800'              	goto	u6637
  4252  0148' 0B81'              	decfsz	(??_main^(0+256)+1),f
  4253  0149' 2800'              	goto	u6637
  4254  014A' 3200               	nop2
  4255  014B' 2800'              	goto	l251
  4256  014C' 3180' 2800'        	ljmp	start
  4257  014E'                    __end_of_main:
  4258                           
  4259                           	psect	text1
  4260  0000'                    __ptext1:	
  4261 ;; *************** function _sprintf *****************
  4262 ;; Defined at:
  4263 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  s               1    wreg     PTR unsigned char 
  4266 ;;		 -> main@s(20), 
  4267 ;;  fmt             2   26[BANK2 ] PTR const unsigned char 
  4268 ;;		 -> STR_1(12), 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  s               1   36[BANK2 ] PTR unsigned char 
  4271 ;;		 -> main@s(20), 
  4272 ;;  f               5   38[BANK2 ] struct _IO_FILE
  4273 ;;  ret             2    0        int 
  4274 ;;  ap              1   37[BANK2 ] PTR void [1]
  4275 ;;		 -> ?_sprintf(2), 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  2   26[BANK2 ] int 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4285 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Totals:         0       0       1      17       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;Total ram usage:       18 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    7
  4292 ;; This function calls:
  4293 ;;		_vfprintf
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _sprintf
  4301  0000'                    _sprintf:
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4305                           ;sprintf@s stored from wreg
  4306  0000' 0022               	movlb	2	; select bank2
  4307  0001' 0080'              	movwf	sprintf@s^(0+256)
  4308  0002'                    l4495:
  4309  0002' 3000'              	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  4310  0003' 0021               	movlb	1	; select bank1
  4311  0004' 0080'              	movwf	??_sprintf^(0+128)
  4312  0005' 0800'              	movf	??_sprintf^(0+128),w
  4313  0006' 0022               	movlb	2	; select bank2
  4314  0007' 0080'              	movwf	sprintf@ap^(0+256)
  4315  0008' 0800'              	movf	sprintf@s^(0+256),w
  4316  0009' 0021               	movlb	1	; select bank1
  4317  000A' 0080'              	movwf	??_sprintf^(0+128)
  4318  000B' 0800'              	movf	??_sprintf^(0+128),w
  4319  000C' 0022               	movlb	2	; select bank2
  4320  000D' 0080'              	movwf	sprintf@f^(0+256)
  4321  000E'                    l4497:
  4322  000E' 0181'              	clrf	(sprintf@f^(0+256)+1)
  4323  000F' 0181'              	clrf	((sprintf@f+1)^(0+256)+1)
  4324  0010'                    l4499:
  4325  0010' 0183'              	clrf	(sprintf@f^(0+256)+3)
  4326  0011' 0183'              	clrf	((sprintf@f+1)^(0+256)+3)
  4327  0012'                    l4501:
  4328  0012' 0800'              	movf	(sprintf@fmt+1)^(0+256),w
  4329  0013' 0021               	movlb	1	; select bank1
  4330  0014' 0080'              	movwf	(vfprintf@fmt+1)^(0+128)
  4331  0015' 0022               	movlb	2	; select bank2
  4332  0016' 0800'              	movf	sprintf@fmt^(0+256),w
  4333  0017' 0021               	movlb	1	; select bank1
  4334  0018' 0080'              	movwf	vfprintf@fmt^(0+128)
  4335  0019' 3000'              	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  4336  001A' 0080'              	movwf	??_sprintf^(0+128)
  4337  001B' 0800'              	movf	??_sprintf^(0+128),w
  4338  001C' 0080'              	movwf	vfprintf@ap^(0+128)
  4339  001D' 3000'              	movlw	(low (sprintf@f| (0+256)))& (0+255)
  4340  001E' 3180' 2000' 3180'  	fcall	_vfprintf
  4341  0021'                    l4503:
  4342  0021' 0022               	movlb	2	; select bank2
  4343  0022' 0801'              	movf	(sprintf@f^(0+256)+1),w
  4344  0023' 0700'              	addwf	sprintf@s^(0+256),w
  4345  0024' 0021               	movlb	1	; select bank1
  4346  0025' 0080'              	movwf	??_sprintf^(0+128)
  4347  0026' 0800'              	movf	??_sprintf^(0+128),w
  4348  0027' 0086               	movwf	6
  4349  0028' 3001               	movlw	1	; select bank2/3
  4350  0029' 0087               	movwf	7
  4351  002A' 0181               	clrf	1
  4352  002B'                    l875:
  4353  002B' 0008               	return
  4354  002C'                    __end_of_sprintf:
  4355                           
  4356                           	psect	text2
  4357  0000'                    __ptext2:	
  4358 ;; *************** function _vfprintf *****************
  4359 ;; Defined at:
  4360 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  fp              1    wreg     PTR struct _IO_FILE
  4363 ;;		 -> sprintf@f(5), 
  4364 ;;  fmt             2   74[BANK1 ] PTR const unsigned char 
  4365 ;;		 -> STR_1(12), 
  4366 ;;  ap              1   76[BANK1 ] PTR PTR void 
  4367 ;;		 -> sprintf@ap(1), 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  fp              1   23[BANK2 ] PTR struct _IO_FILE
  4370 ;;		 -> sprintf@f(5), 
  4371 ;;  cfmt            2   24[BANK2 ] PTR unsigned char 
  4372 ;;		 -> STR_1(12), 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  2   74[BANK1 ] int 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4382 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;      Totals:         0       0       5       3       0       0       0       0       0       0       0       0       
      +0       0
  4386 ;;Total ram usage:        8 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    6
  4389 ;; This function calls:
  4390 ;;		_vfpfcnvrt
  4391 ;; This function is called by:
  4392 ;;		_sprintf
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           
  4397                           ;psect for function _vfprintf
  4398  0000'                    _vfprintf:
  4399                           
  4400                           ;incstack = 0
  4401                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4402                           ;vfprintf@fp stored from wreg
  4403  0000' 0022               	movlb	2	; select bank2
  4404  0001' 0080'              	movwf	vfprintf@fp^(0+256)
  4405  0002'                    l4449:
  4406                           
  4407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4408  0002' 0021               	movlb	1	; select bank1
  4409  0003' 0800'              	movf	(vfprintf@fmt+1)^(0+128),w
  4410  0004' 0022               	movlb	2	; select bank2
  4411  0005' 0080'              	movwf	(vfprintf@cfmt+1)^(0+256)
  4412  0006' 0021               	movlb	1	; select bank1
  4413  0007' 0800'              	movf	vfprintf@fmt^(0+128),w
  4414  0008' 0022               	movlb	2	; select bank2
  4415  0009' 0080'              	movwf	vfprintf@cfmt^(0+256)
  4416  000A'                    l4451:
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4419  000A' 0023               	movlb	3	; select bank3
  4420  000B' 0180'              	clrf	_nout^(0+384)
  4421  000C' 0180'              	clrf	(_nout+1)^(0+384)
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4424  000D' 2800'              	goto	l4455
  4425  000E'                    l4453:
  4426                           
  4427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4428  000E' 3000'              	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4429  000F' 0021               	movlb	1	; select bank1
  4430  0010' 0080'              	movwf	??_vfprintf^(0+128)
  4431  0011' 0800'              	movf	??_vfprintf^(0+128),w
  4432  0012' 0080'              	movwf	vfpfcnvrt@fmt^(0+128)
  4433  0013' 0800'              	movf	vfprintf@ap^(0+128),w
  4434  0014' 0080'              	movwf	(??_vfprintf+1)^(0+128)
  4435  0015' 0800'              	movf	(??_vfprintf+1)^(0+128),w
  4436  0016' 0080'              	movwf	vfpfcnvrt@ap^(0+128)
  4437  0017' 0022               	movlb	2	; select bank2
  4438  0018' 0800'              	movf	vfprintf@fp^(0+256),w
  4439  0019' 3180' 2000' 3180'  	fcall	_vfpfcnvrt
  4440  001C' 0021               	movlb	1	; select bank1
  4441  001D' 0800'              	movf	?_vfpfcnvrt^(0+128),w
  4442  001E' 0023               	movlb	3	; select bank3
  4443  001F' 0780'              	addwf	_nout^(0+384),f
  4444  0020' 0021               	movlb	1	; select bank1
  4445  0021' 0800'              	movf	(?_vfpfcnvrt+1)^(0+128),w
  4446  0022' 0023               	movlb	3	; select bank3
  4447  0023' 3D80'              	addwfc	(_nout+1)^(0+384),f
  4448  0024'                    l4455:
  4449                           
  4450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4451  0024' 0022               	movlb	2	; select bank2
  4452  0025' 0800'              	movf	vfprintf@cfmt^(0+256),w
  4453  0026' 0084               	movwf	4
  4454  0027' 0800'              	movf	(vfprintf@cfmt+1)^(0+256),w
  4455  0028' 0085               	movwf	5
  4456  0029' 0012               	moviw fsr0++
  4457  002A' 1D03               	btfss	3,2
  4458  002B' 2800'              	goto	u6391
  4459  002C' 2800'              	goto	u6390
  4460  002D'                    u6391:
  4461  002D' 2800'              	goto	l4453
  4462  002E'                    u6390:
  4463  002E'                    l4457:
  4464                           
  4465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4466  002E' 0023               	movlb	3	; select bank3
  4467  002F' 0800'              	movf	(_nout+1)^(0+384),w
  4468  0030' 0021               	movlb	1	; select bank1
  4469  0031' 0080'              	movwf	(?_vfprintf+1)^(0+128)
  4470  0032' 0023               	movlb	3	; select bank3
  4471  0033' 0800'              	movf	_nout^(0+384),w
  4472  0034' 0021               	movlb	1	; select bank1
  4473  0035' 0080'              	movwf	?_vfprintf^(0+128)
  4474  0036'                    l1086:
  4475  0036' 0008               	return
  4476  0037'                    __end_of_vfprintf:
  4477                           
  4478                           	psect	text3
  4479  0000'                    __ptext3:	
  4480 ;; *************** function _vfpfcnvrt *****************
  4481 ;; Defined at:
  4482 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  fp              1    wreg     PTR struct _IO_FILE
  4485 ;;		 -> sprintf@f(5), 
  4486 ;;  fmt             1   66[BANK1 ] PTR PTR unsigned char 
  4487 ;;		 -> vfprintf@cfmt(2), 
  4488 ;;  ap              1   67[BANK1 ] PTR PTR void 
  4489 ;;		 -> sprintf@ap(1), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  fp              1   22[BANK2 ] PTR struct _IO_FILE
  4492 ;;		 -> sprintf@f(5), 
  4493 ;;  ll              8    0[BANK2 ] long long 
  4494 ;;  llu             8    0        unsigned long long 
  4495 ;;  f               4   14[BANK2 ] unsigned long long 
  4496 ;;  ct              3   18[BANK2 ] unsigned char [3]
  4497 ;;  vp              2    0        PTR void 
  4498 ;;  i               2    0        int 
  4499 ;;  done            2    0        int 
  4500 ;;  cp              2    0        PTR unsigned char 
  4501 ;;  c               1   21[BANK2 ] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2   66[BANK1 ] int 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4511 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Locals:         0       0       0      23       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Totals:         0       0       8      23       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;Total ram usage:       31 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    5
  4518 ;; This function calls:
  4519 ;;		_atoi
  4520 ;;		_dtoa
  4521 ;;		_efgtoa
  4522 ;;		_fputc
  4523 ;;		_isdigit
  4524 ;;		_isupper
  4525 ;;		_strncmp
  4526 ;;		_tolower
  4527 ;; This function is called by:
  4528 ;;		_vfprintf
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           
  4533                           ;psect for function _vfpfcnvrt
  4534  0000'                    _vfpfcnvrt:
  4535                           
  4536                           ;incstack = 0
  4537                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4538                           ;vfpfcnvrt@fp stored from wreg
  4539  0000' 0022               	movlb	2	; select bank2
  4540  0001' 0080'              	movwf	vfpfcnvrt@fp^(0+256)
  4541  0002'                    l4263:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4544  0002' 0021               	movlb	1	; select bank1
  4545  0003' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4546  0004' 0086               	movwf	6
  4547  0005' 3001               	movlw	1	; select bank2/3
  4548  0006' 0087               	movwf	7
  4549  0007' 3F40               	moviw [0]fsr1
  4550  0008' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4551  0009' 3F41               	moviw [1]fsr1
  4552  000A' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4553  000B' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  4554  000C' 0084               	movwf	4
  4555  000D' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  4556  000E' 0085               	movwf	5
  4557  000F' 0012               	moviw fsr0++
  4558  0010' 3A25               	xorlw	37
  4559  0011' 1D03               	btfss	3,2
  4560  0012' 2800'              	goto	u6181
  4561  0013' 2800'              	goto	u6180
  4562  0014'                    u6181:
  4563  0014' 2800'              	goto	l4383
  4564  0015'                    u6180:
  4565  0015'                    l4265:
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4568  0015' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4569  0016' 0086               	movwf	6
  4570  0017' 3001               	movlw	1	; select bank2/3
  4571  0018' 0087               	movwf	7
  4572  0019' 3001               	movlw	1
  4573  001A' 0781               	addwf	1,f
  4574  001B' 3141               	addfsr 1,1
  4575  001C' 1803               	skipnc
  4576  001D' 0A81               	incf	1,f
  4577  001E'                    l4267:
  4578                           
  4579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4580  001E' 0023               	movlb	3	; select bank3
  4581  001F' 0180'              	clrf	_width^(0+384)
  4582  0020' 0180'              	clrf	(_width+1)^(0+384)
  4583  0021' 0022               	movlb	2	; select bank2
  4584  0022' 0180'              	clrf	_flags^(0+256)
  4585  0023' 0180'              	clrf	(_flags+1)^(0+256)
  4586  0024'                    l4269:
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4589  0024' 30FF               	movlw	255
  4590  0025' 0080'              	movwf	_prec^(0+256)
  4591  0026' 30FF               	movlw	255
  4592  0027' 0081'              	movwf	(_prec^(0+256)+1)
  4593  0028'                    l4271:
  4594                           
  4595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4596  0028' 0021               	movlb	1	; select bank1
  4597  0029' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4598  002A' 0086               	movwf	6
  4599  002B' 3001               	movlw	1	; select bank2/3
  4600  002C' 0087               	movwf	7
  4601  002D' 3F40               	moviw [0]fsr1
  4602  002E' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4603  002F' 3F41               	moviw [1]fsr1
  4604  0030' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4605  0031' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  4606  0032' 0084               	movwf	4
  4607  0033' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  4608  0034' 0085               	movwf	5
  4609  0035' 0012               	moviw fsr0++
  4610  0036' 3A2A               	xorlw	42
  4611  0037' 1D03               	btfss	3,2
  4612  0038' 2800'              	goto	u6191
  4613  0039' 2800'              	goto	u6190
  4614  003A'                    u6191:
  4615  003A' 2800'              	goto	l4283
  4616  003B'                    u6190:
  4617  003B'                    l4273:
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4620  003B' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4621  003C' 0086               	movwf	6
  4622  003D' 3001               	movlw	1	; select bank2/3
  4623  003E' 0087               	movwf	7
  4624  003F' 3001               	movlw	1
  4625  0040' 0781               	addwf	1,f
  4626  0041' 3141               	addfsr 1,1
  4627  0042' 1803               	skipnc
  4628  0043' 0A81               	incf	1,f
  4629  0044'                    l4275:
  4630                           
  4631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4632  0044' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  4633  0045' 0086               	movwf	6
  4634  0046' 3001               	movlw	1	; select bank2/3
  4635  0047' 0087               	movwf	7
  4636  0048' 0801               	movf	1,w
  4637  0049' 0084               	movwf	4
  4638  004A' 3001               	movlw	1	; select bank2/3
  4639  004B' 0085               	movwf	5
  4640  004C' 3002               	movlw	2
  4641  004D' 0781               	addwf	1,f
  4642  004E' 3F00               	moviw [0]fsr0
  4643  004F' 0023               	movlb	3	; select bank3
  4644  0050' 0080'              	movwf	_width^(0+384)
  4645  0051' 3F01               	moviw [1]fsr0
  4646  0052' 0080'              	movwf	(_width+1)^(0+384)
  4647  0053'                    l4277:
  4648                           
  4649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4650  0053' 1F80'              	btfss	(_width+1)^(0+384),7
  4651  0054' 2800'              	goto	u6201
  4652  0055' 2800'              	goto	u6200
  4653  0056'                    u6201:
  4654  0056' 2800'              	goto	l4293
  4655  0057'                    u6200:
  4656  0057'                    l4279:
  4657                           
  4658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4659  0057' 0022               	movlb	2	; select bank2
  4660  0058' 1400'              	bsf	_flags^(0+256),0
  4661  0059'                    l4281:
  4662                           
  4663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4664  0059' 0023               	movlb	3	; select bank3
  4665  005A' 0980'              	comf	_width^(0+384),f
  4666  005B' 0980'              	comf	(_width+1)^(0+384),f
  4667  005C' 0A80'              	incf	_width^(0+384),f
  4668  005D' 1903               	skipnz
  4669  005E' 0A80'              	incf	(_width+1)^(0+384),f
  4670  005F' 2800'              	goto	l4293
  4671  0060'                    l4283:
  4672                           
  4673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4674  0060' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4675  0061' 0086               	movwf	6
  4676  0062' 3001               	movlw	1	; select bank2/3
  4677  0063' 0087               	movwf	7
  4678  0064' 3F40               	moviw [0]fsr1
  4679  0065' 0086'              	movwf	atoi@s
  4680  0066' 3F41               	moviw [1]fsr1
  4681  0067' 0087'              	movwf	atoi@s+1
  4682  0068' 3180' 2000' 3180'  	fcall	_atoi
  4683  006B' 0807'              	movf	?_atoi+1,w
  4684  006C' 0023               	movlb	3	; select bank3
  4685  006D' 0080'              	movwf	(_width+1)^(0+384)
  4686  006E' 0806'              	movf	?_atoi,w
  4687  006F' 0080'              	movwf	_width^(0+384)
  4688                           
  4689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4690  0070' 2800'              	goto	l4287
  4691  0071'                    l4285:
  4692                           
  4693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4694  0071' 0021               	movlb	1	; select bank1
  4695  0072' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4696  0073' 0086               	movwf	6
  4697  0074' 3001               	movlw	1	; select bank2/3
  4698  0075' 0087               	movwf	7
  4699  0076' 3001               	movlw	1
  4700  0077' 0781               	addwf	1,f
  4701  0078' 3141               	addfsr 1,1
  4702  0079' 1803               	skipnc
  4703  007A' 0A81               	incf	1,f
  4704  007B'                    l4287:
  4705  007B' 0021               	movlb	1	; select bank1
  4706  007C' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4707  007D' 0086               	movwf	6
  4708  007E' 3001               	movlw	1	; select bank2/3
  4709  007F' 0087               	movwf	7
  4710  0080' 3F40               	moviw [0]fsr1
  4711  0081' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4712  0082' 3F41               	moviw [1]fsr1
  4713  0083' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4714  0084' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  4715  0085' 0084               	movwf	4
  4716  0086' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  4717  0087' 0085               	movwf	5
  4718  0088' 0800               	movf	0,w	;code access
  4719  0089' 3ED0               	addlw	208
  4720  008A' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  4721  008B' 30FF               	movlw	255
  4722  008C' 1803               	skipnc
  4723  008D' 3000               	movlw	0
  4724  008E' 0081'              	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  4725  008F' 3000               	movlw	0
  4726  0090' 0200'              	subwf	(??_vfpfcnvrt+3)^(0+128),w
  4727  0091' 300A               	movlw	10
  4728  0092' 1903               	skipnz
  4729  0093' 0200'              	subwf	(??_vfpfcnvrt+2)^(0+128),w
  4730  0094' 1C03               	skipc
  4731  0095' 2800'              	goto	u6211
  4732  0096' 2800'              	goto	u6210
  4733  0097'                    u6211:
  4734  0097' 3001               	movlw	1
  4735  0098' 2800'              	goto	u6220
  4736  0099'                    u6210:
  4737  0099' 3000               	movlw	0
  4738  009A'                    u6220:
  4739  009A' 0080'              	movwf	(??_vfpfcnvrt+4)^(0+128)
  4740  009B' 0181'              	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  4741  009C' 0800'              	movf	(??_vfpfcnvrt+4)^(0+128),w
  4742  009D' 0022               	movlb	2	; select bank2
  4743  009E' 0080'              	movwf	_vfpfcnvrt$1034^(0+256)
  4744  009F' 0021               	movlb	1	; select bank1
  4745  00A0' 0800'              	movf	(??_vfpfcnvrt+5)^(0+128),w
  4746  00A1' 0022               	movlb	2	; select bank2
  4747  00A2' 0080'              	movwf	(_vfpfcnvrt$1034+1)^(0+256)
  4748  00A3'                    l4291:
  4749  00A3' 0800'              	movf	_vfpfcnvrt$1034^(0+256),w
  4750  00A4' 0400'              	iorwf	(_vfpfcnvrt$1034+1)^(0+256),w
  4751  00A5' 1D03               	btfss	3,2
  4752  00A6' 2800'              	goto	u6231
  4753  00A7' 2800'              	goto	u6230
  4754  00A8'                    u6231:
  4755  00A8' 2800'              	goto	l4285
  4756  00A9'                    u6230:
  4757  00A9'                    l4293:
  4758                           
  4759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4760  00A9' 0021               	movlb	1	; select bank1
  4761  00AA' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4762  00AB' 0086               	movwf	6
  4763  00AC' 3001               	movlw	1	; select bank2/3
  4764  00AD' 0087               	movwf	7
  4765  00AE' 3F40               	moviw [0]fsr1
  4766  00AF' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4767  00B0' 3F41               	moviw [1]fsr1
  4768  00B1' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4769  00B2' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  4770  00B3' 0084               	movwf	4
  4771  00B4' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  4772  00B5' 0085               	movwf	5
  4773  00B6' 0012               	moviw fsr0++
  4774  00B7' 3A2E               	xorlw	46
  4775  00B8' 1D03               	btfss	3,2
  4776  00B9' 2800'              	goto	u6241
  4777  00BA' 2800'              	goto	u6240
  4778  00BB'                    u6241:
  4779  00BB' 2800'              	goto	l4315
  4780  00BC'                    u6240:
  4781  00BC'                    l4295:
  4782                           
  4783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4784  00BC' 0022               	movlb	2	; select bank2
  4785  00BD' 0180'              	clrf	_prec^(0+256)
  4786  00BE' 0180'              	clrf	(_prec+1)^(0+256)
  4787  00BF'                    l4297:
  4788                           
  4789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4790  00BF' 0021               	movlb	1	; select bank1
  4791  00C0' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4792  00C1' 0086               	movwf	6
  4793  00C2' 3001               	movlw	1	; select bank2/3
  4794  00C3' 0087               	movwf	7
  4795  00C4' 3001               	movlw	1
  4796  00C5' 0781               	addwf	1,f
  4797  00C6' 3141               	addfsr 1,1
  4798  00C7' 1803               	skipnc
  4799  00C8' 0A81               	incf	1,f
  4800  00C9'                    l4299:
  4801                           
  4802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4803  00C9' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4804  00CA' 0086               	movwf	6
  4805  00CB' 3001               	movlw	1	; select bank2/3
  4806  00CC' 0087               	movwf	7
  4807  00CD' 3F40               	moviw [0]fsr1
  4808  00CE' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4809  00CF' 3F41               	moviw [1]fsr1
  4810  00D0' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4811  00D1' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  4812  00D2' 0084               	movwf	4
  4813  00D3' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  4814  00D4' 0085               	movwf	5
  4815  00D5' 0012               	moviw fsr0++
  4816  00D6' 3A2A               	xorlw	42
  4817  00D7' 1D03               	btfss	3,2
  4818  00D8' 2800'              	goto	u6251
  4819  00D9' 2800'              	goto	u6250
  4820  00DA'                    u6251:
  4821  00DA' 2800'              	goto	l4305
  4822  00DB'                    u6250:
  4823  00DB'                    l4301:
  4824                           
  4825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4826  00DB' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4827  00DC' 0086               	movwf	6
  4828  00DD' 3001               	movlw	1	; select bank2/3
  4829  00DE' 0087               	movwf	7
  4830  00DF' 3001               	movlw	1
  4831  00E0' 0781               	addwf	1,f
  4832  00E1' 3141               	addfsr 1,1
  4833  00E2' 1803               	skipnc
  4834  00E3' 0A81               	incf	1,f
  4835  00E4'                    l4303:
  4836                           
  4837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4838  00E4' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  4839  00E5' 0086               	movwf	6
  4840  00E6' 3001               	movlw	1	; select bank2/3
  4841  00E7' 0087               	movwf	7
  4842  00E8' 0801               	movf	1,w
  4843  00E9' 0084               	movwf	4
  4844  00EA' 3001               	movlw	1	; select bank2/3
  4845  00EB' 0085               	movwf	5
  4846  00EC' 3002               	movlw	2
  4847  00ED' 0781               	addwf	1,f
  4848  00EE' 3F00               	moviw [0]fsr0
  4849  00EF' 0022               	movlb	2	; select bank2
  4850  00F0' 0080'              	movwf	_prec^(0+256)
  4851  00F1' 3F01               	moviw [1]fsr0
  4852  00F2' 0080'              	movwf	(_prec+1)^(0+256)
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4855  00F3' 2800'              	goto	l4315
  4856  00F4'                    l4305:
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4859  00F4' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4860  00F5' 0086               	movwf	6
  4861  00F6' 3001               	movlw	1	; select bank2/3
  4862  00F7' 0087               	movwf	7
  4863  00F8' 3F40               	moviw [0]fsr1
  4864  00F9' 0086'              	movwf	atoi@s
  4865  00FA' 3F41               	moviw [1]fsr1
  4866  00FB' 0087'              	movwf	atoi@s+1
  4867  00FC' 3180' 2000' 3180'  	fcall	_atoi
  4868  00FF' 0807'              	movf	?_atoi+1,w
  4869  0100' 0022               	movlb	2	; select bank2
  4870  0101' 0080'              	movwf	(_prec+1)^(0+256)
  4871  0102' 0806'              	movf	?_atoi,w
  4872  0103' 0080'              	movwf	_prec^(0+256)
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4875  0104' 2800'              	goto	l4309
  4876  0105'                    l4307:
  4877                           
  4878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4879  0105' 0021               	movlb	1	; select bank1
  4880  0106' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4881  0107' 0086               	movwf	6
  4882  0108' 3001               	movlw	1	; select bank2/3
  4883  0109' 0087               	movwf	7
  4884  010A' 3001               	movlw	1
  4885  010B' 0781               	addwf	1,f
  4886  010C' 3141               	addfsr 1,1
  4887  010D' 1803               	skipnc
  4888  010E' 0A81               	incf	1,f
  4889  010F'                    l4309:
  4890  010F' 0021               	movlb	1	; select bank1
  4891  0110' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4892  0111' 0086               	movwf	6
  4893  0112' 3001               	movlw	1	; select bank2/3
  4894  0113' 0087               	movwf	7
  4895  0114' 3F40               	moviw [0]fsr1
  4896  0115' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4897  0116' 3F41               	moviw [1]fsr1
  4898  0117' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4899  0118' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  4900  0119' 0084               	movwf	4
  4901  011A' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  4902  011B' 0085               	movwf	5
  4903  011C' 0800               	movf	0,w	;code access
  4904  011D' 3ED0               	addlw	208
  4905  011E' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  4906  011F' 30FF               	movlw	255
  4907  0120' 1803               	skipnc
  4908  0121' 3000               	movlw	0
  4909  0122' 0081'              	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  4910  0123' 3000               	movlw	0
  4911  0124' 0200'              	subwf	(??_vfpfcnvrt+3)^(0+128),w
  4912  0125' 300A               	movlw	10
  4913  0126' 1903               	skipnz
  4914  0127' 0200'              	subwf	(??_vfpfcnvrt+2)^(0+128),w
  4915  0128' 1C03               	skipc
  4916  0129' 2800'              	goto	u6261
  4917  012A' 2800'              	goto	u6260
  4918  012B'                    u6261:
  4919  012B' 3001               	movlw	1
  4920  012C' 2800'              	goto	u6270
  4921  012D'                    u6260:
  4922  012D' 3000               	movlw	0
  4923  012E'                    u6270:
  4924  012E' 0080'              	movwf	(??_vfpfcnvrt+4)^(0+128)
  4925  012F' 0181'              	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  4926  0130' 0800'              	movf	(??_vfpfcnvrt+4)^(0+128),w
  4927  0131' 0022               	movlb	2	; select bank2
  4928  0132' 0080'              	movwf	_vfpfcnvrt$1035^(0+256)
  4929  0133' 0021               	movlb	1	; select bank1
  4930  0134' 0800'              	movf	(??_vfpfcnvrt+5)^(0+128),w
  4931  0135' 0022               	movlb	2	; select bank2
  4932  0136' 0080'              	movwf	(_vfpfcnvrt$1035+1)^(0+256)
  4933  0137'                    l4313:
  4934  0137' 0800'              	movf	_vfpfcnvrt$1035^(0+256),w
  4935  0138' 0400'              	iorwf	(_vfpfcnvrt$1035+1)^(0+256),w
  4936  0139' 1D03               	btfss	3,2
  4937  013A' 2800'              	goto	u6281
  4938  013B' 2800'              	goto	u6280
  4939  013C'                    u6281:
  4940  013C' 2800'              	goto	l4307
  4941  013D'                    u6280:
  4942  013D'                    l4315:
  4943                           
  4944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4945  013D' 0021               	movlb	1	; select bank1
  4946  013E' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4947  013F' 0086               	movwf	6
  4948  0140' 3001               	movlw	1	; select bank2/3
  4949  0141' 0087               	movwf	7
  4950  0142' 3F40               	moviw [0]fsr1
  4951  0143' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4952  0144' 3F41               	moviw [1]fsr1
  4953  0145' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4954  0146' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  4955  0147' 0084               	movwf	4
  4956  0148' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  4957  0149' 0085               	movwf	5
  4958  014A' 0800               	movf	0,w	;code access
  4959  014B' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  4960  014C' 0181'              	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4961  014D' 0800'              	movf	(??_vfpfcnvrt+2)^(0+128),w
  4962  014E' 0086'              	movwf	tolower@c
  4963  014F' 0800'              	movf	(??_vfpfcnvrt+3)^(0+128),w
  4964  0150' 0087'              	movwf	tolower@c+1
  4965  0151' 3180' 2000' 3180'  	fcall	_tolower
  4966  0154' 0806'              	movf	?_tolower,w
  4967  0155' 0021               	movlb	1	; select bank1
  4968  0156' 0080'              	movwf	(??_vfpfcnvrt+4)^(0+128)
  4969  0157' 0800'              	movf	(??_vfpfcnvrt+4)^(0+128),w
  4970  0158' 0022               	movlb	2	; select bank2
  4971  0159' 0080'              	movwf	vfpfcnvrt@ct^(0+256)
  4972  015A'                    l4317:
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4975  015A' 0800'              	movf	vfpfcnvrt@ct^(0+256),w
  4976  015B' 1903               	btfsc	3,2
  4977  015C' 2800'              	goto	u6291
  4978  015D' 2800'              	goto	u6290
  4979  015E'                    u6291:
  4980  015E' 2800'              	goto	l4325
  4981  015F'                    u6290:
  4982  015F'                    l4319:
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4985  015F' 0021               	movlb	1	; select bank1
  4986  0160' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  4987  0161' 0086               	movwf	6
  4988  0162' 3001               	movlw	1	; select bank2/3
  4989  0163' 0087               	movwf	7
  4990  0164' 3F40               	moviw [0]fsr1
  4991  0165' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  4992  0166' 3F41               	moviw [1]fsr1
  4993  0167' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  4994  0168' 3001               	movlw	1
  4995  0169' 0700'              	addwf	??_vfpfcnvrt^(0+128),w
  4996  016A' 0084               	movwf	4
  4997  016B' 0801'              	movf	(??_vfpfcnvrt^(0+128)+1),w
  4998  016C' 1803               	skipnc
  4999  016D' 0A01'              	incf	(??_vfpfcnvrt^(0+128)+1),w
  5000  016E' 0085               	movwf	5
  5001  016F' 0800               	movf	0,w	;code access
  5002  0170' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  5003  0171' 0181'              	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5004  0172' 0800'              	movf	(??_vfpfcnvrt+2)^(0+128),w
  5005  0173' 0086'              	movwf	tolower@c
  5006  0174' 0800'              	movf	(??_vfpfcnvrt+3)^(0+128),w
  5007  0175' 0087'              	movwf	tolower@c+1
  5008  0176' 3180' 2000' 3180'  	fcall	_tolower
  5009  0179' 0806'              	movf	?_tolower,w
  5010  017A' 0021               	movlb	1	; select bank1
  5011  017B' 0080'              	movwf	(??_vfpfcnvrt+4)^(0+128)
  5012  017C' 0800'              	movf	(??_vfpfcnvrt+4)^(0+128),w
  5013  017D' 0022               	movlb	2	; select bank2
  5014  017E' 0081'              	movwf	(vfpfcnvrt@ct^(0+256)+1)
  5015  017F'                    l4321:
  5016                           
  5017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  5018  017F' 0801'              	movf	(vfpfcnvrt@ct^(0+256)+1),w
  5019  0180' 1903               	btfsc	3,2
  5020  0181' 2800'              	goto	u6301
  5021  0182' 2800'              	goto	u6300
  5022  0183'                    u6301:
  5023  0183' 2800'              	goto	l4325
  5024  0184'                    u6300:
  5025  0184'                    l4323:
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  5028  0184' 0021               	movlb	1	; select bank1
  5029  0185' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5030  0186' 0086               	movwf	6
  5031  0187' 3001               	movlw	1	; select bank2/3
  5032  0188' 0087               	movwf	7
  5033  0189' 3F40               	moviw [0]fsr1
  5034  018A' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5035  018B' 3F41               	moviw [1]fsr1
  5036  018C' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5037  018D' 3002               	movlw	2
  5038  018E' 0700'              	addwf	??_vfpfcnvrt^(0+128),w
  5039  018F' 0084               	movwf	4
  5040  0190' 0801'              	movf	(??_vfpfcnvrt^(0+128)+1),w
  5041  0191' 1803               	skipnc
  5042  0192' 0A01'              	incf	(??_vfpfcnvrt^(0+128)+1),w
  5043  0193' 0085               	movwf	5
  5044  0194' 0800               	movf	0,w	;code access
  5045  0195' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  5046  0196' 0181'              	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5047  0197' 0800'              	movf	(??_vfpfcnvrt+2)^(0+128),w
  5048  0198' 0086'              	movwf	tolower@c
  5049  0199' 0800'              	movf	(??_vfpfcnvrt+3)^(0+128),w
  5050  019A' 0087'              	movwf	tolower@c+1
  5051  019B' 3180' 2000' 3180'  	fcall	_tolower
  5052  019E' 0806'              	movf	?_tolower,w
  5053  019F' 0021               	movlb	1	; select bank1
  5054  01A0' 0080'              	movwf	(??_vfpfcnvrt+4)^(0+128)
  5055  01A1' 0800'              	movf	(??_vfpfcnvrt+4)^(0+128),w
  5056  01A2' 0022               	movlb	2	; select bank2
  5057  01A3' 0082'              	movwf	(vfpfcnvrt@ct^(0+256)+2)
  5058  01A4'                    l4325:
  5059                           
  5060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5061  01A4' 0021               	movlb	1	; select bank1
  5062  01A5' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5063  01A6' 0086               	movwf	6
  5064  01A7' 3001               	movlw	1	; select bank2/3
  5065  01A8' 0087               	movwf	7
  5066  01A9' 3F40               	moviw [0]fsr1
  5067  01AA' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5068  01AB' 3F41               	moviw [1]fsr1
  5069  01AC' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5070  01AD' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5071  01AE' 0084               	movwf	4
  5072  01AF' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  5073  01B0' 0085               	movwf	5
  5074  01B1' 0012               	moviw fsr0++
  5075  01B2' 3A64               	xorlw	100
  5076  01B3' 1903               	btfsc	3,2
  5077  01B4' 2800'              	goto	u6311
  5078  01B5' 2800'              	goto	u6310
  5079  01B6'                    u6311:
  5080  01B6' 2800'              	goto	l4329
  5081  01B7'                    u6310:
  5082  01B7'                    l4327:
  5083  01B7' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5084  01B8' 0086               	movwf	6
  5085  01B9' 3001               	movlw	1	; select bank2/3
  5086  01BA' 0087               	movwf	7
  5087  01BB' 3F40               	moviw [0]fsr1
  5088  01BC' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5089  01BD' 3F41               	moviw [1]fsr1
  5090  01BE' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5091  01BF' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5092  01C0' 0084               	movwf	4
  5093  01C1' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  5094  01C2' 0085               	movwf	5
  5095  01C3' 0012               	moviw fsr0++
  5096  01C4' 3A69               	xorlw	105
  5097  01C5' 1D03               	btfss	3,2
  5098  01C6' 2800'              	goto	u6321
  5099  01C7' 2800'              	goto	u6320
  5100  01C8'                    u6321:
  5101  01C8' 2800'              	goto	l4337
  5102  01C9'                    u6320:
  5103  01C9'                    l4329:
  5104                           
  5105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5106  01C9' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5107  01CA' 0086               	movwf	6
  5108  01CB' 3001               	movlw	1	; select bank2/3
  5109  01CC' 0087               	movwf	7
  5110  01CD' 3001               	movlw	1
  5111  01CE' 0781               	addwf	1,f
  5112  01CF' 3141               	addfsr 1,1
  5113  01D0' 1803               	skipnc
  5114  01D1' 0A81               	incf	1,f
  5115  01D2'                    l4331:
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5118  01D2' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  5119  01D3' 0086               	movwf	6
  5120  01D4' 3001               	movlw	1	; select bank2/3
  5121  01D5' 0087               	movwf	7
  5122  01D6' 0801               	movf	1,w
  5123  01D7' 0084               	movwf	4
  5124  01D8' 3001               	movlw	1	; select bank2/3
  5125  01D9' 0085               	movwf	5
  5126  01DA' 3002               	movlw	2
  5127  01DB' 0781               	addwf	1,f
  5128  01DC' 3F00               	moviw [0]fsr0
  5129  01DD' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5130  01DE' 3F01               	moviw [1]fsr0
  5131  01DF' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5132  01E0' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5133  01E1' 0022               	movlb	2	; select bank2
  5134  01E2' 0080'              	movwf	vfpfcnvrt@ll^(0+256)
  5135  01E3' 0021               	movlb	1	; select bank1
  5136  01E4' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  5137  01E5' 0022               	movlb	2	; select bank2
  5138  01E6' 0080'              	movwf	(vfpfcnvrt@ll+1)^(0+256)
  5139  01E7' 0D89               	rlf	9,f
  5140  01E8' 3B89               	subwfb	9,f
  5141  01E9' 0989               	comf	9,f
  5142  01EA' 0080'              	movwf	(vfpfcnvrt@ll+2)^(0+256)
  5143  01EB' 0080'              	movwf	(vfpfcnvrt@ll+3)^(0+256)
  5144  01EC' 0080'              	movwf	(vfpfcnvrt@ll+4)^(0+256)
  5145  01ED' 0080'              	movwf	(vfpfcnvrt@ll+5)^(0+256)
  5146  01EE' 0080'              	movwf	(vfpfcnvrt@ll+6)^(0+256)
  5147  01EF' 0080'              	movwf	(vfpfcnvrt@ll+7)^(0+256)
  5148  01F0'                    l4333:
  5149                           
  5150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5151  01F0' 0800'              	movf	vfpfcnvrt@ll^(0+256),w
  5152  01F1' 0020               	movlb	0	; select bank0
  5153  01F2' 0090'              	movwf	dtoa@d
  5154  01F3' 0022               	movlb	2	; select bank2
  5155  01F4' 0800'              	movf	(vfpfcnvrt@ll+1)^(0+256),w
  5156  01F5' 0020               	movlb	0	; select bank0
  5157  01F6' 0091'              	movwf	dtoa@d+1
  5158  01F7' 0022               	movlb	2	; select bank2
  5159  01F8' 0800'              	movf	(vfpfcnvrt@ll+2)^(0+256),w
  5160  01F9' 0020               	movlb	0	; select bank0
  5161  01FA' 0092'              	movwf	dtoa@d+2
  5162  01FB' 0022               	movlb	2	; select bank2
  5163  01FC' 0800'              	movf	(vfpfcnvrt@ll+3)^(0+256),w
  5164  01FD' 0020               	movlb	0	; select bank0
  5165  01FE' 0093'              	movwf	dtoa@d+3
  5166  01FF' 0022               	movlb	2	; select bank2
  5167  0200' 0800'              	movf	(vfpfcnvrt@ll+4)^(0+256),w
  5168  0201' 0020               	movlb	0	; select bank0
  5169  0202' 0094'              	movwf	dtoa@d+4
  5170  0203' 0022               	movlb	2	; select bank2
  5171  0204' 0800'              	movf	(vfpfcnvrt@ll+5)^(0+256),w
  5172  0205' 0020               	movlb	0	; select bank0
  5173  0206' 0095'              	movwf	dtoa@d+5
  5174  0207' 0022               	movlb	2	; select bank2
  5175  0208' 0800'              	movf	(vfpfcnvrt@ll+6)^(0+256),w
  5176  0209' 0020               	movlb	0	; select bank0
  5177  020A' 0096'              	movwf	dtoa@d+6
  5178  020B' 0022               	movlb	2	; select bank2
  5179  020C' 0800'              	movf	(vfpfcnvrt@ll+7)^(0+256),w
  5180  020D' 0020               	movlb	0	; select bank0
  5181  020E' 0097'              	movwf	dtoa@d+7
  5182  020F' 0022               	movlb	2	; select bank2
  5183  0210' 0800'              	movf	vfpfcnvrt@fp^(0+256),w
  5184  0211' 3180' 2000' 3180'  	fcall	_dtoa
  5185  0214' 0020               	movlb	0	; select bank0
  5186  0215' 0811'              	movf	?_dtoa+1,w
  5187  0216' 0021               	movlb	1	; select bank1
  5188  0217' 0080'              	movwf	(?_vfpfcnvrt+1)^(0+128)
  5189  0218' 0020               	movlb	0	; select bank0
  5190  0219' 0810'              	movf	?_dtoa,w
  5191  021A' 0021               	movlb	1	; select bank1
  5192  021B' 0080'              	movwf	?_vfpfcnvrt^(0+128)
  5193  021C' 2800'              	goto	l1071
  5194  021D'                    l4337:
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  5197  021D' 3066               	movlw	102
  5198  021E' 0022               	movlb	2	; select bank2
  5199  021F' 0600'              	xorwf	vfpfcnvrt@ct^(0+256),w
  5200  0220' 1D03               	btfss	3,2
  5201  0221' 2800'              	goto	u6331
  5202  0222' 2800'              	goto	u6330
  5203  0223'                    u6331:
  5204  0223' 2800'              	goto	l4349
  5205  0224'                    u6330:
  5206  0224'                    l4339:
  5207                           
  5208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  5209  0224' 0021               	movlb	1	; select bank1
  5210  0225' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5211  0226' 0086               	movwf	6
  5212  0227' 3001               	movlw	1	; select bank2/3
  5213  0228' 0087               	movwf	7
  5214  0229' 3F40               	moviw [0]fsr1
  5215  022A' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5216  022B' 3F41               	moviw [1]fsr1
  5217  022C' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5218  022D' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5219  022E' 0084               	movwf	4
  5220  022F' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  5221  0230' 0085               	movwf	5
  5222  0231' 0800               	movf	0,w	;code access
  5223  0232' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  5224  0233' 0800'              	movf	(??_vfpfcnvrt+2)^(0+128),w
  5225  0234' 0022               	movlb	2	; select bank2
  5226  0235' 0080'              	movwf	vfpfcnvrt@c^(0+256)
  5227  0236'                    l4341:
  5228                           
  5229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  5230  0236' 0021               	movlb	1	; select bank1
  5231  0237' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5232  0238' 0086               	movwf	6
  5233  0239' 3001               	movlw	1	; select bank2/3
  5234  023A' 0087               	movwf	7
  5235  023B' 3001               	movlw	1
  5236  023C' 0781               	addwf	1,f
  5237  023D' 3141               	addfsr 1,1
  5238  023E' 1803               	skipnc
  5239  023F' 0A81               	incf	1,f
  5240  0240'                    l4343:
  5241                           
  5242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5243  0240' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  5244  0241' 0086               	movwf	6
  5245  0242' 3001               	movlw	1	; select bank2/3
  5246  0243' 0087               	movwf	7
  5247  0244' 0801               	movf	1,w
  5248  0245' 0084               	movwf	4
  5249  0246' 3001               	movlw	1	; select bank2/3
  5250  0247' 0085               	movwf	5
  5251  0248' 3004               	movlw	4
  5252  0249' 0781               	addwf	1,f
  5253  024A' 3F00               	moviw [0]fsr0
  5254  024B' 0022               	movlb	2	; select bank2
  5255  024C' 0080'              	movwf	vfpfcnvrt@f^(0+256)
  5256  024D' 3F01               	moviw [1]fsr0
  5257  024E' 0080'              	movwf	(vfpfcnvrt@f+1)^(0+256)
  5258  024F' 3F02               	moviw [2]fsr0
  5259  0250' 0080'              	movwf	(vfpfcnvrt@f+2)^(0+256)
  5260  0251' 3F03               	moviw [3]fsr0
  5261  0252' 0080'              	movwf	(vfpfcnvrt@f+3)^(0+256)
  5262  0253'                    l4345:
  5263                           
  5264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  5265  0253' 0800'              	movf	(vfpfcnvrt@f+3)^(0+256),w
  5266  0254' 0021               	movlb	1	; select bank1
  5267  0255' 0080'              	movwf	(efgtoa@f+3)^(0+128)
  5268  0256' 0022               	movlb	2	; select bank2
  5269  0257' 0800'              	movf	(vfpfcnvrt@f+2)^(0+256),w
  5270  0258' 0021               	movlb	1	; select bank1
  5271  0259' 0080'              	movwf	(efgtoa@f+2)^(0+128)
  5272  025A' 0022               	movlb	2	; select bank2
  5273  025B' 0800'              	movf	(vfpfcnvrt@f+1)^(0+256),w
  5274  025C' 0021               	movlb	1	; select bank1
  5275  025D' 0080'              	movwf	(efgtoa@f+1)^(0+128)
  5276  025E' 0022               	movlb	2	; select bank2
  5277  025F' 0800'              	movf	vfpfcnvrt@f^(0+256),w
  5278  0260' 0021               	movlb	1	; select bank1
  5279  0261' 0080'              	movwf	efgtoa@f^(0+128)
  5280  0262' 0022               	movlb	2	; select bank2
  5281  0263' 0800'              	movf	vfpfcnvrt@c^(0+256),w
  5282  0264' 0021               	movlb	1	; select bank1
  5283  0265' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5284  0266' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5285  0267' 0080'              	movwf	efgtoa@c^(0+128)
  5286  0268' 0022               	movlb	2	; select bank2
  5287  0269' 0800'              	movf	vfpfcnvrt@fp^(0+256),w
  5288  026A' 3180' 2000' 3180'  	fcall	_efgtoa
  5289  026D' 0021               	movlb	1	; select bank1
  5290  026E' 0800'              	movf	(?_efgtoa+1)^(0+128),w
  5291  026F' 0080'              	movwf	(?_vfpfcnvrt+1)^(0+128)
  5292  0270' 0800'              	movf	?_efgtoa^(0+128),w
  5293  0271' 0080'              	movwf	?_vfpfcnvrt^(0+128)
  5294  0272' 2800'              	goto	l1071
  5295  0273'                    l4349:
  5296                           
  5297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5298  0273' 3000'              	movlw	low (STR_10| (0+32768))
  5299  0274' 0080'              	movwf	strncmp@_r
  5300  0275' 3000'              	movlw	high (STR_10| (0+32768))
  5301  0276' 0081'              	movwf	strncmp@_r+1
  5302  0277' 3002               	movlw	2
  5303  0278' 0082'              	movwf	strncmp@n
  5304  0279' 3000               	movlw	0
  5305  027A' 0083'              	movwf	strncmp@n+1
  5306  027B' 3000'              	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
  5307  027C' 3180' 2000' 3180'  	fcall	_strncmp
  5308  027F' 0800'              	movf	?_strncmp,w
  5309  0280' 0401'              	iorwf	?_strncmp+1,w
  5310  0281' 1D03               	btfss	3,2
  5311  0282' 2800'              	goto	u6341
  5312  0283' 2800'              	goto	u6340
  5313  0284'                    u6341:
  5314  0284' 2800'              	goto	l4367
  5315  0285'                    u6340:
  5316  0285'                    l4351:
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5319  0285' 0021               	movlb	1	; select bank1
  5320  0286' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5321  0287' 0086               	movwf	6
  5322  0288' 3001               	movlw	1	; select bank2/3
  5323  0289' 0087               	movwf	7
  5324  028A' 3F40               	moviw [0]fsr1
  5325  028B' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5326  028C' 3F41               	moviw [1]fsr1
  5327  028D' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5328  028E' 3001               	movlw	1
  5329  028F' 0700'              	addwf	??_vfpfcnvrt^(0+128),w
  5330  0290' 0084               	movwf	4
  5331  0291' 0801'              	movf	(??_vfpfcnvrt^(0+128)+1),w
  5332  0292' 1803               	skipnc
  5333  0293' 0A01'              	incf	(??_vfpfcnvrt^(0+128)+1),w
  5334  0294' 0085               	movwf	5
  5335  0295' 0800               	movf	0,w	;code access
  5336  0296' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  5337  0297' 0800'              	movf	(??_vfpfcnvrt+2)^(0+128),w
  5338  0298' 0022               	movlb	2	; select bank2
  5339  0299' 0080'              	movwf	vfpfcnvrt@c^(0+256)
  5340  029A' 0021               	movlb	1	; select bank1
  5341  029B' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5342  029C' 0086               	movwf	6
  5343  029D' 3001               	movlw	1	; select bank2/3
  5344  029E' 0087               	movwf	7
  5345  029F' 3F40               	moviw [0]fsr1
  5346  02A0' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5347  02A1' 3F41               	moviw [1]fsr1
  5348  02A2' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5349  02A3' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5350  02A4' 0084               	movwf	4
  5351  02A5' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  5352  02A6' 0085               	movwf	5
  5353  02A7' 0800               	movf	0,w	;code access
  5354  02A8' 3EBF               	addlw	191
  5355  02A9' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  5356  02AA' 30FF               	movlw	255
  5357  02AB' 1803               	skipnc
  5358  02AC' 3000               	movlw	0
  5359  02AD' 0081'              	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  5360  02AE' 3000               	movlw	0
  5361  02AF' 0200'              	subwf	(??_vfpfcnvrt+3)^(0+128),w
  5362  02B0' 301A               	movlw	26
  5363  02B1' 1903               	skipnz
  5364  02B2' 0200'              	subwf	(??_vfpfcnvrt+2)^(0+128),w
  5365  02B3' 1C03               	skipc
  5366  02B4' 2800'              	goto	u6351
  5367  02B5' 2800'              	goto	u6350
  5368  02B6'                    u6351:
  5369  02B6' 3001               	movlw	1
  5370  02B7' 2800'              	goto	u6360
  5371  02B8'                    u6350:
  5372  02B8' 3000               	movlw	0
  5373  02B9'                    u6360:
  5374  02B9' 0080'              	movwf	(??_vfpfcnvrt+4)^(0+128)
  5375  02BA' 0181'              	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  5376  02BB' 0800'              	movf	(??_vfpfcnvrt+4)^(0+128),w
  5377  02BC' 0022               	movlb	2	; select bank2
  5378  02BD' 0080'              	movwf	_vfpfcnvrt$1040^(0+256)
  5379  02BE' 0021               	movlb	1	; select bank1
  5380  02BF' 0800'              	movf	(??_vfpfcnvrt+5)^(0+128),w
  5381  02C0' 0022               	movlb	2	; select bank2
  5382  02C1' 0080'              	movwf	(_vfpfcnvrt$1040+1)^(0+256)
  5383  02C2'                    l4355:
  5384  02C2' 0800'              	movf	_vfpfcnvrt$1040^(0+256),w
  5385  02C3' 0400'              	iorwf	(_vfpfcnvrt$1040+1)^(0+256),w
  5386  02C4' 1903               	btfsc	3,2
  5387  02C5' 2800'              	goto	u6371
  5388  02C6' 2800'              	goto	u6370
  5389  02C7'                    u6371:
  5390  02C7' 2800'              	goto	l4359
  5391  02C8'                    u6370:
  5392  02C8'                    l4357:
  5393                           
  5394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5395  02C8' 0021               	movlb	1	; select bank1
  5396  02C9' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  5397  02CA' 0086               	movwf	6
  5398  02CB' 3001               	movlw	1	; select bank2/3
  5399  02CC' 0087               	movwf	7
  5400  02CD' 0801               	movf	1,w
  5401  02CE' 0084               	movwf	4
  5402  02CF' 3001               	movlw	1	; select bank2/3
  5403  02D0' 0085               	movwf	5
  5404  02D1' 3004               	movlw	4
  5405  02D2' 0781               	addwf	1,f
  5406  02D3' 3F00               	moviw [0]fsr0
  5407  02D4' 0022               	movlb	2	; select bank2
  5408  02D5' 0080'              	movwf	vfpfcnvrt@f^(0+256)
  5409  02D6' 3F01               	moviw [1]fsr0
  5410  02D7' 0080'              	movwf	(vfpfcnvrt@f+1)^(0+256)
  5411  02D8' 3F02               	moviw [2]fsr0
  5412  02D9' 0080'              	movwf	(vfpfcnvrt@f+2)^(0+256)
  5413  02DA' 3F03               	moviw [3]fsr0
  5414  02DB' 0080'              	movwf	(vfpfcnvrt@f+3)^(0+256)
  5415                           
  5416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  5417  02DC' 2800'              	goto	l4361
  5418  02DD'                    l4359:
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5421  02DD' 0021               	movlb	1	; select bank1
  5422  02DE' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  5423  02DF' 0086               	movwf	6
  5424  02E0' 3001               	movlw	1	; select bank2/3
  5425  02E1' 0087               	movwf	7
  5426  02E2' 0801               	movf	1,w
  5427  02E3' 0084               	movwf	4
  5428  02E4' 3001               	movlw	1	; select bank2/3
  5429  02E5' 0085               	movwf	5
  5430  02E6' 3004               	movlw	4
  5431  02E7' 0781               	addwf	1,f
  5432  02E8' 3F00               	moviw [0]fsr0
  5433  02E9' 0022               	movlb	2	; select bank2
  5434  02EA' 0080'              	movwf	vfpfcnvrt@f^(0+256)
  5435  02EB' 3F01               	moviw [1]fsr0
  5436  02EC' 0080'              	movwf	(vfpfcnvrt@f+1)^(0+256)
  5437  02ED' 3F02               	moviw [2]fsr0
  5438  02EE' 0080'              	movwf	(vfpfcnvrt@f+2)^(0+256)
  5439  02EF' 3F03               	moviw [3]fsr0
  5440  02F0' 0080'              	movwf	(vfpfcnvrt@f+3)^(0+256)
  5441  02F1'                    l4361:
  5442                           
  5443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5444  02F1' 0021               	movlb	1	; select bank1
  5445  02F2' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5446  02F3' 0086               	movwf	6
  5447  02F4' 3001               	movlw	1	; select bank2/3
  5448  02F5' 0087               	movwf	7
  5449  02F6' 3002               	movlw	2
  5450  02F7' 0781               	addwf	1,f
  5451  02F8' 3141               	addfsr 1,1
  5452  02F9' 1803               	skipnc
  5453  02FA' 0A81               	incf	1,f
  5454  02FB'                    l4363:
  5455                           
  5456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  5457  02FB' 0022               	movlb	2	; select bank2
  5458  02FC' 0800'              	movf	(vfpfcnvrt@f+3)^(0+256),w
  5459  02FD' 0021               	movlb	1	; select bank1
  5460  02FE' 0080'              	movwf	(efgtoa@f+3)^(0+128)
  5461  02FF' 0022               	movlb	2	; select bank2
  5462  0300' 0800'              	movf	(vfpfcnvrt@f+2)^(0+256),w
  5463  0301' 0021               	movlb	1	; select bank1
  5464  0302' 0080'              	movwf	(efgtoa@f+2)^(0+128)
  5465  0303' 0022               	movlb	2	; select bank2
  5466  0304' 0800'              	movf	(vfpfcnvrt@f+1)^(0+256),w
  5467  0305' 0021               	movlb	1	; select bank1
  5468  0306' 0080'              	movwf	(efgtoa@f+1)^(0+128)
  5469  0307' 0022               	movlb	2	; select bank2
  5470  0308' 0800'              	movf	vfpfcnvrt@f^(0+256),w
  5471  0309' 0021               	movlb	1	; select bank1
  5472  030A' 0080'              	movwf	efgtoa@f^(0+128)
  5473  030B' 0022               	movlb	2	; select bank2
  5474  030C' 0800'              	movf	vfpfcnvrt@c^(0+256),w
  5475  030D' 0021               	movlb	1	; select bank1
  5476  030E' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5477  030F' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5478  0310' 0080'              	movwf	efgtoa@c^(0+128)
  5479  0311' 0022               	movlb	2	; select bank2
  5480  0312' 0800'              	movf	vfpfcnvrt@fp^(0+256),w
  5481  0313' 3180' 2000' 3180'  	fcall	_efgtoa
  5482  0316' 0021               	movlb	1	; select bank1
  5483  0317' 0800'              	movf	(?_efgtoa+1)^(0+128),w
  5484  0318' 0080'              	movwf	(?_vfpfcnvrt+1)^(0+128)
  5485  0319' 0800'              	movf	?_efgtoa^(0+128),w
  5486  031A' 0080'              	movwf	?_vfpfcnvrt^(0+128)
  5487  031B' 2800'              	goto	l1071
  5488  031C'                    l4367:
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5491  031C' 0021               	movlb	1	; select bank1
  5492  031D' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5493  031E' 0086               	movwf	6
  5494  031F' 3001               	movlw	1	; select bank2/3
  5495  0320' 0087               	movwf	7
  5496  0321' 3F40               	moviw [0]fsr1
  5497  0322' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5498  0323' 3F41               	moviw [1]fsr1
  5499  0324' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5500  0325' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5501  0326' 0084               	movwf	4
  5502  0327' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  5503  0328' 0085               	movwf	5
  5504  0329' 0012               	moviw fsr0++
  5505  032A' 3A25               	xorlw	37
  5506  032B' 1D03               	btfss	3,2
  5507  032C' 2800'              	goto	u6381
  5508  032D' 2800'              	goto	u6380
  5509  032E'                    u6381:
  5510  032E' 2800'              	goto	l4377
  5511  032F'                    u6380:
  5512  032F'                    l4369:
  5513                           
  5514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5515  032F' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5516  0330' 0086               	movwf	6
  5517  0331' 3001               	movlw	1	; select bank2/3
  5518  0332' 0087               	movwf	7
  5519  0333' 3001               	movlw	1
  5520  0334' 0781               	addwf	1,f
  5521  0335' 3141               	addfsr 1,1
  5522  0336' 1803               	skipnc
  5523  0337' 0A81               	incf	1,f
  5524  0338'                    l4371:
  5525                           
  5526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5527  0338' 3025               	movlw	37
  5528  0339' 0080'              	movwf	fputc@c
  5529  033A' 3000               	movlw	0
  5530  033B' 0081'              	movwf	fputc@c+1
  5531  033C' 0022               	movlb	2	; select bank2
  5532  033D' 0800'              	movf	vfpfcnvrt@fp^(0+256),w
  5533  033E' 0021               	movlb	1	; select bank1
  5534  033F' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5535  0340' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5536  0341' 0082'              	movwf	fputc@fp
  5537  0342' 3180' 2000' 3180'  	fcall	_fputc
  5538  0345'                    l4373:
  5539                           
  5540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5541  0345' 3001               	movlw	1
  5542  0346' 0021               	movlb	1	; select bank1
  5543  0347' 0080'              	movwf	?_vfpfcnvrt^(0+128)
  5544  0348' 3000               	movlw	0
  5545  0349' 0081'              	movwf	(?_vfpfcnvrt^(0+128)+1)
  5546  034A' 2800'              	goto	l1071
  5547  034B'                    l4377:
  5548                           
  5549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5550  034B' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5551  034C' 0086               	movwf	6
  5552  034D' 3001               	movlw	1	; select bank2/3
  5553  034E' 0087               	movwf	7
  5554  034F' 3001               	movlw	1
  5555  0350' 0781               	addwf	1,f
  5556  0351' 3141               	addfsr 1,1
  5557  0352' 1803               	skipnc
  5558  0353' 0A81               	incf	1,f
  5559  0354'                    l4379:
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5562  0354' 0180'              	clrf	?_vfpfcnvrt^(0+128)
  5563  0355' 0180'              	clrf	(?_vfpfcnvrt+1)^(0+128)
  5564  0356' 2800'              	goto	l1071
  5565  0357'                    l4383:
  5566                           
  5567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5568  0357' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5569  0358' 0086               	movwf	6
  5570  0359' 3001               	movlw	1	; select bank2/3
  5571  035A' 0087               	movwf	7
  5572  035B' 3F40               	moviw [0]fsr1
  5573  035C' 0080'              	movwf	??_vfpfcnvrt^(0+128)
  5574  035D' 3F41               	moviw [1]fsr1
  5575  035E' 0081'              	movwf	(??_vfpfcnvrt^(0+128)+1)
  5576  035F' 0800'              	movf	??_vfpfcnvrt^(0+128),w
  5577  0360' 0084               	movwf	4
  5578  0361' 0800'              	movf	(??_vfpfcnvrt+1)^(0+128),w
  5579  0362' 0085               	movwf	5
  5580  0363' 0800               	movf	0,w	;code access
  5581  0364' 0080'              	movwf	(??_vfpfcnvrt+2)^(0+128)
  5582  0365' 0181'              	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5583  0366' 0800'              	movf	(??_vfpfcnvrt+2)^(0+128),w
  5584  0367' 0080'              	movwf	fputc@c
  5585  0368' 0800'              	movf	(??_vfpfcnvrt+3)^(0+128),w
  5586  0369' 0081'              	movwf	fputc@c+1
  5587  036A' 0022               	movlb	2	; select bank2
  5588  036B' 0800'              	movf	vfpfcnvrt@fp^(0+256),w
  5589  036C' 0021               	movlb	1	; select bank1
  5590  036D' 0080'              	movwf	(??_vfpfcnvrt+4)^(0+128)
  5591  036E' 0800'              	movf	(??_vfpfcnvrt+4)^(0+128),w
  5592  036F' 0082'              	movwf	fputc@fp
  5593  0370' 3180' 2000' 3180'  	fcall	_fputc
  5594  0373'                    l4385:
  5595                           
  5596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5597  0373' 0021               	movlb	1	; select bank1
  5598  0374' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  5599  0375' 0086               	movwf	6
  5600  0376' 3001               	movlw	1	; select bank2/3
  5601  0377' 0087               	movwf	7
  5602  0378' 3001               	movlw	1
  5603  0379' 0781               	addwf	1,f
  5604  037A' 3141               	addfsr 1,1
  5605  037B' 1803               	skipnc
  5606  037C' 0A81               	incf	1,f
  5607  037D' 2800'              	goto	l4373
  5608  037E'                    l1071:
  5609  037E' 0008               	return
  5610  037F'                    __end_of_vfpfcnvrt:
  5611                           
  5612                           	psect	text4
  5613  0000'                    __ptext4:	
  5614 ;; *************** function _strncmp *****************
  5615 ;; Defined at:
  5616 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  _l              1    wreg     PTR const unsigned char 
  5619 ;;		 -> vfpfcnvrt@ct(3), 
  5620 ;;  _r              2    0[COMMON] PTR const unsigned char 
  5621 ;;		 -> STR_12(3), 
  5622 ;;  n               2    2[COMMON] unsigned int 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  _l              1    5[COMMON] PTR const unsigned char 
  5625 ;;		 -> vfpfcnvrt@ct(3), 
  5626 ;;  r               2    6[COMMON] PTR const unsigned char 
  5627 ;;		 -> STR_12(3), 
  5628 ;;  l               1    8[COMMON] PTR const unsigned char 
  5629 ;;		 -> vfpfcnvrt@ct(3), 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  2    0[COMMON] int 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;Total ram usage:        9 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_vfpfcnvrt
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _strncmp
  5654  0000'                    _strncmp:
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  5658                           ;strncmp@_l stored from wreg
  5659  0000' 0085'              	movwf	strncmp@_l
  5660  0001'                    l4231:
  5661  0001' 0805'              	movf	strncmp@_l,w
  5662  0002' 0084'              	movwf	??_strncmp
  5663  0003' 0804'              	movf	??_strncmp,w
  5664  0004' 0088'              	movwf	strncmp@l
  5665  0005' 0801'              	movf	strncmp@_r+1,w
  5666  0006' 0087'              	movwf	strncmp@r+1
  5667  0007' 0800'              	movf	strncmp@_r,w
  5668  0008' 0086'              	movwf	strncmp@r
  5669  0009'                    l4233:
  5670  0009' 3001               	movlw	1
  5671  000A' 0282'              	subwf	strncmp@n,f
  5672  000B' 3000               	movlw	0
  5673  000C' 3B83'              	subwfb	strncmp@n+1,f
  5674  000D' 0A02'              	incf	strncmp@n,w
  5675  000E' 1D03               	skipz
  5676  000F' 2800'              	goto	u6131
  5677  0010' 0A03'              	incf	strncmp@n+1,w
  5678  0011' 1D03               	btfss	3,2
  5679  0012' 2800'              	goto	u6131
  5680  0013' 2800'              	goto	u6130
  5681  0014'                    u6131:
  5682  0014' 2800'              	goto	l4245
  5683  0015'                    u6130:
  5684  0015'                    l4235:
  5685  0015' 0180'              	clrf	?_strncmp
  5686  0016' 0181'              	clrf	?_strncmp+1
  5687  0017' 2800'              	goto	l1207
  5688  0018'                    l4239:
  5689  0018' 3001               	movlw	1
  5690  0019' 0084'              	movwf	??_strncmp
  5691  001A' 0804'              	movf	??_strncmp,w
  5692  001B' 0788'              	addwf	strncmp@l,f
  5693  001C'                    l4241:
  5694  001C' 3001               	movlw	1
  5695  001D' 0786'              	addwf	strncmp@r,f
  5696  001E' 3000               	movlw	0
  5697  001F' 3D87'              	addwfc	strncmp@r+1,f
  5698  0020'                    l4243:
  5699  0020' 3001               	movlw	1
  5700  0021' 0282'              	subwf	strncmp@n,f
  5701  0022' 3000               	movlw	0
  5702  0023' 3B83'              	subwfb	strncmp@n+1,f
  5703  0024'                    l4245:
  5704  0024' 0808'              	movf	strncmp@l,w
  5705  0025' 0086               	movwf	6
  5706  0026' 3001               	movlw	1	; select bank2/3
  5707  0027' 0087               	movwf	7
  5708  0028' 0801               	movf	1,w
  5709  0029' 1903               	btfsc	3,2
  5710  002A' 2800'              	goto	u6141
  5711  002B' 2800'              	goto	u6140
  5712  002C'                    u6141:
  5713  002C' 2800'              	goto	l4253
  5714  002D'                    u6140:
  5715  002D'                    l4247:
  5716  002D' 0806'              	movf	strncmp@r,w
  5717  002E' 0084               	movwf	4
  5718  002F' 0807'              	movf	strncmp@r+1,w
  5719  0030' 0085               	movwf	5
  5720  0031' 0012               	moviw fsr0++
  5721  0032' 1903               	btfsc	3,2
  5722  0033' 2800'              	goto	u6151
  5723  0034' 2800'              	goto	u6150
  5724  0035'                    u6151:
  5725  0035' 2800'              	goto	l4253
  5726  0036'                    u6150:
  5727  0036'                    l4249:
  5728  0036' 0802'              	movf	strncmp@n,w
  5729  0037' 0403'              	iorwf	strncmp@n+1,w
  5730  0038' 1903               	btfsc	3,2
  5731  0039' 2800'              	goto	u6161
  5732  003A' 2800'              	goto	u6160
  5733  003B'                    u6161:
  5734  003B' 2800'              	goto	l4253
  5735  003C'                    u6160:
  5736  003C'                    l4251:
  5737  003C' 0806'              	movf	strncmp@r,w
  5738  003D' 0084               	movwf	4
  5739  003E' 0807'              	movf	strncmp@r+1,w
  5740  003F' 0085               	movwf	5
  5741  0040' 0800               	movf	0,w	;code access
  5742  0041' 0084'              	movwf	??_strncmp
  5743  0042' 0808'              	movf	strncmp@l,w
  5744  0043' 0086               	movwf	6
  5745  0044' 3001               	movlw	1	; select bank2/3
  5746  0045' 0087               	movwf	7
  5747  0046' 0801               	movf	1,w
  5748  0047' 0604'              	xorwf	??_strncmp,w
  5749  0048' 1903               	skipnz
  5750  0049' 2800'              	goto	u6171
  5751  004A' 2800'              	goto	u6170
  5752  004B'                    u6171:
  5753  004B' 2800'              	goto	l4239
  5754  004C'                    u6170:
  5755  004C'                    l4253:
  5756  004C' 0808'              	movf	strncmp@l,w
  5757  004D' 0086               	movwf	6
  5758  004E' 3001               	movlw	1	; select bank2/3
  5759  004F' 0087               	movwf	7
  5760  0050' 0806'              	movf	strncmp@r,w
  5761  0051' 0084               	movwf	4
  5762  0052' 0807'              	movf	strncmp@r+1,w
  5763  0053' 0085               	movwf	5
  5764  0054' 0800               	movf	0,w	;code access
  5765  0055' 0201               	subwf	1,w
  5766  0056' 0080'              	movwf	?_strncmp
  5767  0057' 0181'              	clrf	?_strncmp+1
  5768  0058' 1C03               	skipc
  5769  0059' 0381'              	decf	?_strncmp+1,f
  5770  005A'                    l1207:
  5771  005A' 0008               	return
  5772  005B'                    __end_of_strncmp:
  5773                           
  5774                           	psect	text5
  5775  0000'                    __ptext5:	
  5776 ;; *************** function _efgtoa *****************
  5777 ;; Defined at:
  5778 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  fp              1    wreg     PTR struct _IO_FILE
  5781 ;;		 -> sprintf@f(5), 
  5782 ;;  f               4    0[BANK1 ] PTR struct _IO_FILE
  5783 ;;  c               1    4[BANK1 ] unsigned char 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  fp              1   37[BANK1 ] PTR struct _IO_FILE
  5786 ;;		 -> sprintf@f(5), 
  5787 ;;  u               4   62[BANK1 ] PTR struct _IO_FILE
  5788 ;;  g               4   54[BANK1 ] PTR struct _IO_FILE
  5789 ;;  l               4   48[BANK1 ] PTR struct _IO_FILE
  5790 ;;  h               4   44[BANK1 ] PTR struct _IO_FILE
  5791 ;;  ou              4   29[BANK1 ] PTR struct _IO_FILE
  5792 ;;  n               2   60[BANK1 ] int 
  5793 ;;  e               2   58[BANK1 ] int 
  5794 ;;  i               2   52[BANK1 ] int 
  5795 ;;  w               2   40[BANK1 ] int 
  5796 ;;  p               2   38[BANK1 ] int 
  5797 ;;  sign            2   35[BANK1 ] int 
  5798 ;;  d               2   33[BANK1 ] int 
  5799 ;;  m               2   27[BANK1 ] int 
  5800 ;;  ne              2   25[BANK1 ] int 
  5801 ;;  pp              2   23[BANK1 ] int 
  5802 ;;  t               2   21[BANK1 ] int 
  5803 ;;  mode            1   43[BANK1 ] unsigned char 
  5804 ;;  nmode           1   42[BANK1 ] unsigned char 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  2    0[BANK1 ] int 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5814 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;Total ram usage:       66 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    4
  5821 ;; This function calls:
  5822 ;;		___awdiv
  5823 ;;		___awmod
  5824 ;;		___fladd
  5825 ;;		___fldiv
  5826 ;;		___fleq
  5827 ;;		___flge
  5828 ;;		___flmul
  5829 ;;		___flneg
  5830 ;;		___flsub
  5831 ;;		___fltol
  5832 ;;		___fpclassifyf
  5833 ;;		_floorf
  5834 ;;		_isupper
  5835 ;;		_pad
  5836 ;;		_strcpy
  5837 ;;		_tolower
  5838 ;; This function is called by:
  5839 ;;		_vfpfcnvrt
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           
  5844                           ;psect for function _efgtoa
  5845  0000'                    _efgtoa:
  5846                           
  5847                           ;incstack = 0
  5848                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5849                           ;efgtoa@fp stored from wreg
  5850  0000' 0021               	movlb	1	; select bank1
  5851  0001' 0080'              	movwf	efgtoa@fp^(0+128)
  5852  0002'                    l3885:
  5853                           
  5854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  5855  0002' 0180'              	clrf	efgtoa@sign^(0+128)
  5856  0003' 0180'              	clrf	(efgtoa@sign+1)^(0+128)
  5857  0004'                    l3887:
  5858                           
  5859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  5860  0004' 0800'              	movf	(efgtoa@f+3)^(0+128),w
  5861  0005' 0080'              	movwf	(efgtoa@g+3)^(0+128)
  5862  0006' 0800'              	movf	(efgtoa@f+2)^(0+128),w
  5863  0007' 0080'              	movwf	(efgtoa@g+2)^(0+128)
  5864  0008' 0800'              	movf	(efgtoa@f+1)^(0+128),w
  5865  0009' 0080'              	movwf	(efgtoa@g+1)^(0+128)
  5866  000A' 0800'              	movf	efgtoa@f^(0+128),w
  5867  000B' 0080'              	movwf	efgtoa@g^(0+128)
  5868  000C'                    l3889:
  5869                           
  5870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  5871  000C' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  5872  000D' 0020               	movlb	0	; select bank0
  5873  000E' 00C7'              	movwf	___flge@ff1+3
  5874  000F' 0021               	movlb	1	; select bank1
  5875  0010' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  5876  0011' 0020               	movlb	0	; select bank0
  5877  0012' 00C6'              	movwf	___flge@ff1+2
  5878  0013' 0021               	movlb	1	; select bank1
  5879  0014' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  5880  0015' 0020               	movlb	0	; select bank0
  5881  0016' 00C5'              	movwf	___flge@ff1+1
  5882  0017' 0021               	movlb	1	; select bank1
  5883  0018' 0800'              	movf	efgtoa@g^(0+128),w
  5884  0019' 0020               	movlb	0	; select bank0
  5885  001A' 00C4'              	movwf	___flge@ff1
  5886  001B' 3000               	movlw	0
  5887  001C' 00CB'              	movwf	___flge@ff2+3
  5888  001D' 3000               	movlw	0
  5889  001E' 00CA'              	movwf	___flge@ff2+2
  5890  001F' 3000               	movlw	0
  5891  0020' 00C9'              	movwf	___flge@ff2+1
  5892  0021' 3000               	movlw	0
  5893  0022' 00C8'              	movwf	___flge@ff2
  5894  0023' 3180' 2000' 3180'  	fcall	___flge
  5895  0026' 1803               	btfsc	3,0
  5896  0027' 2800'              	goto	u5521
  5897  0028' 2800'              	goto	u5520
  5898  0029'                    u5521:
  5899  0029' 2800'              	goto	l3895
  5900  002A'                    u5520:
  5901  002A'                    l3891:
  5902                           
  5903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  5904  002A' 3001               	movlw	1
  5905  002B' 0021               	movlb	1	; select bank1
  5906  002C' 0080'              	movwf	efgtoa@sign^(0+128)
  5907  002D' 3000               	movlw	0
  5908  002E' 0081'              	movwf	(efgtoa@sign^(0+128)+1)
  5909  002F'                    l3893:
  5910                           
  5911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  5912  002F' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  5913  0030' 0083'              	movwf	___flneg@f1+3
  5914  0031' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  5915  0032' 0082'              	movwf	___flneg@f1+2
  5916  0033' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  5917  0034' 0081'              	movwf	___flneg@f1+1
  5918  0035' 0800'              	movf	efgtoa@g^(0+128),w
  5919  0036' 0080'              	movwf	___flneg@f1
  5920  0037' 3180' 2000' 3180'  	fcall	___flneg
  5921  003A' 0803'              	movf	?___flneg+3,w
  5922  003B' 0021               	movlb	1	; select bank1
  5923  003C' 0080'              	movwf	(efgtoa@g+3)^(0+128)
  5924  003D' 0802'              	movf	?___flneg+2,w
  5925  003E' 0080'              	movwf	(efgtoa@g+2)^(0+128)
  5926  003F' 0801'              	movf	?___flneg+1,w
  5927  0040' 0080'              	movwf	(efgtoa@g+1)^(0+128)
  5928  0041' 0800'              	movf	?___flneg,w
  5929  0042' 0080'              	movwf	efgtoa@g^(0+128)
  5930  0043'                    l3895:
  5931                           
  5932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  5933  0043' 0021               	movlb	1	; select bank1
  5934  0044' 0180'              	clrf	efgtoa@n^(0+128)
  5935  0045' 0180'              	clrf	(efgtoa@n+1)^(0+128)
  5936  0046'                    l3897:
  5937                           
  5938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  5939  0046' 0023               	movlb	3	; select bank3
  5940  0047' 0800'              	movf	(_width+1)^(0+384),w
  5941  0048' 0021               	movlb	1	; select bank1
  5942  0049' 0080'              	movwf	(efgtoa@w+1)^(0+128)
  5943  004A' 0023               	movlb	3	; select bank3
  5944  004B' 0800'              	movf	_width^(0+384),w
  5945  004C' 0021               	movlb	1	; select bank1
  5946  004D' 0080'              	movwf	efgtoa@w^(0+128)
  5947  004E'                    l3899:
  5948                           
  5949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  5950  004E' 0800'              	movf	efgtoa@sign^(0+128),w
  5951  004F' 0400'              	iorwf	(efgtoa@sign+1)^(0+128),w
  5952  0050' 1D03               	btfss	3,2
  5953  0051' 2800'              	goto	u5531
  5954  0052' 2800'              	goto	u5530
  5955  0053'                    u5531:
  5956  0053' 2800'              	goto	l3903
  5957  0054'                    u5530:
  5958  0054'                    l3901:
  5959  0054' 0022               	movlb	2	; select bank2
  5960  0055' 1D00'              	btfss	_flags^(0+256),2
  5961  0056' 2800'              	goto	u5541
  5962  0057' 2800'              	goto	u5540
  5963  0058'                    u5541:
  5964  0058' 2800'              	goto	l3915
  5965  0059'                    u5540:
  5966  0059'                    l3903:
  5967                           
  5968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  5969  0059' 0021               	movlb	1	; select bank1
  5970  005A' 0800'              	movf	efgtoa@sign^(0+128),w
  5971  005B' 0400'              	iorwf	(efgtoa@sign+1)^(0+128),w
  5972  005C' 1D03               	btfss	3,2
  5973  005D' 2800'              	goto	u5551
  5974  005E' 2800'              	goto	u5550
  5975  005F'                    u5551:
  5976  005F' 2800'              	goto	l3907
  5977  0060'                    u5550:
  5978  0060'                    l3905:
  5979  0060' 302B               	movlw	43
  5980  0061' 0080'              	movwf	_efgtoa$1009^(0+128)
  5981  0062' 3000               	movlw	0
  5982  0063' 0081'              	movwf	(_efgtoa$1009^(0+128)+1)
  5983  0064' 2800'              	goto	l3909
  5984  0065'                    l3907:
  5985  0065' 302D               	movlw	45
  5986  0066' 0080'              	movwf	_efgtoa$1009^(0+128)
  5987  0067' 3000               	movlw	0
  5988  0068' 0081'              	movwf	(_efgtoa$1009^(0+128)+1)
  5989  0069'                    l3909:
  5990  0069' 0800'              	movf	_efgtoa$1009^(0+128),w
  5991  006A' 0080'              	movwf	??_efgtoa^(0+128)
  5992  006B' 0800'              	movf	??_efgtoa^(0+128),w
  5993  006C' 0024               	movlb	4	; select bank4
  5994  006D' 0080'              	movwf	_dbuf^(0+512)
  5995  006E'                    l3911:
  5996                           
  5997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  5998  006E' 3001               	movlw	1
  5999  006F' 0021               	movlb	1	; select bank1
  6000  0070' 0780'              	addwf	efgtoa@n^(0+128),f
  6001  0071' 3000               	movlw	0
  6002  0072' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  6003  0073'                    l3913:
  6004                           
  6005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  6006  0073' 30FF               	movlw	255
  6007  0074' 0780'              	addwf	efgtoa@w^(0+128),f
  6008  0075' 30FF               	movlw	255
  6009  0076' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  6010  0077'                    l3915:
  6011                           
  6012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6013  0077' 0021               	movlb	1	; select bank1
  6014  0078' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  6015  0079' 0083'              	movwf	___fpclassifyf@x+3
  6016  007A' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  6017  007B' 0082'              	movwf	___fpclassifyf@x+2
  6018  007C' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  6019  007D' 0081'              	movwf	___fpclassifyf@x+1
  6020  007E' 0800'              	movf	efgtoa@g^(0+128),w
  6021  007F' 0080'              	movwf	___fpclassifyf@x
  6022  0080' 3180' 2000' 3180'  	fcall	___fpclassifyf
  6023  0083' 0300'              	decf	?___fpclassifyf,w
  6024  0084' 0401'              	iorwf	?___fpclassifyf+1,w
  6025  0085' 1D03               	btfss	3,2
  6026  0086' 2800'              	goto	u5561
  6027  0087' 2800'              	goto	u5560
  6028  0088'                    u5561:
  6029  0088' 2800'              	goto	l3933
  6030  0089'                    u5560:
  6031  0089'                    l3917:
  6032  0089' 0021               	movlb	1	; select bank1
  6033  008A' 0800'              	movf	efgtoa@c^(0+128),w
  6034  008B' 3EBF               	addlw	191
  6035  008C' 0080'              	movwf	??_efgtoa^(0+128)
  6036  008D' 30FF               	movlw	255
  6037  008E' 1803               	skipnc
  6038  008F' 3000               	movlw	0
  6039  0090' 0081'              	movwf	(??_efgtoa^(0+128)+1)
  6040  0091' 3000               	movlw	0
  6041  0092' 0200'              	subwf	(??_efgtoa+1)^(0+128),w
  6042  0093' 301A               	movlw	26
  6043  0094' 1903               	skipnz
  6044  0095' 0200'              	subwf	??_efgtoa^(0+128),w
  6045  0096' 1C03               	skipc
  6046  0097' 2800'              	goto	u5571
  6047  0098' 2800'              	goto	u5570
  6048  0099'                    u5571:
  6049  0099' 3001               	movlw	1
  6050  009A' 2800'              	goto	u5580
  6051  009B'                    u5570:
  6052  009B' 3000               	movlw	0
  6053  009C'                    u5580:
  6054  009C' 0080'              	movwf	(??_efgtoa+2)^(0+128)
  6055  009D' 0181'              	clrf	((??_efgtoa+2)^(0+128)+1)
  6056  009E' 0800'              	movf	(??_efgtoa+2)^(0+128),w
  6057  009F' 0080'              	movwf	_efgtoa$1010^(0+128)
  6058  00A0' 0800'              	movf	(??_efgtoa+3)^(0+128),w
  6059  00A1' 0080'              	movwf	(_efgtoa$1010+1)^(0+128)
  6060  00A2'                    l3921:
  6061  00A2' 0800'              	movf	_efgtoa$1010^(0+128),w
  6062  00A3' 0400'              	iorwf	(_efgtoa$1010+1)^(0+128),w
  6063  00A4' 1903               	btfsc	3,2
  6064  00A5' 2800'              	goto	u5591
  6065  00A6' 2800'              	goto	u5590
  6066  00A7'                    u5591:
  6067  00A7' 2800'              	goto	l3925
  6068  00A8'                    u5590:
  6069  00A8'                    l3923:
  6070                           
  6071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6072  00A8' 3000'              	movlw	low (STR_2| (0+32768))
  6073  00A9' 0080'              	movwf	strcpy@src
  6074  00AA' 3000'              	movlw	high (STR_2| (0+32768))
  6075  00AB' 0081'              	movwf	strcpy@src+1
  6076  00AC' 0800'              	movf	efgtoa@n^(0+128),w
  6077  00AD' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  6078  00AE' 3180' 2000' 3180'  	fcall	_strcpy
  6079                           
  6080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6081  00B1' 2800'              	goto	l3927
  6082  00B2'                    l3925:
  6083                           
  6084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6085  00B2' 3000'              	movlw	low (STR_3| (0+32768))
  6086  00B3' 0080'              	movwf	strcpy@src
  6087  00B4' 3000'              	movlw	high (STR_3| (0+32768))
  6088  00B5' 0081'              	movwf	strcpy@src+1
  6089  00B6' 0800'              	movf	efgtoa@n^(0+128),w
  6090  00B7' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  6091  00B8' 3180' 2000' 3180'  	fcall	_strcpy
  6092  00BB'                    l3927:
  6093                           
  6094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6095  00BB' 30FD               	movlw	253
  6096  00BC' 0021               	movlb	1	; select bank1
  6097  00BD' 0780'              	addwf	efgtoa@w^(0+128),f
  6098  00BE' 30FF               	movlw	255
  6099  00BF' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  6100  00C0'                    l3929:
  6101                           
  6102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6103  00C0' 3000'              	movlw	(low (_dbuf| (0+512)))& (0+255)
  6104  00C1' 0080'              	movwf	??_efgtoa^(0+128)
  6105  00C2' 0800'              	movf	??_efgtoa^(0+128),w
  6106  00C3' 0020               	movlb	0	; select bank0
  6107  00C4' 0084'              	movwf	pad@buf
  6108  00C5' 0021               	movlb	1	; select bank1
  6109  00C6' 0800'              	movf	(efgtoa@w+1)^(0+128),w
  6110  00C7' 0020               	movlb	0	; select bank0
  6111  00C8' 0086'              	movwf	pad@p+1
  6112  00C9' 0021               	movlb	1	; select bank1
  6113  00CA' 0800'              	movf	efgtoa@w^(0+128),w
  6114  00CB' 0020               	movlb	0	; select bank0
  6115  00CC' 0085'              	movwf	pad@p
  6116  00CD' 0021               	movlb	1	; select bank1
  6117  00CE' 0800'              	movf	efgtoa@fp^(0+128),w
  6118  00CF' 3180' 2000' 3180'  	fcall	_pad
  6119  00D2' 0020               	movlb	0	; select bank0
  6120  00D3' 0805'              	movf	?_pad+1,w
  6121  00D4' 0021               	movlb	1	; select bank1
  6122  00D5' 0080'              	movwf	(?_efgtoa+1)^(0+128)
  6123  00D6' 0020               	movlb	0	; select bank0
  6124  00D7' 0804'              	movf	?_pad,w
  6125  00D8' 0021               	movlb	1	; select bank1
  6126  00D9' 0080'              	movwf	?_efgtoa^(0+128)
  6127  00DA' 2800'              	goto	l967
  6128  00DB'                    l3933:
  6129                           
  6130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6131  00DB' 0021               	movlb	1	; select bank1
  6132  00DC' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  6133  00DD' 0083'              	movwf	___fpclassifyf@x+3
  6134  00DE' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  6135  00DF' 0082'              	movwf	___fpclassifyf@x+2
  6136  00E0' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  6137  00E1' 0081'              	movwf	___fpclassifyf@x+1
  6138  00E2' 0800'              	movf	efgtoa@g^(0+128),w
  6139  00E3' 0080'              	movwf	___fpclassifyf@x
  6140  00E4' 3180' 2000' 3180'  	fcall	___fpclassifyf
  6141  00E7' 0800'              	movf	?___fpclassifyf,w
  6142  00E8' 0401'              	iorwf	?___fpclassifyf+1,w
  6143  00E9' 1D03               	btfss	3,2
  6144  00EA' 2800'              	goto	u5601
  6145  00EB' 2800'              	goto	u5600
  6146  00EC'                    u5601:
  6147  00EC' 2800'              	goto	l3951
  6148  00ED'                    u5600:
  6149  00ED'                    l3935:
  6150  00ED' 0021               	movlb	1	; select bank1
  6151  00EE' 0800'              	movf	efgtoa@c^(0+128),w
  6152  00EF' 3EBF               	addlw	191
  6153  00F0' 0080'              	movwf	??_efgtoa^(0+128)
  6154  00F1' 30FF               	movlw	255
  6155  00F2' 1803               	skipnc
  6156  00F3' 3000               	movlw	0
  6157  00F4' 0081'              	movwf	(??_efgtoa^(0+128)+1)
  6158  00F5' 3000               	movlw	0
  6159  00F6' 0200'              	subwf	(??_efgtoa+1)^(0+128),w
  6160  00F7' 301A               	movlw	26
  6161  00F8' 1903               	skipnz
  6162  00F9' 0200'              	subwf	??_efgtoa^(0+128),w
  6163  00FA' 1C03               	skipc
  6164  00FB' 2800'              	goto	u5611
  6165  00FC' 2800'              	goto	u5610
  6166  00FD'                    u5611:
  6167  00FD' 3001               	movlw	1
  6168  00FE' 2800'              	goto	u5620
  6169  00FF'                    u5610:
  6170  00FF' 3000               	movlw	0
  6171  0100'                    u5620:
  6172  0100' 0080'              	movwf	(??_efgtoa+2)^(0+128)
  6173  0101' 0181'              	clrf	((??_efgtoa+2)^(0+128)+1)
  6174  0102' 0800'              	movf	(??_efgtoa+2)^(0+128),w
  6175  0103' 0080'              	movwf	_efgtoa$1014^(0+128)
  6176  0104' 0800'              	movf	(??_efgtoa+3)^(0+128),w
  6177  0105' 0080'              	movwf	(_efgtoa$1014+1)^(0+128)
  6178  0106'                    l3939:
  6179  0106' 0800'              	movf	_efgtoa$1014^(0+128),w
  6180  0107' 0400'              	iorwf	(_efgtoa$1014+1)^(0+128),w
  6181  0108' 1903               	btfsc	3,2
  6182  0109' 2800'              	goto	u5631
  6183  010A' 2800'              	goto	u5630
  6184  010B'                    u5631:
  6185  010B' 2800'              	goto	l3943
  6186  010C'                    u5630:
  6187  010C'                    l3941:
  6188                           
  6189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6190  010C' 3000'              	movlw	low (STR_6| (0+32768))
  6191  010D' 0080'              	movwf	strcpy@src
  6192  010E' 3000'              	movlw	high (STR_6| (0+32768))
  6193  010F' 0081'              	movwf	strcpy@src+1
  6194  0110' 0800'              	movf	efgtoa@n^(0+128),w
  6195  0111' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  6196  0112' 3180' 2000' 3180'  	fcall	_strcpy
  6197                           
  6198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6199  0115' 2800'              	goto	l3945
  6200  0116'                    l3943:
  6201                           
  6202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6203  0116' 3000'              	movlw	low (STR_7| (0+32768))
  6204  0117' 0080'              	movwf	strcpy@src
  6205  0118' 3000'              	movlw	high (STR_7| (0+32768))
  6206  0119' 0081'              	movwf	strcpy@src+1
  6207  011A' 0800'              	movf	efgtoa@n^(0+128),w
  6208  011B' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  6209  011C' 3180' 2000' 3180'  	fcall	_strcpy
  6210  011F'                    l3945:
  6211                           
  6212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6213  011F' 30FD               	movlw	253
  6214  0120' 0021               	movlb	1	; select bank1
  6215  0121' 0780'              	addwf	efgtoa@w^(0+128),f
  6216  0122' 30FF               	movlw	255
  6217  0123' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  6218  0124'                    l3947:
  6219                           
  6220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6221  0124' 3000'              	movlw	(low (_dbuf| (0+512)))& (0+255)
  6222  0125' 0080'              	movwf	??_efgtoa^(0+128)
  6223  0126' 0800'              	movf	??_efgtoa^(0+128),w
  6224  0127' 0020               	movlb	0	; select bank0
  6225  0128' 0084'              	movwf	pad@buf
  6226  0129' 0021               	movlb	1	; select bank1
  6227  012A' 0800'              	movf	(efgtoa@w+1)^(0+128),w
  6228  012B' 0020               	movlb	0	; select bank0
  6229  012C' 0086'              	movwf	pad@p+1
  6230  012D' 0021               	movlb	1	; select bank1
  6231  012E' 0800'              	movf	efgtoa@w^(0+128),w
  6232  012F' 0020               	movlb	0	; select bank0
  6233  0130' 0085'              	movwf	pad@p
  6234  0131' 0021               	movlb	1	; select bank1
  6235  0132' 0800'              	movf	efgtoa@fp^(0+128),w
  6236  0133' 3180' 2000' 3180'  	fcall	_pad
  6237  0136' 0020               	movlb	0	; select bank0
  6238  0137' 0805'              	movf	?_pad+1,w
  6239  0138' 0021               	movlb	1	; select bank1
  6240  0139' 0080'              	movwf	(?_efgtoa+1)^(0+128)
  6241  013A' 0020               	movlb	0	; select bank0
  6242  013B' 0804'              	movf	?_pad,w
  6243  013C' 0021               	movlb	1	; select bank1
  6244  013D' 0080'              	movwf	?_efgtoa^(0+128)
  6245  013E' 2800'              	goto	l967
  6246  013F'                    l3951:
  6247                           
  6248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6249  013F' 303F               	movlw	63
  6250  0140' 0021               	movlb	1	; select bank1
  6251  0141' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  6252  0142' 3080               	movlw	128
  6253  0143' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  6254  0144' 3000               	movlw	0
  6255  0145' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  6256  0146' 3000               	movlw	0
  6257  0147' 0080'              	movwf	efgtoa@u^(0+128)
  6258  0148'                    l3953:
  6259                           
  6260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6261  0148' 0180'              	clrf	efgtoa@e^(0+128)
  6262  0149' 0180'              	clrf	(efgtoa@e+1)^(0+128)
  6263  014A'                    l3955:
  6264                           
  6265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6266  014A' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  6267  014B' 0083'              	movwf	___fleq@ff1+3
  6268  014C' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  6269  014D' 0082'              	movwf	___fleq@ff1+2
  6270  014E' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  6271  014F' 0081'              	movwf	___fleq@ff1+1
  6272  0150' 0800'              	movf	efgtoa@g^(0+128),w
  6273  0151' 0080'              	movwf	___fleq@ff1
  6274  0152' 3000               	movlw	0
  6275  0153' 0087'              	movwf	___fleq@ff2+3
  6276  0154' 3000               	movlw	0
  6277  0155' 0086'              	movwf	___fleq@ff2+2
  6278  0156' 3000               	movlw	0
  6279  0157' 0085'              	movwf	___fleq@ff2+1
  6280  0158' 3000               	movlw	0
  6281  0159' 0084'              	movwf	___fleq@ff2
  6282  015A' 3180' 2000' 3180'  	fcall	___fleq
  6283  015D' 1803               	btfsc	3,0
  6284  015E' 2800'              	goto	u5641
  6285  015F' 2800'              	goto	u5640
  6286  0160'                    u5641:
  6287  0160' 2800'              	goto	l3971
  6288  0161'                    u5640:
  6289  0161' 2800'              	goto	l3963
  6290  0162'                    l3959:
  6291                           
  6292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6293  0162' 3041               	movlw	65
  6294  0163' 0020               	movlb	0	; select bank0
  6295  0164' 00AD'              	movwf	___flmul@b+3
  6296  0165' 3020               	movlw	32
  6297  0166' 00AC'              	movwf	___flmul@b+2
  6298  0167' 3000               	movlw	0
  6299  0168' 00AB'              	movwf	___flmul@b+1
  6300  0169' 3000               	movlw	0
  6301  016A' 00AA'              	movwf	___flmul@b
  6302  016B' 0021               	movlb	1	; select bank1
  6303  016C' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6304  016D' 0020               	movlb	0	; select bank0
  6305  016E' 00B1'              	movwf	___flmul@a+3
  6306  016F' 0021               	movlb	1	; select bank1
  6307  0170' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6308  0171' 0020               	movlb	0	; select bank0
  6309  0172' 00B0'              	movwf	___flmul@a+2
  6310  0173' 0021               	movlb	1	; select bank1
  6311  0174' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6312  0175' 0020               	movlb	0	; select bank0
  6313  0176' 00AF'              	movwf	___flmul@a+1
  6314  0177' 0021               	movlb	1	; select bank1
  6315  0178' 0800'              	movf	efgtoa@u^(0+128),w
  6316  0179' 0020               	movlb	0	; select bank0
  6317  017A' 00AE'              	movwf	___flmul@a
  6318  017B' 3180' 2000' 3180'  	fcall	___flmul
  6319  017E' 0020               	movlb	0	; select bank0
  6320  017F' 082D'              	movf	?___flmul+3,w
  6321  0180' 0021               	movlb	1	; select bank1
  6322  0181' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  6323  0182' 0020               	movlb	0	; select bank0
  6324  0183' 082C'              	movf	?___flmul+2,w
  6325  0184' 0021               	movlb	1	; select bank1
  6326  0185' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  6327  0186' 0020               	movlb	0	; select bank0
  6328  0187' 082B'              	movf	?___flmul+1,w
  6329  0188' 0021               	movlb	1	; select bank1
  6330  0189' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  6331  018A' 0020               	movlb	0	; select bank0
  6332  018B' 082A'              	movf	?___flmul,w
  6333  018C' 0021               	movlb	1	; select bank1
  6334  018D' 0080'              	movwf	efgtoa@u^(0+128)
  6335  018E'                    l3961:
  6336                           
  6337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6338  018E' 3001               	movlw	1
  6339  018F' 0780'              	addwf	efgtoa@e^(0+128),f
  6340  0190' 3000               	movlw	0
  6341  0191' 3D80'              	addwfc	(efgtoa@e+1)^(0+128),f
  6342  0192'                    l3963:
  6343                           
  6344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6345  0192' 0021               	movlb	1	; select bank1
  6346  0193' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  6347  0194' 0020               	movlb	0	; select bank0
  6348  0195' 00C7'              	movwf	___flge@ff1+3
  6349  0196' 0021               	movlb	1	; select bank1
  6350  0197' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  6351  0198' 0020               	movlb	0	; select bank0
  6352  0199' 00C6'              	movwf	___flge@ff1+2
  6353  019A' 0021               	movlb	1	; select bank1
  6354  019B' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  6355  019C' 0020               	movlb	0	; select bank0
  6356  019D' 00C5'              	movwf	___flge@ff1+1
  6357  019E' 0021               	movlb	1	; select bank1
  6358  019F' 0800'              	movf	efgtoa@g^(0+128),w
  6359  01A0' 0020               	movlb	0	; select bank0
  6360  01A1' 00C4'              	movwf	___flge@ff1
  6361  01A2' 3041               	movlw	65
  6362  01A3' 00AD'              	movwf	___flmul@b+3
  6363  01A4' 3020               	movlw	32
  6364  01A5' 00AC'              	movwf	___flmul@b+2
  6365  01A6' 3000               	movlw	0
  6366  01A7' 00AB'              	movwf	___flmul@b+1
  6367  01A8' 3000               	movlw	0
  6368  01A9' 00AA'              	movwf	___flmul@b
  6369  01AA' 0021               	movlb	1	; select bank1
  6370  01AB' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6371  01AC' 0020               	movlb	0	; select bank0
  6372  01AD' 00B1'              	movwf	___flmul@a+3
  6373  01AE' 0021               	movlb	1	; select bank1
  6374  01AF' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6375  01B0' 0020               	movlb	0	; select bank0
  6376  01B1' 00B0'              	movwf	___flmul@a+2
  6377  01B2' 0021               	movlb	1	; select bank1
  6378  01B3' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6379  01B4' 0020               	movlb	0	; select bank0
  6380  01B5' 00AF'              	movwf	___flmul@a+1
  6381  01B6' 0021               	movlb	1	; select bank1
  6382  01B7' 0800'              	movf	efgtoa@u^(0+128),w
  6383  01B8' 0020               	movlb	0	; select bank0
  6384  01B9' 00AE'              	movwf	___flmul@a
  6385  01BA' 3180' 2000' 3180'  	fcall	___flmul
  6386  01BD' 0020               	movlb	0	; select bank0
  6387  01BE' 082D'              	movf	?___flmul+3,w
  6388  01BF' 00CB'              	movwf	___flge@ff2+3
  6389  01C0' 082C'              	movf	?___flmul+2,w
  6390  01C1' 00CA'              	movwf	___flge@ff2+2
  6391  01C2' 082B'              	movf	?___flmul+1,w
  6392  01C3' 00C9'              	movwf	___flge@ff2+1
  6393  01C4' 082A'              	movf	?___flmul,w
  6394  01C5' 00C8'              	movwf	___flge@ff2
  6395  01C6' 3180' 2000' 3180'  	fcall	___flge
  6396  01C9' 1803               	btfsc	3,0
  6397  01CA' 2800'              	goto	u5651
  6398  01CB' 2800'              	goto	u5650
  6399  01CC'                    u5651:
  6400  01CC' 2800'              	goto	l3959
  6401  01CD'                    u5650:
  6402  01CD' 2800'              	goto	l3969
  6403  01CE'                    l3965:
  6404                           
  6405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6406  01CE' 3041               	movlw	65
  6407  01CF' 0020               	movlb	0	; select bank0
  6408  01D0' 0093'              	movwf	___fldiv@a+3
  6409  01D1' 3020               	movlw	32
  6410  01D2' 0092'              	movwf	___fldiv@a+2
  6411  01D3' 3000               	movlw	0
  6412  01D4' 0091'              	movwf	___fldiv@a+1
  6413  01D5' 3000               	movlw	0
  6414  01D6' 0090'              	movwf	___fldiv@a
  6415  01D7' 0021               	movlb	1	; select bank1
  6416  01D8' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6417  01D9' 0020               	movlb	0	; select bank0
  6418  01DA' 0097'              	movwf	___fldiv@b+3
  6419  01DB' 0021               	movlb	1	; select bank1
  6420  01DC' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6421  01DD' 0020               	movlb	0	; select bank0
  6422  01DE' 0096'              	movwf	___fldiv@b+2
  6423  01DF' 0021               	movlb	1	; select bank1
  6424  01E0' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6425  01E1' 0020               	movlb	0	; select bank0
  6426  01E2' 0095'              	movwf	___fldiv@b+1
  6427  01E3' 0021               	movlb	1	; select bank1
  6428  01E4' 0800'              	movf	efgtoa@u^(0+128),w
  6429  01E5' 0020               	movlb	0	; select bank0
  6430  01E6' 0094'              	movwf	___fldiv@b
  6431  01E7' 3180' 2000' 3180'  	fcall	___fldiv
  6432  01EA' 0020               	movlb	0	; select bank0
  6433  01EB' 0813'              	movf	?___fldiv+3,w
  6434  01EC' 0021               	movlb	1	; select bank1
  6435  01ED' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  6436  01EE' 0020               	movlb	0	; select bank0
  6437  01EF' 0812'              	movf	?___fldiv+2,w
  6438  01F0' 0021               	movlb	1	; select bank1
  6439  01F1' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  6440  01F2' 0020               	movlb	0	; select bank0
  6441  01F3' 0811'              	movf	?___fldiv+1,w
  6442  01F4' 0021               	movlb	1	; select bank1
  6443  01F5' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  6444  01F6' 0020               	movlb	0	; select bank0
  6445  01F7' 0810'              	movf	?___fldiv,w
  6446  01F8' 0021               	movlb	1	; select bank1
  6447  01F9' 0080'              	movwf	efgtoa@u^(0+128)
  6448  01FA'                    l3967:
  6449                           
  6450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6451  01FA' 30FF               	movlw	255
  6452  01FB' 0780'              	addwf	efgtoa@e^(0+128),f
  6453  01FC' 30FF               	movlw	255
  6454  01FD' 3D80'              	addwfc	(efgtoa@e+1)^(0+128),f
  6455  01FE'                    l3969:
  6456                           
  6457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6458  01FE' 0021               	movlb	1	; select bank1
  6459  01FF' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  6460  0200' 0020               	movlb	0	; select bank0
  6461  0201' 00C7'              	movwf	___flge@ff1+3
  6462  0202' 0021               	movlb	1	; select bank1
  6463  0203' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  6464  0204' 0020               	movlb	0	; select bank0
  6465  0205' 00C6'              	movwf	___flge@ff1+2
  6466  0206' 0021               	movlb	1	; select bank1
  6467  0207' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  6468  0208' 0020               	movlb	0	; select bank0
  6469  0209' 00C5'              	movwf	___flge@ff1+1
  6470  020A' 0021               	movlb	1	; select bank1
  6471  020B' 0800'              	movf	efgtoa@g^(0+128),w
  6472  020C' 0020               	movlb	0	; select bank0
  6473  020D' 00C4'              	movwf	___flge@ff1
  6474  020E' 0021               	movlb	1	; select bank1
  6475  020F' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6476  0210' 0020               	movlb	0	; select bank0
  6477  0211' 00CB'              	movwf	___flge@ff2+3
  6478  0212' 0021               	movlb	1	; select bank1
  6479  0213' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6480  0214' 0020               	movlb	0	; select bank0
  6481  0215' 00CA'              	movwf	___flge@ff2+2
  6482  0216' 0021               	movlb	1	; select bank1
  6483  0217' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6484  0218' 0020               	movlb	0	; select bank0
  6485  0219' 00C9'              	movwf	___flge@ff2+1
  6486  021A' 0021               	movlb	1	; select bank1
  6487  021B' 0800'              	movf	efgtoa@u^(0+128),w
  6488  021C' 0020               	movlb	0	; select bank0
  6489  021D' 00C8'              	movwf	___flge@ff2
  6490  021E' 3180' 2000' 3180'  	fcall	___flge
  6491  0221' 1C03               	btfss	3,0
  6492  0222' 2800'              	goto	u5661
  6493  0223' 2800'              	goto	u5660
  6494  0224'                    u5661:
  6495  0224' 2800'              	goto	l3965
  6496  0225'                    u5660:
  6497  0225'                    l3971:
  6498                           
  6499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6500  0225' 0021               	movlb	1	; select bank1
  6501  0226' 0800'              	movf	efgtoa@c^(0+128),w
  6502  0227' 0080'              	movwf	??_efgtoa^(0+128)
  6503  0228' 0181'              	clrf	(??_efgtoa^(0+128)+1)
  6504  0229' 0800'              	movf	??_efgtoa^(0+128),w
  6505  022A' 0086'              	movwf	tolower@c
  6506  022B' 0800'              	movf	(??_efgtoa+1)^(0+128),w
  6507  022C' 0087'              	movwf	tolower@c+1
  6508  022D' 3180' 2000' 3180'  	fcall	_tolower
  6509  0230' 0806'              	movf	?_tolower,w
  6510  0231' 0021               	movlb	1	; select bank1
  6511  0232' 0080'              	movwf	(??_efgtoa+2)^(0+128)
  6512  0233' 0800'              	movf	(??_efgtoa+2)^(0+128),w
  6513  0234' 0080'              	movwf	efgtoa@mode^(0+128)
  6514  0235'                    l3973:
  6515                           
  6516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6517  0235' 0800'              	movf	efgtoa@mode^(0+128),w
  6518  0236' 0080'              	movwf	??_efgtoa^(0+128)
  6519  0237' 0800'              	movf	??_efgtoa^(0+128),w
  6520  0238' 0080'              	movwf	efgtoa@nmode^(0+128)
  6521  0239'                    l3975:
  6522                           
  6523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6524  0239' 3067               	movlw	103
  6525  023A' 0600'              	xorwf	efgtoa@mode^(0+128),w
  6526  023B' 1D03               	btfss	3,2
  6527  023C' 2800'              	goto	u5671
  6528  023D' 2800'              	goto	u5670
  6529  023E'                    u5671:
  6530  023E' 2800'              	goto	l982
  6531  023F'                    u5670:
  6532  023F'                    l3977:
  6533                           
  6534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6535  023F' 0022               	movlb	2	; select bank2
  6536  0240' 0800'              	movf	_prec^(0+256),w
  6537  0241' 0400'              	iorwf	(_prec+1)^(0+256),w
  6538  0242' 1D03               	btfss	3,2
  6539  0243' 2800'              	goto	u5681
  6540  0244' 2800'              	goto	u5680
  6541  0245'                    u5681:
  6542  0245' 2800'              	goto	l983
  6543  0246'                    u5680:
  6544  0246'                    l3979:
  6545                           
  6546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6547  0246' 3001               	movlw	1
  6548  0247' 0080'              	movwf	_prec^(0+256)
  6549  0248' 3000               	movlw	0
  6550  0249' 0081'              	movwf	(_prec^(0+256)+1)
  6551  024A'                    l983:	
  6552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 395:   }
  6553                           
  6554                           
  6555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6556  024A' 0800'              	movf	(_prec+1)^(0+256),w
  6557  024B' 3A80               	xorlw	128
  6558  024C' 0021               	movlb	1	; select bank1
  6559  024D' 0080'              	movwf	??_efgtoa^(0+128)
  6560  024E' 3080               	movlw	128
  6561  024F' 0200'              	subwf	??_efgtoa^(0+128),w
  6562  0250' 1D03               	skipz
  6563  0251' 2800'              	goto	u5695
  6564  0252' 3001               	movlw	1
  6565  0253' 0022               	movlb	2	; select bank2
  6566  0254' 0200'              	subwf	_prec^(0+256),w
  6567  0255'                    u5695:
  6568  0255' 1803               	skipnc
  6569  0256' 2800'              	goto	u5691
  6570  0257' 2800'              	goto	u5690
  6571  0258'                    u5691:
  6572  0258' 2800'              	goto	l3983
  6573  0259'                    u5690:
  6574  0259'                    l3981:
  6575  0259' 3006               	movlw	6
  6576  025A' 0021               	movlb	1	; select bank1
  6577  025B' 0080'              	movwf	efgtoa@p^(0+128)
  6578  025C' 3000               	movlw	0
  6579  025D' 0081'              	movwf	(efgtoa@p^(0+128)+1)
  6580  025E' 2800'              	goto	l3989
  6581  025F'                    l3983:
  6582  025F' 0022               	movlb	2	; select bank2
  6583  0260' 0800'              	movf	(_prec+1)^(0+256),w
  6584  0261' 0021               	movlb	1	; select bank1
  6585  0262' 0080'              	movwf	(efgtoa@p+1)^(0+128)
  6586  0263' 0022               	movlb	2	; select bank2
  6587  0264' 0800'              	movf	_prec^(0+256),w
  6588  0265' 0021               	movlb	1	; select bank1
  6589  0266' 0080'              	movwf	efgtoa@p^(0+128)
  6590  0267' 2800'              	goto	l3989
  6591  0268'                    l982:
  6592                           
  6593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6594  0268' 0022               	movlb	2	; select bank2
  6595  0269' 1B80'              	btfsc	(_prec+1)^(0+256),7
  6596  026A' 2800'              	goto	u5701
  6597  026B' 2800'              	goto	u5700
  6598  026C'                    u5701:
  6599  026C' 2800'              	goto	l3981
  6600  026D'                    u5700:
  6601  026D' 2800'              	goto	l3983
  6602  026E'                    l3989:
  6603                           
  6604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6605  026E' 3067               	movlw	103
  6606  026F' 0600'              	xorwf	efgtoa@mode^(0+128),w
  6607  0270' 1D03               	btfss	3,2
  6608  0271' 2800'              	goto	u5711
  6609  0272' 2800'              	goto	u5710
  6610  0273'                    u5711:
  6611  0273' 2800'              	goto	l993
  6612  0274'                    u5710:
  6613  0274'                    l3991:
  6614                           
  6615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6616  0274' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  6617  0275' 3A80               	xorlw	128
  6618  0276' 0080'              	movwf	??_efgtoa^(0+128)
  6619  0277' 307F               	movlw	127
  6620  0278' 0200'              	subwf	??_efgtoa^(0+128),w
  6621  0279' 1D03               	skipz
  6622  027A' 2800'              	goto	u5725
  6623  027B' 30FC               	movlw	252
  6624  027C' 0200'              	subwf	efgtoa@e^(0+128),w
  6625  027D'                    u5725:
  6626  027D' 1C03               	skipc
  6627  027E' 2800'              	goto	u5721
  6628  027F' 2800'              	goto	u5720
  6629  0280'                    u5721:
  6630  0280' 2800'              	goto	l3997
  6631  0281'                    u5720:
  6632  0281'                    l3993:
  6633  0281' 0021               	movlb	1	; select bank1
  6634  0282' 0800'              	movf	efgtoa@p^(0+128),w
  6635  0283' 3EFF               	addlw	255
  6636  0284' 0080'              	movwf	??_efgtoa^(0+128)
  6637  0285' 30FF               	movlw	255
  6638  0286' 3D00'              	addwfc	(efgtoa@p+1)^(0+128),w
  6639  0287' 0080'              	movwf	(??_efgtoa+1)^(0+128)
  6640  0288' 0800'              	movf	(??_efgtoa+1)^(0+128),w
  6641  0289' 3A80               	xorlw	128
  6642  028A' 0080'              	movwf	(??_efgtoa+2)^(0+128)
  6643  028B' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  6644  028C' 3A80               	xorlw	128
  6645  028D' 0200'              	subwf	(??_efgtoa+2)^(0+128),w
  6646  028E' 1D03               	skipz
  6647  028F' 2800'              	goto	u5735
  6648  0290' 0800'              	movf	efgtoa@e^(0+128),w
  6649  0291' 0200'              	subwf	??_efgtoa^(0+128),w
  6650  0292'                    u5735:
  6651  0292' 1C03               	skipc
  6652  0293' 2800'              	goto	u5731
  6653  0294' 2800'              	goto	u5730
  6654  0295'                    u5731:
  6655  0295' 2800'              	goto	l3997
  6656  0296'                    u5730:
  6657  0296'                    l3995:
  6658                           
  6659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6660  0296' 3066               	movlw	102
  6661  0297' 0021               	movlb	1	; select bank1
  6662  0298' 0080'              	movwf	??_efgtoa^(0+128)
  6663  0299' 0800'              	movf	??_efgtoa^(0+128),w
  6664  029A' 0080'              	movwf	efgtoa@nmode^(0+128)
  6665                           
  6666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6667  029B' 2800'              	goto	l993
  6668  029C'                    l3997:
  6669                           
  6670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6671  029C' 3065               	movlw	101
  6672  029D' 0021               	movlb	1	; select bank1
  6673  029E' 0080'              	movwf	??_efgtoa^(0+128)
  6674  029F' 0800'              	movf	??_efgtoa^(0+128),w
  6675  02A0' 0080'              	movwf	efgtoa@nmode^(0+128)
  6676  02A1'                    l993:	
  6677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 408:     }
  6678                           
  6679                           
  6680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6681  02A1' 0800'              	movf	(efgtoa@p+1)^(0+128),w
  6682  02A2' 0080'              	movwf	(efgtoa@m+1)^(0+128)
  6683  02A3' 0800'              	movf	efgtoa@p^(0+128),w
  6684  02A4' 0080'              	movwf	efgtoa@m^(0+128)
  6685  02A5'                    l3999:
  6686                           
  6687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6688  02A5' 3067               	movlw	103
  6689  02A6' 0600'              	xorwf	efgtoa@mode^(0+128),w
  6690  02A7' 1D03               	btfss	3,2
  6691  02A8' 2800'              	goto	u5741
  6692  02A9' 2800'              	goto	u5740
  6693  02AA'                    u5741:
  6694  02AA' 2800'              	goto	l4005
  6695  02AB'                    u5740:
  6696  02AB'                    l4001:
  6697  02AB' 3066               	movlw	102
  6698  02AC' 0600'              	xorwf	efgtoa@nmode^(0+128),w
  6699  02AD' 1D03               	btfss	3,2
  6700  02AE' 2800'              	goto	u5751
  6701  02AF' 2800'              	goto	u5750
  6702  02B0'                    u5751:
  6703  02B0' 2800'              	goto	l4007
  6704  02B1'                    u5750:
  6705  02B1'                    l4003:
  6706  02B1' 1F80'              	btfss	(efgtoa@e+1)^(0+128),7
  6707  02B2' 2800'              	goto	u5761
  6708  02B3' 2800'              	goto	u5760
  6709  02B4'                    u5761:
  6710  02B4' 2800'              	goto	l4007
  6711  02B5'                    u5760:
  6712  02B5'                    l4005:
  6713                           
  6714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6715  02B5' 3001               	movlw	1
  6716  02B6' 0780'              	addwf	efgtoa@m^(0+128),f
  6717  02B7' 3000               	movlw	0
  6718  02B8' 3D80'              	addwfc	(efgtoa@m+1)^(0+128),f
  6719  02B9'                    l4007:
  6720                           
  6721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6722  02B9' 3066               	movlw	102
  6723  02BA' 0600'              	xorwf	efgtoa@nmode^(0+128),w
  6724  02BB' 1D03               	btfss	3,2
  6725  02BC' 2800'              	goto	u5771
  6726  02BD' 2800'              	goto	u5770
  6727  02BE'                    u5771:
  6728  02BE' 2800'              	goto	l4019
  6729  02BF'                    u5770:
  6730  02BF'                    l4009:
  6731                           
  6732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6733  02BF' 1F80'              	btfss	(efgtoa@e+1)^(0+128),7
  6734  02C0' 2800'              	goto	u5781
  6735  02C1' 2800'              	goto	u5780
  6736  02C2'                    u5781:
  6737  02C2' 2800'              	goto	l4015
  6738  02C3'                    u5780:
  6739  02C3'                    l4011:
  6740                           
  6741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  6742  02C3' 303F               	movlw	63
  6743  02C4' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  6744  02C5' 3080               	movlw	128
  6745  02C6' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  6746  02C7' 3000               	movlw	0
  6747  02C8' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  6748  02C9' 3000               	movlw	0
  6749  02CA' 0080'              	movwf	efgtoa@u^(0+128)
  6750  02CB'                    l4013:
  6751                           
  6752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  6753  02CB' 0180'              	clrf	efgtoa@e^(0+128)
  6754  02CC' 0180'              	clrf	(efgtoa@e+1)^(0+128)
  6755  02CD'                    l4015:
  6756                           
  6757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  6758  02CD' 3067               	movlw	103
  6759  02CE' 0600'              	xorwf	efgtoa@mode^(0+128),w
  6760  02CF' 1903               	btfsc	3,2
  6761  02D0' 2800'              	goto	u5791
  6762  02D1' 2800'              	goto	u5790
  6763  02D2'                    u5791:
  6764  02D2' 2800'              	goto	l4019
  6765  02D3'                    u5790:
  6766  02D3'                    l4017:
  6767                           
  6768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  6769  02D3' 0800'              	movf	efgtoa@e^(0+128),w
  6770  02D4' 0780'              	addwf	efgtoa@m^(0+128),f
  6771  02D5' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  6772  02D6' 3D80'              	addwfc	(efgtoa@m+1)^(0+128),f
  6773  02D7'                    l4019:
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  6776  02D7' 0180'              	clrf	efgtoa@i^(0+128)
  6777  02D8' 0180'              	clrf	(efgtoa@i+1)^(0+128)
  6778  02D9'                    l4021:
  6779                           
  6780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  6781  02D9' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  6782  02DA' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  6783  02DB' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  6784  02DC' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  6785  02DD' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  6786  02DE' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  6787  02DF' 0800'              	movf	efgtoa@g^(0+128),w
  6788  02E0' 0080'              	movwf	efgtoa@h^(0+128)
  6789  02E1'                    l4023:
  6790                           
  6791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  6792  02E1' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6793  02E2' 0080'              	movwf	(efgtoa@ou+3)^(0+128)
  6794  02E3' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6795  02E4' 0080'              	movwf	(efgtoa@ou+2)^(0+128)
  6796  02E5' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6797  02E6' 0080'              	movwf	(efgtoa@ou+1)^(0+128)
  6798  02E7' 0800'              	movf	efgtoa@u^(0+128),w
  6799  02E8' 0080'              	movwf	efgtoa@ou^(0+128)
  6800                           
  6801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6802  02E9' 2800'              	goto	l4029
  6803  02EA'                    l4025:
  6804                           
  6805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  6806  02EA' 0021               	movlb	1	; select bank1
  6807  02EB' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6808  02EC' 0020               	movlb	0	; select bank0
  6809  02ED' 0093'              	movwf	___fldiv@a+3
  6810  02EE' 0021               	movlb	1	; select bank1
  6811  02EF' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6812  02F0' 0020               	movlb	0	; select bank0
  6813  02F1' 0092'              	movwf	___fldiv@a+2
  6814  02F2' 0021               	movlb	1	; select bank1
  6815  02F3' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6816  02F4' 0020               	movlb	0	; select bank0
  6817  02F5' 0091'              	movwf	___fldiv@a+1
  6818  02F6' 0021               	movlb	1	; select bank1
  6819  02F7' 0800'              	movf	efgtoa@u^(0+128),w
  6820  02F8' 0020               	movlb	0	; select bank0
  6821  02F9' 0090'              	movwf	___fldiv@a
  6822  02FA' 0021               	movlb	1	; select bank1
  6823  02FB' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  6824  02FC' 0020               	movlb	0	; select bank0
  6825  02FD' 0097'              	movwf	___fldiv@b+3
  6826  02FE' 0021               	movlb	1	; select bank1
  6827  02FF' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  6828  0300' 0020               	movlb	0	; select bank0
  6829  0301' 0096'              	movwf	___fldiv@b+2
  6830  0302' 0021               	movlb	1	; select bank1
  6831  0303' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  6832  0304' 0020               	movlb	0	; select bank0
  6833  0305' 0095'              	movwf	___fldiv@b+1
  6834  0306' 0021               	movlb	1	; select bank1
  6835  0307' 0800'              	movf	efgtoa@h^(0+128),w
  6836  0308' 0020               	movlb	0	; select bank0
  6837  0309' 0094'              	movwf	___fldiv@b
  6838  030A' 3180' 2000' 3180'  	fcall	___fldiv
  6839  030D' 0020               	movlb	0	; select bank0
  6840  030E' 0813'              	movf	?___fldiv+3,w
  6841  030F' 00AD'              	movwf	floorf@x+3
  6842  0310' 0812'              	movf	?___fldiv+2,w
  6843  0311' 00AC'              	movwf	floorf@x+2
  6844  0312' 0811'              	movf	?___fldiv+1,w
  6845  0313' 00AB'              	movwf	floorf@x+1
  6846  0314' 0810'              	movf	?___fldiv,w
  6847  0315' 00AA'              	movwf	floorf@x
  6848  0316' 3180' 2000' 3180'  	fcall	_floorf
  6849  0319' 0020               	movlb	0	; select bank0
  6850  031A' 082D'              	movf	?_floorf+3,w
  6851  031B' 0021               	movlb	1	; select bank1
  6852  031C' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  6853  031D' 0020               	movlb	0	; select bank0
  6854  031E' 082C'              	movf	?_floorf+2,w
  6855  031F' 0021               	movlb	1	; select bank1
  6856  0320' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  6857  0321' 0020               	movlb	0	; select bank0
  6858  0322' 082B'              	movf	?_floorf+1,w
  6859  0323' 0021               	movlb	1	; select bank1
  6860  0324' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  6861  0325' 0020               	movlb	0	; select bank0
  6862  0326' 082A'              	movf	?_floorf,w
  6863  0327' 0021               	movlb	1	; select bank1
  6864  0328' 0080'              	movwf	efgtoa@l^(0+128)
  6865                           
  6866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  6867  0329' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  6868  032A' 0020               	movlb	0	; select bank0
  6869  032B' 00AD'              	movwf	___fltol@f1+3
  6870  032C' 0021               	movlb	1	; select bank1
  6871  032D' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  6872  032E' 0020               	movlb	0	; select bank0
  6873  032F' 00AC'              	movwf	___fltol@f1+2
  6874  0330' 0021               	movlb	1	; select bank1
  6875  0331' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  6876  0332' 0020               	movlb	0	; select bank0
  6877  0333' 00AB'              	movwf	___fltol@f1+1
  6878  0334' 0021               	movlb	1	; select bank1
  6879  0335' 0800'              	movf	efgtoa@l^(0+128),w
  6880  0336' 0020               	movlb	0	; select bank0
  6881  0337' 00AA'              	movwf	___fltol@f1
  6882  0338' 3180' 2000' 3180'  	fcall	___fltol
  6883  033B' 0020               	movlb	0	; select bank0
  6884  033C' 082B'              	movf	?___fltol+1,w
  6885  033D' 0021               	movlb	1	; select bank1
  6886  033E' 0080'              	movwf	(efgtoa@d+1)^(0+128)
  6887  033F' 0020               	movlb	0	; select bank0
  6888  0340' 082A'              	movf	?___fltol,w
  6889  0341' 0021               	movlb	1	; select bank1
  6890  0342' 0080'              	movwf	efgtoa@d^(0+128)
  6891                           
  6892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  6893  0343' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  6894  0344' 0020               	movlb	0	; select bank0
  6895  0345' 00B1'              	movwf	___flmul@a+3
  6896  0346' 0021               	movlb	1	; select bank1
  6897  0347' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  6898  0348' 0020               	movlb	0	; select bank0
  6899  0349' 00B0'              	movwf	___flmul@a+2
  6900  034A' 0021               	movlb	1	; select bank1
  6901  034B' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  6902  034C' 0020               	movlb	0	; select bank0
  6903  034D' 00AF'              	movwf	___flmul@a+1
  6904  034E' 0021               	movlb	1	; select bank1
  6905  034F' 0800'              	movf	efgtoa@l^(0+128),w
  6906  0350' 0020               	movlb	0	; select bank0
  6907  0351' 00AE'              	movwf	___flmul@a
  6908  0352' 0021               	movlb	1	; select bank1
  6909  0353' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6910  0354' 0020               	movlb	0	; select bank0
  6911  0355' 00AD'              	movwf	___flmul@b+3
  6912  0356' 0021               	movlb	1	; select bank1
  6913  0357' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6914  0358' 0020               	movlb	0	; select bank0
  6915  0359' 00AC'              	movwf	___flmul@b+2
  6916  035A' 0021               	movlb	1	; select bank1
  6917  035B' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6918  035C' 0020               	movlb	0	; select bank0
  6919  035D' 00AB'              	movwf	___flmul@b+1
  6920  035E' 0021               	movlb	1	; select bank1
  6921  035F' 0800'              	movf	efgtoa@u^(0+128),w
  6922  0360' 0020               	movlb	0	; select bank0
  6923  0361' 00AA'              	movwf	___flmul@b
  6924  0362' 3180' 2000' 3180'  	fcall	___flmul
  6925  0365' 0020               	movlb	0	; select bank0
  6926  0366' 082D'              	movf	?___flmul+3,w
  6927  0367' 008B'              	movwf	___flsub@a+3
  6928  0368' 082C'              	movf	?___flmul+2,w
  6929  0369' 008A'              	movwf	___flsub@a+2
  6930  036A' 082B'              	movf	?___flmul+1,w
  6931  036B' 0089'              	movwf	___flsub@a+1
  6932  036C' 082A'              	movf	?___flmul,w
  6933  036D' 0088'              	movwf	___flsub@a
  6934  036E' 0021               	movlb	1	; select bank1
  6935  036F' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  6936  0370' 0020               	movlb	0	; select bank0
  6937  0371' 008F'              	movwf	___flsub@b+3
  6938  0372' 0021               	movlb	1	; select bank1
  6939  0373' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  6940  0374' 0020               	movlb	0	; select bank0
  6941  0375' 008E'              	movwf	___flsub@b+2
  6942  0376' 0021               	movlb	1	; select bank1
  6943  0377' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  6944  0378' 0020               	movlb	0	; select bank0
  6945  0379' 008D'              	movwf	___flsub@b+1
  6946  037A' 0021               	movlb	1	; select bank1
  6947  037B' 0800'              	movf	efgtoa@h^(0+128),w
  6948  037C' 0020               	movlb	0	; select bank0
  6949  037D' 008C'              	movwf	___flsub@b
  6950  037E' 3180' 2000' 3180'  	fcall	___flsub
  6951  0381' 0020               	movlb	0	; select bank0
  6952  0382' 080B'              	movf	?___flsub+3,w
  6953  0383' 0021               	movlb	1	; select bank1
  6954  0384' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  6955  0385' 0020               	movlb	0	; select bank0
  6956  0386' 080A'              	movf	?___flsub+2,w
  6957  0387' 0021               	movlb	1	; select bank1
  6958  0388' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  6959  0389' 0020               	movlb	0	; select bank0
  6960  038A' 0809'              	movf	?___flsub+1,w
  6961  038B' 0021               	movlb	1	; select bank1
  6962  038C' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  6963  038D' 0020               	movlb	0	; select bank0
  6964  038E' 0808'              	movf	?___flsub,w
  6965  038F' 0021               	movlb	1	; select bank1
  6966  0390' 0080'              	movwf	efgtoa@h^(0+128)
  6967                           
  6968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  6969  0391' 3041               	movlw	65
  6970  0392' 0020               	movlb	0	; select bank0
  6971  0393' 0093'              	movwf	___fldiv@a+3
  6972  0394' 3020               	movlw	32
  6973  0395' 0092'              	movwf	___fldiv@a+2
  6974  0396' 3000               	movlw	0
  6975  0397' 0091'              	movwf	___fldiv@a+1
  6976  0398' 3000               	movlw	0
  6977  0399' 0090'              	movwf	___fldiv@a
  6978  039A' 0021               	movlb	1	; select bank1
  6979  039B' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  6980  039C' 0020               	movlb	0	; select bank0
  6981  039D' 0097'              	movwf	___fldiv@b+3
  6982  039E' 0021               	movlb	1	; select bank1
  6983  039F' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  6984  03A0' 0020               	movlb	0	; select bank0
  6985  03A1' 0096'              	movwf	___fldiv@b+2
  6986  03A2' 0021               	movlb	1	; select bank1
  6987  03A3' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  6988  03A4' 0020               	movlb	0	; select bank0
  6989  03A5' 0095'              	movwf	___fldiv@b+1
  6990  03A6' 0021               	movlb	1	; select bank1
  6991  03A7' 0800'              	movf	efgtoa@u^(0+128),w
  6992  03A8' 0020               	movlb	0	; select bank0
  6993  03A9' 0094'              	movwf	___fldiv@b
  6994  03AA' 3180' 2000' 3180'  	fcall	___fldiv
  6995  03AD' 0020               	movlb	0	; select bank0
  6996  03AE' 0813'              	movf	?___fldiv+3,w
  6997  03AF' 0021               	movlb	1	; select bank1
  6998  03B0' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  6999  03B1' 0020               	movlb	0	; select bank0
  7000  03B2' 0812'              	movf	?___fldiv+2,w
  7001  03B3' 0021               	movlb	1	; select bank1
  7002  03B4' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  7003  03B5' 0020               	movlb	0	; select bank0
  7004  03B6' 0811'              	movf	?___fldiv+1,w
  7005  03B7' 0021               	movlb	1	; select bank1
  7006  03B8' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  7007  03B9' 0020               	movlb	0	; select bank0
  7008  03BA' 0810'              	movf	?___fldiv,w
  7009  03BB' 0021               	movlb	1	; select bank1
  7010  03BC' 0080'              	movwf	efgtoa@u^(0+128)
  7011  03BD'                    l4027:
  7012                           
  7013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  7014  03BD' 3001               	movlw	1
  7015  03BE' 0780'              	addwf	efgtoa@i^(0+128),f
  7016  03BF' 3000               	movlw	0
  7017  03C0' 3D80'              	addwfc	(efgtoa@i+1)^(0+128),f
  7018  03C1'                    l4029:
  7019                           
  7020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7021  03C1' 0800'              	movf	(efgtoa@i+1)^(0+128),w
  7022  03C2' 3A80               	xorlw	128
  7023  03C3' 0080'              	movwf	??_efgtoa^(0+128)
  7024  03C4' 0800'              	movf	(efgtoa@m+1)^(0+128),w
  7025  03C5' 3A80               	xorlw	128
  7026  03C6' 0200'              	subwf	??_efgtoa^(0+128),w
  7027  03C7' 1D03               	skipz
  7028  03C8' 2800'              	goto	u5805
  7029  03C9' 0800'              	movf	efgtoa@m^(0+128),w
  7030  03CA' 0200'              	subwf	efgtoa@i^(0+128),w
  7031  03CB'                    u5805:
  7032  03CB' 1C03               	skipc
  7033  03CC' 2800'              	goto	u5801
  7034  03CD' 2800'              	goto	u5800
  7035  03CE'                    u5801:
  7036  03CE' 2800'              	goto	l4025
  7037  03CF'                    u5800:
  7038  03CF'                    l4031:
  7039                           
  7040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  7041  03CF' 3040               	movlw	64
  7042  03D0' 0020               	movlb	0	; select bank0
  7043  03D1' 00AD'              	movwf	___flmul@b+3
  7044  03D2' 30A0               	movlw	160
  7045  03D3' 00AC'              	movwf	___flmul@b+2
  7046  03D4' 3000               	movlw	0
  7047  03D5' 00AB'              	movwf	___flmul@b+1
  7048  03D6' 3000               	movlw	0
  7049  03D7' 00AA'              	movwf	___flmul@b
  7050  03D8' 0021               	movlb	1	; select bank1
  7051  03D9' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  7052  03DA' 0020               	movlb	0	; select bank0
  7053  03DB' 00B1'              	movwf	___flmul@a+3
  7054  03DC' 0021               	movlb	1	; select bank1
  7055  03DD' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  7056  03DE' 0020               	movlb	0	; select bank0
  7057  03DF' 00B0'              	movwf	___flmul@a+2
  7058  03E0' 0021               	movlb	1	; select bank1
  7059  03E1' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  7060  03E2' 0020               	movlb	0	; select bank0
  7061  03E3' 00AF'              	movwf	___flmul@a+1
  7062  03E4' 0021               	movlb	1	; select bank1
  7063  03E5' 0800'              	movf	efgtoa@u^(0+128),w
  7064  03E6' 0020               	movlb	0	; select bank0
  7065  03E7' 00AE'              	movwf	___flmul@a
  7066  03E8' 3180' 2000' 3180'  	fcall	___flmul
  7067  03EB' 0020               	movlb	0	; select bank0
  7068  03EC' 082D'              	movf	?___flmul+3,w
  7069  03ED' 0021               	movlb	1	; select bank1
  7070  03EE' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  7071  03EF' 0020               	movlb	0	; select bank0
  7072  03F0' 082C'              	movf	?___flmul+2,w
  7073  03F1' 0021               	movlb	1	; select bank1
  7074  03F2' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  7075  03F3' 0020               	movlb	0	; select bank0
  7076  03F4' 082B'              	movf	?___flmul+1,w
  7077  03F5' 0021               	movlb	1	; select bank1
  7078  03F6' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  7079  03F7' 0020               	movlb	0	; select bank0
  7080  03F8' 082A'              	movf	?___flmul,w
  7081  03F9' 0021               	movlb	1	; select bank1
  7082  03FA' 0080'              	movwf	efgtoa@l^(0+128)
  7083                           
  7084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  7085  03FB' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  7086  03FC' 0020               	movlb	0	; select bank0
  7087  03FD' 00C7'              	movwf	___flge@ff1+3
  7088  03FE' 0021               	movlb	1	; select bank1
  7089  03FF' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  7090  0400' 0020               	movlb	0	; select bank0
  7091  0401' 00C6'              	movwf	___flge@ff1+2
  7092  0402' 0021               	movlb	1	; select bank1
  7093  0403' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  7094  0404' 0020               	movlb	0	; select bank0
  7095  0405' 00C5'              	movwf	___flge@ff1+1
  7096  0406' 0021               	movlb	1	; select bank1
  7097  0407' 0800'              	movf	efgtoa@h^(0+128),w
  7098  0408' 0020               	movlb	0	; select bank0
  7099  0409' 00C4'              	movwf	___flge@ff1
  7100  040A' 0021               	movlb	1	; select bank1
  7101  040B' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  7102  040C' 0020               	movlb	0	; select bank0
  7103  040D' 00CB'              	movwf	___flge@ff2+3
  7104  040E' 0021               	movlb	1	; select bank1
  7105  040F' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  7106  0410' 0020               	movlb	0	; select bank0
  7107  0411' 00CA'              	movwf	___flge@ff2+2
  7108  0412' 0021               	movlb	1	; select bank1
  7109  0413' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  7110  0414' 0020               	movlb	0	; select bank0
  7111  0415' 00C9'              	movwf	___flge@ff2+1
  7112  0416' 0021               	movlb	1	; select bank1
  7113  0417' 0800'              	movf	efgtoa@l^(0+128),w
  7114  0418' 0020               	movlb	0	; select bank0
  7115  0419' 00C8'              	movwf	___flge@ff2
  7116  041A' 3180' 2000' 3180'  	fcall	___flge
  7117  041D' 1803               	btfsc	3,0
  7118  041E' 2800'              	goto	u5811
  7119  041F' 2800'              	goto	u5810
  7120  0420'                    u5811:
  7121  0420' 2800'              	goto	l4035
  7122  0421'                    u5810:
  7123  0421'                    l4033:
  7124                           
  7125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  7126  0421' 3000               	movlw	0
  7127  0422' 0021               	movlb	1	; select bank1
  7128  0423' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  7129  0424' 3000               	movlw	0
  7130  0425' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  7131  0426' 3000               	movlw	0
  7132  0427' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  7133  0428' 3000               	movlw	0
  7134  0429' 0080'              	movwf	efgtoa@l^(0+128)
  7135                           
  7136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  7137  042A' 2800'              	goto	l4041
  7138  042B'                    l4035:
  7139                           
  7140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  7141  042B' 0021               	movlb	1	; select bank1
  7142  042C' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  7143  042D' 0083'              	movwf	___fleq@ff1+3
  7144  042E' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  7145  042F' 0082'              	movwf	___fleq@ff1+2
  7146  0430' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  7147  0431' 0081'              	movwf	___fleq@ff1+1
  7148  0432' 0800'              	movf	efgtoa@h^(0+128),w
  7149  0433' 0080'              	movwf	___fleq@ff1
  7150  0434' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  7151  0435' 0087'              	movwf	___fleq@ff2+3
  7152  0436' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  7153  0437' 0086'              	movwf	___fleq@ff2+2
  7154  0438' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  7155  0439' 0085'              	movwf	___fleq@ff2+1
  7156  043A' 0800'              	movf	efgtoa@l^(0+128),w
  7157  043B' 0084'              	movwf	___fleq@ff2
  7158  043C' 3180' 2000' 3180'  	fcall	___fleq
  7159  043F' 1C03               	btfss	3,0
  7160  0440' 2800'              	goto	u5821
  7161  0441' 2800'              	goto	u5820
  7162  0442'                    u5821:
  7163  0442' 2800'              	goto	l4041
  7164  0443'                    u5820:
  7165  0443'                    l4037:
  7166  0443' 0021               	movlb	1	; select bank1
  7167  0444' 1800'              	btfsc	efgtoa@d^(0+128),0
  7168  0445' 2800'              	goto	u5831
  7169  0446' 2800'              	goto	u5830
  7170  0447'                    u5831:
  7171  0447' 2800'              	goto	l4041
  7172  0448'                    u5830:
  7173  0448'                    l4039:
  7174                           
  7175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  7176  0448' 3000               	movlw	0
  7177  0449' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  7178  044A' 3000               	movlw	0
  7179  044B' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  7180  044C' 3000               	movlw	0
  7181  044D' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  7182  044E' 3000               	movlw	0
  7183  044F' 0080'              	movwf	efgtoa@l^(0+128)
  7184  0450'                    l4041:
  7185                           
  7186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  7187  0450' 0021               	movlb	1	; select bank1
  7188  0451' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  7189  0452' 0083'              	movwf	___fladd@b+3
  7190  0453' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  7191  0454' 0082'              	movwf	___fladd@b+2
  7192  0455' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  7193  0456' 0081'              	movwf	___fladd@b+1
  7194  0457' 0800'              	movf	efgtoa@l^(0+128),w
  7195  0458' 0080'              	movwf	___fladd@b
  7196  0459' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  7197  045A' 0087'              	movwf	___fladd@a+3
  7198  045B' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  7199  045C' 0086'              	movwf	___fladd@a+2
  7200  045D' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  7201  045E' 0085'              	movwf	___fladd@a+1
  7202  045F' 0800'              	movf	efgtoa@g^(0+128),w
  7203  0460' 0084'              	movwf	___fladd@a
  7204  0461' 3180' 2000' 3180'  	fcall	___fladd
  7205  0464' 0803'              	movf	?___fladd+3,w
  7206  0465' 0021               	movlb	1	; select bank1
  7207  0466' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  7208  0467' 0802'              	movf	?___fladd+2,w
  7209  0468' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  7210  0469' 0801'              	movf	?___fladd+1,w
  7211  046A' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  7212  046B' 0800'              	movf	?___fladd,w
  7213  046C' 0080'              	movwf	efgtoa@h^(0+128)
  7214  046D'                    l4043:
  7215                           
  7216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  7217  046D' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  7218  046E' 0020               	movlb	0	; select bank0
  7219  046F' 00C7'              	movwf	___flge@ff1+3
  7220  0470' 0021               	movlb	1	; select bank1
  7221  0471' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  7222  0472' 0020               	movlb	0	; select bank0
  7223  0473' 00C6'              	movwf	___flge@ff1+2
  7224  0474' 0021               	movlb	1	; select bank1
  7225  0475' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  7226  0476' 0020               	movlb	0	; select bank0
  7227  0477' 00C5'              	movwf	___flge@ff1+1
  7228  0478' 0021               	movlb	1	; select bank1
  7229  0479' 0800'              	movf	efgtoa@h^(0+128),w
  7230  047A' 0020               	movlb	0	; select bank0
  7231  047B' 00C4'              	movwf	___flge@ff1
  7232  047C' 3041               	movlw	65
  7233  047D' 00AD'              	movwf	___flmul@b+3
  7234  047E' 3020               	movlw	32
  7235  047F' 00AC'              	movwf	___flmul@b+2
  7236  0480' 3000               	movlw	0
  7237  0481' 00AB'              	movwf	___flmul@b+1
  7238  0482' 3000               	movlw	0
  7239  0483' 00AA'              	movwf	___flmul@b
  7240  0484' 0021               	movlb	1	; select bank1
  7241  0485' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  7242  0486' 0020               	movlb	0	; select bank0
  7243  0487' 00B1'              	movwf	___flmul@a+3
  7244  0488' 0021               	movlb	1	; select bank1
  7245  0489' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  7246  048A' 0020               	movlb	0	; select bank0
  7247  048B' 00B0'              	movwf	___flmul@a+2
  7248  048C' 0021               	movlb	1	; select bank1
  7249  048D' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  7250  048E' 0020               	movlb	0	; select bank0
  7251  048F' 00AF'              	movwf	___flmul@a+1
  7252  0490' 0021               	movlb	1	; select bank1
  7253  0491' 0800'              	movf	efgtoa@ou^(0+128),w
  7254  0492' 0020               	movlb	0	; select bank0
  7255  0493' 00AE'              	movwf	___flmul@a
  7256  0494' 3180' 2000' 3180'  	fcall	___flmul
  7257  0497' 0020               	movlb	0	; select bank0
  7258  0498' 082D'              	movf	?___flmul+3,w
  7259  0499' 00CB'              	movwf	___flge@ff2+3
  7260  049A' 082C'              	movf	?___flmul+2,w
  7261  049B' 00CA'              	movwf	___flge@ff2+2
  7262  049C' 082B'              	movf	?___flmul+1,w
  7263  049D' 00C9'              	movwf	___flge@ff2+1
  7264  049E' 082A'              	movf	?___flmul,w
  7265  049F' 00C8'              	movwf	___flge@ff2
  7266  04A0' 3180' 2000' 3180'  	fcall	___flge
  7267  04A3' 1C03               	btfss	3,0
  7268  04A4' 2800'              	goto	u5841
  7269  04A5' 2800'              	goto	u5840
  7270  04A6'                    u5841:
  7271  04A6' 2800'              	goto	l1008
  7272  04A7'                    u5840:
  7273  04A7'                    l4045:
  7274                           
  7275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  7276  04A7' 3001               	movlw	1
  7277  04A8' 0021               	movlb	1	; select bank1
  7278  04A9' 0780'              	addwf	efgtoa@e^(0+128),f
  7279  04AA' 3000               	movlw	0
  7280  04AB' 3D80'              	addwfc	(efgtoa@e+1)^(0+128),f
  7281  04AC'                    l4047:
  7282                           
  7283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  7284  04AC' 3041               	movlw	65
  7285  04AD' 0020               	movlb	0	; select bank0
  7286  04AE' 00AD'              	movwf	___flmul@b+3
  7287  04AF' 3020               	movlw	32
  7288  04B0' 00AC'              	movwf	___flmul@b+2
  7289  04B1' 3000               	movlw	0
  7290  04B2' 00AB'              	movwf	___flmul@b+1
  7291  04B3' 3000               	movlw	0
  7292  04B4' 00AA'              	movwf	___flmul@b
  7293  04B5' 0021               	movlb	1	; select bank1
  7294  04B6' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  7295  04B7' 0020               	movlb	0	; select bank0
  7296  04B8' 00B1'              	movwf	___flmul@a+3
  7297  04B9' 0021               	movlb	1	; select bank1
  7298  04BA' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  7299  04BB' 0020               	movlb	0	; select bank0
  7300  04BC' 00B0'              	movwf	___flmul@a+2
  7301  04BD' 0021               	movlb	1	; select bank1
  7302  04BE' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  7303  04BF' 0020               	movlb	0	; select bank0
  7304  04C0' 00AF'              	movwf	___flmul@a+1
  7305  04C1' 0021               	movlb	1	; select bank1
  7306  04C2' 0800'              	movf	efgtoa@ou^(0+128),w
  7307  04C3' 0020               	movlb	0	; select bank0
  7308  04C4' 00AE'              	movwf	___flmul@a
  7309  04C5' 3180' 2000' 3180'  	fcall	___flmul
  7310  04C8' 0020               	movlb	0	; select bank0
  7311  04C9' 082D'              	movf	?___flmul+3,w
  7312  04CA' 0021               	movlb	1	; select bank1
  7313  04CB' 0080'              	movwf	(efgtoa@ou+3)^(0+128)
  7314  04CC' 0020               	movlb	0	; select bank0
  7315  04CD' 082C'              	movf	?___flmul+2,w
  7316  04CE' 0021               	movlb	1	; select bank1
  7317  04CF' 0080'              	movwf	(efgtoa@ou+2)^(0+128)
  7318  04D0' 0020               	movlb	0	; select bank0
  7319  04D1' 082B'              	movf	?___flmul+1,w
  7320  04D2' 0021               	movlb	1	; select bank1
  7321  04D3' 0080'              	movwf	(efgtoa@ou+1)^(0+128)
  7322  04D4' 0020               	movlb	0	; select bank0
  7323  04D5' 082A'              	movf	?___flmul,w
  7324  04D6' 0021               	movlb	1	; select bank1
  7325  04D7' 0080'              	movwf	efgtoa@ou^(0+128)
  7326  04D8'                    l4049:
  7327                           
  7328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7329  04D8' 3066               	movlw	102
  7330  04D9' 0600'              	xorwf	efgtoa@nmode^(0+128),w
  7331  04DA' 1D03               	btfss	3,2
  7332  04DB' 2800'              	goto	u5851
  7333  04DC' 2800'              	goto	u5850
  7334  04DD'                    u5851:
  7335  04DD' 2800'              	goto	l1008
  7336  04DE'                    u5850:
  7337  04DE'                    l4051:
  7338                           
  7339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  7340  04DE' 3001               	movlw	1
  7341  04DF' 0780'              	addwf	efgtoa@m^(0+128),f
  7342  04E0' 3000               	movlw	0
  7343  04E1' 3D80'              	addwfc	(efgtoa@m+1)^(0+128),f
  7344  04E2'                    l1008:	
  7345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 460:  }
  7346                           
  7347                           
  7348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7349  04E2' 0021               	movlb	1	; select bank1
  7350  04E3' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  7351  04E4' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  7352  04E5' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  7353  04E6' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  7354  04E7' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  7355  04E8' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  7356  04E9' 0800'              	movf	efgtoa@ou^(0+128),w
  7357  04EA' 0080'              	movwf	efgtoa@u^(0+128)
  7358  04EB'                    l4053:
  7359                           
  7360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7361  04EB' 3065               	movlw	101
  7362  04EC' 0600'              	xorwf	efgtoa@nmode^(0+128),w
  7363  04ED' 1903               	btfsc	3,2
  7364  04EE' 2800'              	goto	u5861
  7365  04EF' 2800'              	goto	u5860
  7366  04F0'                    u5861:
  7367  04F0' 2800'              	goto	l4057
  7368  04F1'                    u5860:
  7369  04F1'                    l4055:
  7370  04F1' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  7371  04F2' 0080'              	movwf	(efgtoa@ne+1)^(0+128)
  7372  04F3' 0800'              	movf	efgtoa@e^(0+128),w
  7373  04F4' 0080'              	movwf	efgtoa@ne^(0+128)
  7374  04F5' 2800'              	goto	l1013
  7375  04F6'                    l4057:
  7376  04F6' 0180'              	clrf	efgtoa@ne^(0+128)
  7377  04F7' 0180'              	clrf	(efgtoa@ne+1)^(0+128)
  7378  04F8'                    l1013:
  7379                           
  7380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7381  04F8' 0180'              	clrf	efgtoa@pp^(0+128)
  7382  04F9' 0180'              	clrf	(efgtoa@pp+1)^(0+128)
  7383                           
  7384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7385  04FA' 0180'              	clrf	efgtoa@t^(0+128)
  7386  04FB' 0180'              	clrf	(efgtoa@t+1)^(0+128)
  7387                           
  7388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7389  04FC' 0180'              	clrf	efgtoa@i^(0+128)
  7390  04FD' 0180'              	clrf	(efgtoa@i+1)^(0+128)
  7391                           
  7392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7393  04FE' 2800'              	goto	l4107
  7394  04FF'                    l4059:
  7395                           
  7396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7397  04FF' 0021               	movlb	1	; select bank1
  7398  0500' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  7399  0501' 0020               	movlb	0	; select bank0
  7400  0502' 0093'              	movwf	___fldiv@a+3
  7401  0503' 0021               	movlb	1	; select bank1
  7402  0504' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  7403  0505' 0020               	movlb	0	; select bank0
  7404  0506' 0092'              	movwf	___fldiv@a+2
  7405  0507' 0021               	movlb	1	; select bank1
  7406  0508' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  7407  0509' 0020               	movlb	0	; select bank0
  7408  050A' 0091'              	movwf	___fldiv@a+1
  7409  050B' 0021               	movlb	1	; select bank1
  7410  050C' 0800'              	movf	efgtoa@u^(0+128),w
  7411  050D' 0020               	movlb	0	; select bank0
  7412  050E' 0090'              	movwf	___fldiv@a
  7413  050F' 0021               	movlb	1	; select bank1
  7414  0510' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  7415  0511' 0020               	movlb	0	; select bank0
  7416  0512' 0097'              	movwf	___fldiv@b+3
  7417  0513' 0021               	movlb	1	; select bank1
  7418  0514' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  7419  0515' 0020               	movlb	0	; select bank0
  7420  0516' 0096'              	movwf	___fldiv@b+2
  7421  0517' 0021               	movlb	1	; select bank1
  7422  0518' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  7423  0519' 0020               	movlb	0	; select bank0
  7424  051A' 0095'              	movwf	___fldiv@b+1
  7425  051B' 0021               	movlb	1	; select bank1
  7426  051C' 0800'              	movf	efgtoa@h^(0+128),w
  7427  051D' 0020               	movlb	0	; select bank0
  7428  051E' 0094'              	movwf	___fldiv@b
  7429  051F' 3180' 2000' 3180'  	fcall	___fldiv
  7430  0522' 0020               	movlb	0	; select bank0
  7431  0523' 0813'              	movf	?___fldiv+3,w
  7432  0524' 00AD'              	movwf	floorf@x+3
  7433  0525' 0812'              	movf	?___fldiv+2,w
  7434  0526' 00AC'              	movwf	floorf@x+2
  7435  0527' 0811'              	movf	?___fldiv+1,w
  7436  0528' 00AB'              	movwf	floorf@x+1
  7437  0529' 0810'              	movf	?___fldiv,w
  7438  052A' 00AA'              	movwf	floorf@x
  7439  052B' 3180' 2000' 3180'  	fcall	_floorf
  7440  052E' 0020               	movlb	0	; select bank0
  7441  052F' 082D'              	movf	?_floorf+3,w
  7442  0530' 0021               	movlb	1	; select bank1
  7443  0531' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  7444  0532' 0020               	movlb	0	; select bank0
  7445  0533' 082C'              	movf	?_floorf+2,w
  7446  0534' 0021               	movlb	1	; select bank1
  7447  0535' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  7448  0536' 0020               	movlb	0	; select bank0
  7449  0537' 082B'              	movf	?_floorf+1,w
  7450  0538' 0021               	movlb	1	; select bank1
  7451  0539' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  7452  053A' 0020               	movlb	0	; select bank0
  7453  053B' 082A'              	movf	?_floorf,w
  7454  053C' 0021               	movlb	1	; select bank1
  7455  053D' 0080'              	movwf	efgtoa@l^(0+128)
  7456                           
  7457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7458  053E' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  7459  053F' 0020               	movlb	0	; select bank0
  7460  0540' 00AD'              	movwf	___fltol@f1+3
  7461  0541' 0021               	movlb	1	; select bank1
  7462  0542' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  7463  0543' 0020               	movlb	0	; select bank0
  7464  0544' 00AC'              	movwf	___fltol@f1+2
  7465  0545' 0021               	movlb	1	; select bank1
  7466  0546' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  7467  0547' 0020               	movlb	0	; select bank0
  7468  0548' 00AB'              	movwf	___fltol@f1+1
  7469  0549' 0021               	movlb	1	; select bank1
  7470  054A' 0800'              	movf	efgtoa@l^(0+128),w
  7471  054B' 0020               	movlb	0	; select bank0
  7472  054C' 00AA'              	movwf	___fltol@f1
  7473  054D' 3180' 2000' 3180'  	fcall	___fltol
  7474  0550' 0020               	movlb	0	; select bank0
  7475  0551' 082B'              	movf	?___fltol+1,w
  7476  0552' 0021               	movlb	1	; select bank1
  7477  0553' 0080'              	movwf	(efgtoa@d+1)^(0+128)
  7478  0554' 0020               	movlb	0	; select bank0
  7479  0555' 082A'              	movf	?___fltol,w
  7480  0556' 0021               	movlb	1	; select bank1
  7481  0557' 0080'              	movwf	efgtoa@d^(0+128)
  7482  0558'                    l4061:
  7483                           
  7484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7485  0558' 0022               	movlb	2	; select bank2
  7486  0559' 1A00'              	btfsc	_flags^(0+256),4
  7487  055A' 2800'              	goto	u5871
  7488  055B' 2800'              	goto	u5870
  7489  055C'                    u5871:
  7490  055C' 2800'              	goto	l4071
  7491  055D'                    u5870:
  7492  055D'                    l4063:
  7493  055D' 0021               	movlb	1	; select bank1
  7494  055E' 0800'              	movf	efgtoa@d^(0+128),w
  7495  055F' 0400'              	iorwf	(efgtoa@d+1)^(0+128),w
  7496  0560' 1D03               	btfss	3,2
  7497  0561' 2800'              	goto	u5881
  7498  0562' 2800'              	goto	u5880
  7499  0563'                    u5881:
  7500  0563' 2800'              	goto	l4071
  7501  0564'                    u5880:
  7502  0564'                    l4065:
  7503  0564' 3067               	movlw	103
  7504  0565' 0600'              	xorwf	efgtoa@mode^(0+128),w
  7505  0566' 1D03               	btfss	3,2
  7506  0567' 2800'              	goto	u5891
  7507  0568' 2800'              	goto	u5890
  7508  0569'                    u5891:
  7509  0569' 2800'              	goto	l4071
  7510  056A'                    u5890:
  7511  056A'                    l4067:
  7512  056A' 1F80'              	btfss	(efgtoa@ne+1)^(0+128),7
  7513  056B' 2800'              	goto	u5901
  7514  056C' 2800'              	goto	u5900
  7515  056D'                    u5901:
  7516  056D' 2800'              	goto	l4071
  7517  056E'                    u5900:
  7518  056E'                    l4069:
  7519                           
  7520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7521  056E' 3001               	movlw	1
  7522  056F' 0780'              	addwf	efgtoa@t^(0+128),f
  7523  0570' 3000               	movlw	0
  7524  0571' 3D80'              	addwfc	(efgtoa@t+1)^(0+128),f
  7525                           
  7526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7527  0572' 2800'              	goto	l4099
  7528  0573'                    l4071:
  7529                           
  7530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7531  0573' 0021               	movlb	1	; select bank1
  7532  0574' 0800'              	movf	efgtoa@pp^(0+128),w
  7533  0575' 0400'              	iorwf	(efgtoa@pp+1)^(0+128),w
  7534  0576' 1D03               	btfss	3,2
  7535  0577' 2800'              	goto	u5911
  7536  0578' 2800'              	goto	u5910
  7537  0579'                    u5911:
  7538  0579' 2800'              	goto	l4091
  7539  057A'                    u5910:
  7540  057A'                    l4073:
  7541  057A' 1F80'              	btfss	(efgtoa@ne+1)^(0+128),7
  7542  057B' 2800'              	goto	u5921
  7543  057C' 2800'              	goto	u5920
  7544  057D'                    u5921:
  7545  057D' 2800'              	goto	l4091
  7546  057E'                    u5920:
  7547  057E'                    l4075:
  7548                           
  7549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7550  057E' 302E               	movlw	46
  7551  057F' 0080'              	movwf	??_efgtoa^(0+128)
  7552  0580' 0800'              	movf	efgtoa@n^(0+128),w
  7553  0581' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  7554  0582' 0086               	movwf	6
  7555  0583' 3002               	movlw	2	; select bank4/5
  7556  0584' 0087               	movwf	7
  7557  0585' 0800'              	movf	??_efgtoa^(0+128),w
  7558  0586' 0081               	movwf	1
  7559  0587'                    l4077:
  7560  0587' 3001               	movlw	1
  7561  0588' 0780'              	addwf	efgtoa@n^(0+128),f
  7562  0589' 3000               	movlw	0
  7563  058A' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  7564  058B'                    l4079:
  7565                           
  7566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7567  058B' 30FF               	movlw	255
  7568  058C' 0780'              	addwf	efgtoa@w^(0+128),f
  7569  058D' 30FF               	movlw	255
  7570  058E' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  7571  058F'                    l4081:
  7572                           
  7573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7574  058F' 3001               	movlw	1
  7575  0590' 0080'              	movwf	efgtoa@pp^(0+128)
  7576  0591' 3000               	movlw	0
  7577  0592' 0081'              	movwf	(efgtoa@pp^(0+128)+1)
  7578  0593' 2800'              	goto	l4091
  7579  0594'                    l4083:
  7580                           
  7581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7582  0594' 3030               	movlw	48
  7583  0595' 0080'              	movwf	??_efgtoa^(0+128)
  7584  0596' 0800'              	movf	efgtoa@n^(0+128),w
  7585  0597' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  7586  0598' 0086               	movwf	6
  7587  0599' 3002               	movlw	2	; select bank4/5
  7588  059A' 0087               	movwf	7
  7589  059B' 0800'              	movf	??_efgtoa^(0+128),w
  7590  059C' 0081               	movwf	1
  7591  059D'                    l4085:
  7592  059D' 3001               	movlw	1
  7593  059E' 0780'              	addwf	efgtoa@n^(0+128),f
  7594  059F' 3000               	movlw	0
  7595  05A0' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  7596  05A1'                    l4087:
  7597                           
  7598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7599  05A1' 30FF               	movlw	255
  7600  05A2' 0780'              	addwf	efgtoa@w^(0+128),f
  7601  05A3' 30FF               	movlw	255
  7602  05A4' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  7603  05A5'                    l4089:
  7604                           
  7605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7606  05A5' 30FF               	movlw	255
  7607  05A6' 0780'              	addwf	efgtoa@t^(0+128),f
  7608  05A7' 30FF               	movlw	255
  7609  05A8' 3D80'              	addwfc	(efgtoa@t+1)^(0+128),f
  7610  05A9'                    l4091:
  7611                           
  7612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7613  05A9' 0800'              	movf	efgtoa@t^(0+128),w
  7614  05AA' 0400'              	iorwf	(efgtoa@t+1)^(0+128),w
  7615  05AB' 1D03               	btfss	3,2
  7616  05AC' 2800'              	goto	u5931
  7617  05AD' 2800'              	goto	u5930
  7618  05AE'                    u5931:
  7619  05AE' 2800'              	goto	l4083
  7620  05AF'                    u5930:
  7621  05AF'                    l4093:
  7622                           
  7623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7624  05AF' 0800'              	movf	efgtoa@d^(0+128),w
  7625  05B0' 3E30               	addlw	48
  7626  05B1' 0080'              	movwf	??_efgtoa^(0+128)
  7627  05B2' 0800'              	movf	efgtoa@n^(0+128),w
  7628  05B3' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  7629  05B4' 0086               	movwf	6
  7630  05B5' 3002               	movlw	2	; select bank4/5
  7631  05B6' 0087               	movwf	7
  7632  05B7' 0800'              	movf	??_efgtoa^(0+128),w
  7633  05B8' 0081               	movwf	1
  7634  05B9'                    l4095:
  7635  05B9' 3001               	movlw	1
  7636  05BA' 0780'              	addwf	efgtoa@n^(0+128),f
  7637  05BB' 3000               	movlw	0
  7638  05BC' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  7639  05BD'                    l4097:
  7640                           
  7641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7642  05BD' 30FF               	movlw	255
  7643  05BE' 0780'              	addwf	efgtoa@w^(0+128),f
  7644  05BF' 30FF               	movlw	255
  7645  05C0' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  7646  05C1'                    l4099:
  7647                           
  7648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7649  05C1' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  7650  05C2' 0020               	movlb	0	; select bank0
  7651  05C3' 00B1'              	movwf	___flmul@a+3
  7652  05C4' 0021               	movlb	1	; select bank1
  7653  05C5' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  7654  05C6' 0020               	movlb	0	; select bank0
  7655  05C7' 00B0'              	movwf	___flmul@a+2
  7656  05C8' 0021               	movlb	1	; select bank1
  7657  05C9' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  7658  05CA' 0020               	movlb	0	; select bank0
  7659  05CB' 00AF'              	movwf	___flmul@a+1
  7660  05CC' 0021               	movlb	1	; select bank1
  7661  05CD' 0800'              	movf	efgtoa@l^(0+128),w
  7662  05CE' 0020               	movlb	0	; select bank0
  7663  05CF' 00AE'              	movwf	___flmul@a
  7664  05D0' 0021               	movlb	1	; select bank1
  7665  05D1' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  7666  05D2' 0020               	movlb	0	; select bank0
  7667  05D3' 00AD'              	movwf	___flmul@b+3
  7668  05D4' 0021               	movlb	1	; select bank1
  7669  05D5' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  7670  05D6' 0020               	movlb	0	; select bank0
  7671  05D7' 00AC'              	movwf	___flmul@b+2
  7672  05D8' 0021               	movlb	1	; select bank1
  7673  05D9' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  7674  05DA' 0020               	movlb	0	; select bank0
  7675  05DB' 00AB'              	movwf	___flmul@b+1
  7676  05DC' 0021               	movlb	1	; select bank1
  7677  05DD' 0800'              	movf	efgtoa@u^(0+128),w
  7678  05DE' 0020               	movlb	0	; select bank0
  7679  05DF' 00AA'              	movwf	___flmul@b
  7680  05E0' 3180' 2000' 3180'  	fcall	___flmul
  7681  05E3' 0020               	movlb	0	; select bank0
  7682  05E4' 082D'              	movf	?___flmul+3,w
  7683  05E5' 008B'              	movwf	___flsub@a+3
  7684  05E6' 082C'              	movf	?___flmul+2,w
  7685  05E7' 008A'              	movwf	___flsub@a+2
  7686  05E8' 082B'              	movf	?___flmul+1,w
  7687  05E9' 0089'              	movwf	___flsub@a+1
  7688  05EA' 082A'              	movf	?___flmul,w
  7689  05EB' 0088'              	movwf	___flsub@a
  7690  05EC' 0021               	movlb	1	; select bank1
  7691  05ED' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  7692  05EE' 0020               	movlb	0	; select bank0
  7693  05EF' 008F'              	movwf	___flsub@b+3
  7694  05F0' 0021               	movlb	1	; select bank1
  7695  05F1' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  7696  05F2' 0020               	movlb	0	; select bank0
  7697  05F3' 008E'              	movwf	___flsub@b+2
  7698  05F4' 0021               	movlb	1	; select bank1
  7699  05F5' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  7700  05F6' 0020               	movlb	0	; select bank0
  7701  05F7' 008D'              	movwf	___flsub@b+1
  7702  05F8' 0021               	movlb	1	; select bank1
  7703  05F9' 0800'              	movf	efgtoa@h^(0+128),w
  7704  05FA' 0020               	movlb	0	; select bank0
  7705  05FB' 008C'              	movwf	___flsub@b
  7706  05FC' 3180' 2000' 3180'  	fcall	___flsub
  7707  05FF' 0020               	movlb	0	; select bank0
  7708  0600' 080B'              	movf	?___flsub+3,w
  7709  0601' 0021               	movlb	1	; select bank1
  7710  0602' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  7711  0603' 0020               	movlb	0	; select bank0
  7712  0604' 080A'              	movf	?___flsub+2,w
  7713  0605' 0021               	movlb	1	; select bank1
  7714  0606' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  7715  0607' 0020               	movlb	0	; select bank0
  7716  0608' 0809'              	movf	?___flsub+1,w
  7717  0609' 0021               	movlb	1	; select bank1
  7718  060A' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  7719  060B' 0020               	movlb	0	; select bank0
  7720  060C' 0808'              	movf	?___flsub,w
  7721  060D' 0021               	movlb	1	; select bank1
  7722  060E' 0080'              	movwf	efgtoa@h^(0+128)
  7723  060F'                    l4101:
  7724                           
  7725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7726  060F' 3041               	movlw	65
  7727  0610' 0020               	movlb	0	; select bank0
  7728  0611' 0093'              	movwf	___fldiv@a+3
  7729  0612' 3020               	movlw	32
  7730  0613' 0092'              	movwf	___fldiv@a+2
  7731  0614' 3000               	movlw	0
  7732  0615' 0091'              	movwf	___fldiv@a+1
  7733  0616' 3000               	movlw	0
  7734  0617' 0090'              	movwf	___fldiv@a
  7735  0618' 0021               	movlb	1	; select bank1
  7736  0619' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  7737  061A' 0020               	movlb	0	; select bank0
  7738  061B' 0097'              	movwf	___fldiv@b+3
  7739  061C' 0021               	movlb	1	; select bank1
  7740  061D' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  7741  061E' 0020               	movlb	0	; select bank0
  7742  061F' 0096'              	movwf	___fldiv@b+2
  7743  0620' 0021               	movlb	1	; select bank1
  7744  0621' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  7745  0622' 0020               	movlb	0	; select bank0
  7746  0623' 0095'              	movwf	___fldiv@b+1
  7747  0624' 0021               	movlb	1	; select bank1
  7748  0625' 0800'              	movf	efgtoa@u^(0+128),w
  7749  0626' 0020               	movlb	0	; select bank0
  7750  0627' 0094'              	movwf	___fldiv@b
  7751  0628' 3180' 2000' 3180'  	fcall	___fldiv
  7752  062B' 0020               	movlb	0	; select bank0
  7753  062C' 0813'              	movf	?___fldiv+3,w
  7754  062D' 0021               	movlb	1	; select bank1
  7755  062E' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  7756  062F' 0020               	movlb	0	; select bank0
  7757  0630' 0812'              	movf	?___fldiv+2,w
  7758  0631' 0021               	movlb	1	; select bank1
  7759  0632' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  7760  0633' 0020               	movlb	0	; select bank0
  7761  0634' 0811'              	movf	?___fldiv+1,w
  7762  0635' 0021               	movlb	1	; select bank1
  7763  0636' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  7764  0637' 0020               	movlb	0	; select bank0
  7765  0638' 0810'              	movf	?___fldiv,w
  7766  0639' 0021               	movlb	1	; select bank1
  7767  063A' 0080'              	movwf	efgtoa@u^(0+128)
  7768  063B'                    l4103:
  7769                           
  7770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7771  063B' 30FF               	movlw	255
  7772  063C' 0780'              	addwf	efgtoa@ne^(0+128),f
  7773  063D' 30FF               	movlw	255
  7774  063E' 3D80'              	addwfc	(efgtoa@ne+1)^(0+128),f
  7775  063F'                    l4105:
  7776                           
  7777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7778  063F' 3001               	movlw	1
  7779  0640' 0780'              	addwf	efgtoa@i^(0+128),f
  7780  0641' 3000               	movlw	0
  7781  0642' 3D80'              	addwfc	(efgtoa@i+1)^(0+128),f
  7782  0643'                    l4107:
  7783                           
  7784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7785  0643' 0800'              	movf	(efgtoa@i+1)^(0+128),w
  7786  0644' 3A80               	xorlw	128
  7787  0645' 0080'              	movwf	??_efgtoa^(0+128)
  7788  0646' 0800'              	movf	(efgtoa@m+1)^(0+128),w
  7789  0647' 3A80               	xorlw	128
  7790  0648' 0200'              	subwf	??_efgtoa^(0+128),w
  7791  0649' 1D03               	skipz
  7792  064A' 2800'              	goto	u5945
  7793  064B' 0800'              	movf	efgtoa@m^(0+128),w
  7794  064C' 0200'              	subwf	efgtoa@i^(0+128),w
  7795  064D'                    u5945:
  7796  064D' 1803               	skipnc
  7797  064E' 2800'              	goto	u5941
  7798  064F' 2800'              	goto	u5940
  7799  0650'                    u5941:
  7800  0650' 2800'              	goto	l4111
  7801  0651'                    u5940:
  7802  0651'                    l4109:
  7803  0651' 0021               	movlb	1	; select bank1
  7804  0652' 0800'              	movf	(efgtoa@n+1)^(0+128),w
  7805  0653' 3A80               	xorlw	128
  7806  0654' 0080'              	movwf	??_efgtoa^(0+128)
  7807  0655' 3080               	movlw	128
  7808  0656' 0200'              	subwf	??_efgtoa^(0+128),w
  7809  0657' 1D03               	skipz
  7810  0658' 2800'              	goto	u5955
  7811  0659' 304B               	movlw	75
  7812  065A' 0200'              	subwf	efgtoa@n^(0+128),w
  7813  065B'                    u5955:
  7814  065B' 1C03               	skipc
  7815  065C' 2800'              	goto	u5951
  7816  065D' 2800'              	goto	u5950
  7817  065E'                    u5951:
  7818  065E' 2800'              	goto	l4059
  7819  065F'                    u5950:
  7820  065F'                    l4111:
  7821                           
  7822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7823  065F' 0021               	movlb	1	; select bank1
  7824  0660' 0800'              	movf	efgtoa@pp^(0+128),w
  7825  0661' 0400'              	iorwf	(efgtoa@pp+1)^(0+128),w
  7826  0662' 1D03               	btfss	3,2
  7827  0663' 2800'              	goto	u5961
  7828  0664' 2800'              	goto	u5960
  7829  0665'                    u5961:
  7830  0665' 2800'              	goto	l4119
  7831  0666'                    u5960:
  7832  0666'                    l4113:
  7833  0666' 0022               	movlb	2	; select bank2
  7834  0667' 1E00'              	btfss	_flags^(0+256),4
  7835  0668' 2800'              	goto	u5971
  7836  0669' 2800'              	goto	u5970
  7837  066A'                    u5971:
  7838  066A' 2800'              	goto	l4119
  7839  066B'                    u5970:
  7840  066B'                    l4115:
  7841                           
  7842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7843  066B' 302E               	movlw	46
  7844  066C' 0021               	movlb	1	; select bank1
  7845  066D' 0080'              	movwf	??_efgtoa^(0+128)
  7846  066E' 0800'              	movf	efgtoa@n^(0+128),w
  7847  066F' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  7848  0670' 0086               	movwf	6
  7849  0671' 3002               	movlw	2	; select bank4/5
  7850  0672' 0087               	movwf	7
  7851  0673' 0800'              	movf	??_efgtoa^(0+128),w
  7852  0674' 0081               	movwf	1
  7853  0675'                    l4117:
  7854  0675' 3001               	movlw	1
  7855  0676' 0780'              	addwf	efgtoa@n^(0+128),f
  7856  0677' 3000               	movlw	0
  7857  0678' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  7858  0679'                    l4119:
  7859                           
  7860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7861  0679' 0021               	movlb	1	; select bank1
  7862  067A' 0800'              	movf	efgtoa@n^(0+128),w
  7863  067B' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  7864  067C' 0086               	movwf	6
  7865  067D' 3002               	movlw	2	; select bank4/5
  7866  067E' 0087               	movwf	7
  7867  067F' 0181               	clrf	1
  7868  0680'                    l4121:
  7869                           
  7870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7871  0680' 3065               	movlw	101
  7872  0681' 0600'              	xorwf	efgtoa@nmode^(0+128),w
  7873  0682' 1D03               	btfss	3,2
  7874  0683' 2800'              	goto	u5981
  7875  0684' 2800'              	goto	u5980
  7876  0685'                    u5981:
  7877  0685' 2800'              	goto	l4181
  7878  0686'                    u5980:
  7879  0686'                    l4123:
  7880                           
  7881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7882  0686' 304F               	movlw	79
  7883  0687' 0080'              	movwf	efgtoa@i^(0+128)
  7884  0688' 3000               	movlw	0
  7885  0689' 0081'              	movwf	(efgtoa@i^(0+128)+1)
  7886  068A'                    l4125:
  7887                           
  7888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7889  068A' 0800'              	movf	efgtoa@i^(0+128),w
  7890  068B' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  7891  068C' 0086               	movwf	6
  7892  068D' 3002               	movlw	2	; select bank4/5
  7893  068E' 0087               	movwf	7
  7894  068F' 0181               	clrf	1
  7895  0690'                    l4127:
  7896                           
  7897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7898  0690' 0180'              	clrf	efgtoa@sign^(0+128)
  7899  0691' 0180'              	clrf	(efgtoa@sign+1)^(0+128)
  7900  0692'                    l4129:
  7901                           
  7902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7903  0692' 1F80'              	btfss	(efgtoa@e+1)^(0+128),7
  7904  0693' 2800'              	goto	u5991
  7905  0694' 2800'              	goto	u5990
  7906  0695'                    u5991:
  7907  0695' 2800'              	goto	l4135
  7908  0696'                    u5990:
  7909  0696'                    l4131:
  7910                           
  7911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7912  0696' 3001               	movlw	1
  7913  0697' 0080'              	movwf	efgtoa@sign^(0+128)
  7914  0698' 3000               	movlw	0
  7915  0699' 0081'              	movwf	(efgtoa@sign^(0+128)+1)
  7916  069A'                    l4133:
  7917                           
  7918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7919  069A' 0980'              	comf	efgtoa@e^(0+128),f
  7920  069B' 0980'              	comf	(efgtoa@e+1)^(0+128),f
  7921  069C' 0A80'              	incf	efgtoa@e^(0+128),f
  7922  069D' 1903               	skipnz
  7923  069E' 0A80'              	incf	(efgtoa@e+1)^(0+128),f
  7924  069F'                    l4135:
  7925                           
  7926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7927  069F' 3002               	movlw	2
  7928  06A0' 0080'              	movwf	efgtoa@p^(0+128)
  7929  06A1' 3000               	movlw	0
  7930  06A2' 0081'              	movwf	(efgtoa@p^(0+128)+1)
  7931                           
  7932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7933  06A3' 2800'              	goto	l4147
  7934  06A4'                    l4137:
  7935                           
  7936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7937  06A4' 30FF               	movlw	255
  7938  06A5' 0021               	movlb	1	; select bank1
  7939  06A6' 0780'              	addwf	efgtoa@i^(0+128),f
  7940  06A7' 30FF               	movlw	255
  7941  06A8' 3D80'              	addwfc	(efgtoa@i+1)^(0+128),f
  7942  06A9'                    l4139:
  7943                           
  7944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7945  06A9' 300A               	movlw	10
  7946  06AA' 0080'              	movwf	___awmod@divisor
  7947  06AB' 3000               	movlw	0
  7948  06AC' 0081'              	movwf	___awmod@divisor+1
  7949  06AD' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  7950  06AE' 0083'              	movwf	___awmod@dividend+1
  7951  06AF' 0800'              	movf	efgtoa@e^(0+128),w
  7952  06B0' 0082'              	movwf	___awmod@dividend
  7953  06B1' 3180' 2000' 3180'  	fcall	___awmod
  7954  06B4' 0800'              	movf	?___awmod,w
  7955  06B5' 3E30               	addlw	48
  7956  06B6' 0021               	movlb	1	; select bank1
  7957  06B7' 0080'              	movwf	??_efgtoa^(0+128)
  7958  06B8' 0800'              	movf	efgtoa@i^(0+128),w
  7959  06B9' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  7960  06BA' 0086               	movwf	6
  7961  06BB' 3002               	movlw	2	; select bank4/5
  7962  06BC' 0087               	movwf	7
  7963  06BD' 0800'              	movf	??_efgtoa^(0+128),w
  7964  06BE' 0081               	movwf	1
  7965  06BF'                    l4141:
  7966                           
  7967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7968  06BF' 300A               	movlw	10
  7969  06C0' 0080'              	movwf	___awdiv@divisor
  7970  06C1' 3000               	movlw	0
  7971  06C2' 0081'              	movwf	___awdiv@divisor+1
  7972  06C3' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  7973  06C4' 0083'              	movwf	___awdiv@dividend+1
  7974  06C5' 0800'              	movf	efgtoa@e^(0+128),w
  7975  06C6' 0082'              	movwf	___awdiv@dividend
  7976  06C7' 3180' 2000' 3180'  	fcall	___awdiv
  7977  06CA' 0801'              	movf	?___awdiv+1,w
  7978  06CB' 0021               	movlb	1	; select bank1
  7979  06CC' 0080'              	movwf	(efgtoa@e+1)^(0+128)
  7980  06CD' 0800'              	movf	?___awdiv,w
  7981  06CE' 0080'              	movwf	efgtoa@e^(0+128)
  7982  06CF'                    l4143:
  7983                           
  7984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7985  06CF' 30FF               	movlw	255
  7986  06D0' 0780'              	addwf	efgtoa@p^(0+128),f
  7987  06D1' 30FF               	movlw	255
  7988  06D2' 3D80'              	addwfc	(efgtoa@p+1)^(0+128),f
  7989  06D3'                    l4145:
  7990                           
  7991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7992  06D3' 30FF               	movlw	255
  7993  06D4' 0780'              	addwf	efgtoa@w^(0+128),f
  7994  06D5' 30FF               	movlw	255
  7995  06D6' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  7996  06D7'                    l4147:
  7997                           
  7998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7999  06D7' 0800'              	movf	efgtoa@e^(0+128),w
  8000  06D8' 0400'              	iorwf	(efgtoa@e+1)^(0+128),w
  8001  06D9' 1D03               	btfss	3,2
  8002  06DA' 2800'              	goto	u6001
  8003  06DB' 2800'              	goto	u6000
  8004  06DC'                    u6001:
  8005  06DC' 2800'              	goto	l4137
  8006  06DD'                    u6000:
  8007  06DD'                    l4149:
  8008  06DD' 0800'              	movf	(efgtoa@p+1)^(0+128),w
  8009  06DE' 3A80               	xorlw	128
  8010  06DF' 0080'              	movwf	??_efgtoa^(0+128)
  8011  06E0' 3080               	movlw	128
  8012  06E1' 0200'              	subwf	??_efgtoa^(0+128),w
  8013  06E2' 1D03               	skipz
  8014  06E3' 2800'              	goto	u6015
  8015  06E4' 3001               	movlw	1
  8016  06E5' 0200'              	subwf	efgtoa@p^(0+128),w
  8017  06E6'                    u6015:
  8018  06E6' 1803               	skipnc
  8019  06E7' 2800'              	goto	u6011
  8020  06E8' 2800'              	goto	u6010
  8021  06E9'                    u6011:
  8022  06E9' 2800'              	goto	l4137
  8023  06EA'                    u6010:
  8024  06EA'                    l4151:
  8025                           
  8026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  8027  06EA' 30FF               	movlw	255
  8028  06EB' 0021               	movlb	1	; select bank1
  8029  06EC' 0780'              	addwf	efgtoa@i^(0+128),f
  8030  06ED' 30FF               	movlw	255
  8031  06EE' 3D80'              	addwfc	(efgtoa@i+1)^(0+128),f
  8032  06EF'                    l4153:
  8033                           
  8034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  8035  06EF' 0800'              	movf	efgtoa@sign^(0+128),w
  8036  06F0' 0400'              	iorwf	(efgtoa@sign+1)^(0+128),w
  8037  06F1' 1D03               	btfss	3,2
  8038  06F2' 2800'              	goto	u6021
  8039  06F3' 2800'              	goto	u6020
  8040  06F4'                    u6021:
  8041  06F4' 2800'              	goto	l4157
  8042  06F5'                    u6020:
  8043  06F5'                    l4155:
  8044  06F5' 302B               	movlw	43
  8045  06F6' 0080'              	movwf	_efgtoa$1018^(0+128)
  8046  06F7' 3000               	movlw	0
  8047  06F8' 0081'              	movwf	(_efgtoa$1018^(0+128)+1)
  8048  06F9' 2800'              	goto	l4159
  8049  06FA'                    l4157:
  8050  06FA' 302D               	movlw	45
  8051  06FB' 0080'              	movwf	_efgtoa$1018^(0+128)
  8052  06FC' 3000               	movlw	0
  8053  06FD' 0081'              	movwf	(_efgtoa$1018^(0+128)+1)
  8054  06FE'                    l4159:
  8055  06FE' 0800'              	movf	_efgtoa$1018^(0+128),w
  8056  06FF' 0080'              	movwf	??_efgtoa^(0+128)
  8057  0700' 0800'              	movf	efgtoa@i^(0+128),w
  8058  0701' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  8059  0702' 0086               	movwf	6
  8060  0703' 3002               	movlw	2	; select bank4/5
  8061  0704' 0087               	movwf	7
  8062  0705' 0800'              	movf	??_efgtoa^(0+128),w
  8063  0706' 0081               	movwf	1
  8064  0707'                    l4161:
  8065                           
  8066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  8067  0707' 30FF               	movlw	255
  8068  0708' 0780'              	addwf	efgtoa@w^(0+128),f
  8069  0709' 30FF               	movlw	255
  8070  070A' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  8071  070B'                    l4163:
  8072                           
  8073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8074  070B' 30FF               	movlw	255
  8075  070C' 0780'              	addwf	efgtoa@i^(0+128),f
  8076  070D' 30FF               	movlw	255
  8077  070E' 3D80'              	addwfc	(efgtoa@i+1)^(0+128),f
  8078  070F'                    l4165:
  8079  070F' 0800'              	movf	efgtoa@c^(0+128),w
  8080  0710' 3EBF               	addlw	191
  8081  0711' 0080'              	movwf	??_efgtoa^(0+128)
  8082  0712' 30FF               	movlw	255
  8083  0713' 1803               	skipnc
  8084  0714' 3000               	movlw	0
  8085  0715' 0081'              	movwf	(??_efgtoa^(0+128)+1)
  8086  0716' 3000               	movlw	0
  8087  0717' 0200'              	subwf	(??_efgtoa+1)^(0+128),w
  8088  0718' 301A               	movlw	26
  8089  0719' 1903               	skipnz
  8090  071A' 0200'              	subwf	??_efgtoa^(0+128),w
  8091  071B' 1C03               	skipc
  8092  071C' 2800'              	goto	u6031
  8093  071D' 2800'              	goto	u6030
  8094  071E'                    u6031:
  8095  071E' 3001               	movlw	1
  8096  071F' 2800'              	goto	u6040
  8097  0720'                    u6030:
  8098  0720' 3000               	movlw	0
  8099  0721'                    u6040:
  8100  0721' 0080'              	movwf	(??_efgtoa+2)^(0+128)
  8101  0722' 0181'              	clrf	((??_efgtoa+2)^(0+128)+1)
  8102  0723' 0800'              	movf	(??_efgtoa+2)^(0+128),w
  8103  0724' 0080'              	movwf	_efgtoa$1020^(0+128)
  8104  0725' 0800'              	movf	(??_efgtoa+3)^(0+128),w
  8105  0726' 0080'              	movwf	(_efgtoa$1020+1)^(0+128)
  8106  0727'                    l4169:
  8107  0727' 0800'              	movf	_efgtoa$1020^(0+128),w
  8108  0728' 0400'              	iorwf	(_efgtoa$1020+1)^(0+128),w
  8109  0729' 1D03               	btfss	3,2
  8110  072A' 2800'              	goto	u6051
  8111  072B' 2800'              	goto	u6050
  8112  072C'                    u6051:
  8113  072C' 2800'              	goto	l4173
  8114  072D'                    u6050:
  8115  072D'                    l4171:
  8116  072D' 3065               	movlw	101
  8117  072E' 0080'              	movwf	_efgtoa$1019^(0+128)
  8118  072F' 3000               	movlw	0
  8119  0730' 0081'              	movwf	(_efgtoa$1019^(0+128)+1)
  8120  0731' 2800'              	goto	l4175
  8121  0732'                    l4173:
  8122  0732' 3045               	movlw	69
  8123  0733' 0080'              	movwf	_efgtoa$1019^(0+128)
  8124  0734' 3000               	movlw	0
  8125  0735' 0081'              	movwf	(_efgtoa$1019^(0+128)+1)
  8126  0736'                    l4175:
  8127  0736' 0800'              	movf	_efgtoa$1019^(0+128),w
  8128  0737' 0080'              	movwf	??_efgtoa^(0+128)
  8129  0738' 0800'              	movf	efgtoa@i^(0+128),w
  8130  0739' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  8131  073A' 0086               	movwf	6
  8132  073B' 3002               	movlw	2	; select bank4/5
  8133  073C' 0087               	movwf	7
  8134  073D' 0800'              	movf	??_efgtoa^(0+128),w
  8135  073E' 0081               	movwf	1
  8136  073F'                    l4177:
  8137                           
  8138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  8139  073F' 30FF               	movlw	255
  8140  0740' 0780'              	addwf	efgtoa@w^(0+128),f
  8141  0741' 30FF               	movlw	255
  8142  0742' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  8143  0743'                    l4179:
  8144                           
  8145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8146  0743' 0800'              	movf	efgtoa@i^(0+128),w
  8147  0744' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  8148  0745' 0080'              	movwf	strcpy@src
  8149  0746' 3002               	movlw	2
  8150  0747' 0081'              	movwf	strcpy@src+1
  8151  0748' 0800'              	movf	efgtoa@n^(0+128),w
  8152  0749' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
  8153  074A' 3180' 2000' 3180'  	fcall	_strcpy
  8154  074D'                    l4181:
  8155                           
  8156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  8157  074D' 3000'              	movlw	(low (_dbuf| (0+512)))& (0+255)
  8158  074E' 0021               	movlb	1	; select bank1
  8159  074F' 0080'              	movwf	??_efgtoa^(0+128)
  8160  0750' 0800'              	movf	??_efgtoa^(0+128),w
  8161  0751' 0020               	movlb	0	; select bank0
  8162  0752' 0084'              	movwf	pad@buf
  8163  0753' 0021               	movlb	1	; select bank1
  8164  0754' 0800'              	movf	(efgtoa@w+1)^(0+128),w
  8165  0755' 0020               	movlb	0	; select bank0
  8166  0756' 0086'              	movwf	pad@p+1
  8167  0757' 0021               	movlb	1	; select bank1
  8168  0758' 0800'              	movf	efgtoa@w^(0+128),w
  8169  0759' 0020               	movlb	0	; select bank0
  8170  075A' 0085'              	movwf	pad@p
  8171  075B' 0021               	movlb	1	; select bank1
  8172  075C' 0800'              	movf	efgtoa@fp^(0+128),w
  8173  075D' 3180' 2000' 3180'  	fcall	_pad
  8174  0760' 0020               	movlb	0	; select bank0
  8175  0761' 0805'              	movf	?_pad+1,w
  8176  0762' 0021               	movlb	1	; select bank1
  8177  0763' 0080'              	movwf	(?_efgtoa+1)^(0+128)
  8178  0764' 0020               	movlb	0	; select bank0
  8179  0765' 0804'              	movf	?_pad,w
  8180  0766' 0021               	movlb	1	; select bank1
  8181  0767' 0080'              	movwf	?_efgtoa^(0+128)
  8182  0768'                    l967:
  8183  0768' 0008               	return
  8184  0769'                    __end_of_efgtoa:
  8185                           
  8186                           	psect	text6
  8187  0000'                    __ptext6:	
  8188 ;; *************** function _tolower *****************
  8189 ;; Defined at:
  8190 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  c               2    6[COMMON] int 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;		None
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  2    6[COMMON] int 
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8207 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;Total ram usage:        8 bytes
  8209 ;; Hardware stack levels used:    1
  8210 ;; Hardware stack levels required when called:    1
  8211 ;; This function calls:
  8212 ;;		_isupper
  8213 ;; This function is called by:
  8214 ;;		_efgtoa
  8215 ;;		_vfpfcnvrt
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           
  8220                           ;psect for function _tolower
  8221  0000'                    _tolower:
  8222  0000'                    l3771:	
  8223                           ;incstack = 0
  8224                           ; Regs used in _tolower: [wreg+status,2+status,0]
  8225                           
  8226  0000' 0806'              	movf	tolower@c,w
  8227  0001' 3EBF               	addlw	191
  8228  0002' 0088'              	movwf	??_tolower
  8229  0003' 30FF               	movlw	255
  8230  0004' 3D07'              	addwfc	tolower@c+1,w
  8231  0005' 0089'              	movwf	??_tolower+1
  8232  0006' 3000               	movlw	0
  8233  0007' 0209'              	subwf	??_tolower+1,w
  8234  0008' 301A               	movlw	26
  8235  0009' 1903               	skipnz
  8236  000A' 0208'              	subwf	??_tolower,w
  8237  000B' 1C03               	skipc
  8238  000C' 2800'              	goto	u5181
  8239  000D' 2800'              	goto	u5180
  8240  000E'                    u5181:
  8241  000E' 3001               	movlw	1
  8242  000F' 2800'              	goto	u5190
  8243  0010'                    u5180:
  8244  0010' 3000               	movlw	0
  8245  0011'                    u5190:
  8246  0011' 008A'              	movwf	??_tolower+2
  8247  0012' 018B'              	clrf	??_tolower+3
  8248  0013' 080A'              	movf	??_tolower+2,w
  8249  0014' 008C'              	movwf	_tolower$1171
  8250  0015' 080B'              	movf	??_tolower+3,w
  8251  0016' 008D'              	movwf	_tolower$1171+1
  8252  0017'                    l3775:
  8253  0017' 080C'              	movf	_tolower$1171,w
  8254  0018' 040D'              	iorwf	_tolower$1171+1,w
  8255  0019' 1903               	btfsc	3,2
  8256  001A' 2800'              	goto	u5201
  8257  001B' 2800'              	goto	u5200
  8258  001C'                    u5201:
  8259  001C' 2800'              	goto	l1217
  8260  001D'                    u5200:
  8261  001D'                    l3777:
  8262  001D' 3020               	movlw	32
  8263  001E' 0406'              	iorwf	tolower@c,w
  8264  001F' 0086'              	movwf	?_tolower
  8265  0020' 3000               	movlw	0
  8266  0021' 0407'              	iorwf	tolower@c+1,w
  8267  0022' 0087'              	movwf	?_tolower+1
  8268  0023' 2800'              	goto	l1222
  8269  0024'                    l1217:
  8270  0024'                    l1222:
  8271  0024' 0008               	return
  8272  0025'                    __end_of_tolower:
  8273                           
  8274                           	psect	text7
  8275  0000'                    __ptext7:	
  8276 ;; *************** function _isupper *****************
  8277 ;; Defined at:
  8278 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  c               2    0[COMMON] int 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  2    0[COMMON] int 
  8285 ;; Registers used:
  8286 ;;		wreg, status,2, status,0
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;Total ram usage:        6 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; This function calls:
  8299 ;;		Nothing
  8300 ;; This function is called by:
  8301 ;;		_efgtoa
  8302 ;;		_vfpfcnvrt
  8303 ;;		_tolower
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           
  8308                           ;psect for function _isupper
  8309  0000'                    _isupper:
  8310  0000'                    l3187:	
  8311                           ;incstack = 0
  8312                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8313                           
  8314  0000' 0800'              	movf	isupper@c,w
  8315  0001' 3EBF               	addlw	191
  8316  0002' 0082'              	movwf	??_isupper
  8317  0003' 30FF               	movlw	255
  8318  0004' 3D01'              	addwfc	isupper@c+1,w
  8319  0005' 0083'              	movwf	??_isupper+1
  8320  0006' 3000               	movlw	0
  8321  0007' 0203'              	subwf	??_isupper+1,w
  8322  0008' 301A               	movlw	26
  8323  0009' 1903               	skipnz
  8324  000A' 0202'              	subwf	??_isupper,w
  8325  000B' 1C03               	skipc
  8326  000C' 2800'              	goto	u3841
  8327  000D' 2800'              	goto	u3840
  8328  000E'                    u3841:
  8329  000E' 3001               	movlw	1
  8330  000F' 2800'              	goto	u3850
  8331  0010'                    u3840:
  8332  0010' 3000               	movlw	0
  8333  0011'                    u3850:
  8334  0011' 0084'              	movwf	??_isupper+2
  8335  0012' 0185'              	clrf	??_isupper+3
  8336  0013' 0804'              	movf	??_isupper+2,w
  8337  0014' 0080'              	movwf	?_isupper
  8338  0015' 0805'              	movf	??_isupper+3,w
  8339  0016' 0081'              	movwf	?_isupper+1
  8340  0017'                    l1165:
  8341  0017' 0008               	return
  8342  0018'                    __end_of_isupper:
  8343                           
  8344                           	psect	text8
  8345  0000'                    __ptext8:	
  8346 ;; *************** function _strcpy *****************
  8347 ;; Defined at:
  8348 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  dest            1    wreg     PTR unsigned char 
  8351 ;;		 -> dbuf(80), 
  8352 ;;  src             2    0[COMMON] PTR const unsigned char 
  8353 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  8354 ;;		 -> dbuf(80), 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  dest            1    7[COMMON] PTR unsigned char 
  8357 ;;		 -> dbuf(80), 
  8358 ;;  s               2    4[COMMON] PTR const unsigned char 
  8359 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  8360 ;;		 -> dbuf(80), 
  8361 ;;  d               1    6[COMMON] PTR unsigned char 
  8362 ;;		 -> dbuf(80), 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      PTR unsigned char 
  8365 ;; Registers used:
  8366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;Total ram usage:        8 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; This function calls:
  8379 ;;		Nothing
  8380 ;; This function is called by:
  8381 ;;		_efgtoa
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           
  8386                           ;psect for function _strcpy
  8387  0000'                    _strcpy:
  8388                           
  8389                           ;incstack = 0
  8390                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8391                           ;strcpy@dest stored from wreg
  8392  0000' 0087'              	movwf	strcpy@dest
  8393  0001'                    l3767:
  8394  0001' 0801'              	movf	strcpy@src+1,w
  8395  0002' 0085'              	movwf	strcpy@s+1
  8396  0003' 0800'              	movf	strcpy@src,w
  8397  0004' 0084'              	movwf	strcpy@s
  8398  0005' 0807'              	movf	strcpy@dest,w
  8399  0006' 0082'              	movwf	??_strcpy
  8400  0007' 0802'              	movf	??_strcpy,w
  8401  0008' 0086'              	movwf	strcpy@d
  8402  0009'                    l3769:
  8403  0009' 0806'              	movf	strcpy@d,w
  8404  000A' 0086               	movwf	6
  8405  000B' 3002               	movlw	2	; select bank4/5
  8406  000C' 0087               	movwf	7
  8407  000D' 0A86'              	incf	strcpy@d,f
  8408  000E' 0805'              	movf	strcpy@s+1,w
  8409  000F' 0083'              	movwf	??_strcpy+1
  8410  0010' 0804'              	movf	strcpy@s,w
  8411  0011' 0082'              	movwf	??_strcpy
  8412  0012' 0A84'              	incf	strcpy@s,f
  8413  0013' 1903               	skipnz
  8414  0014' 0A85'              	incf	strcpy@s+1,f
  8415  0015' 0802'              	movf	??_strcpy,w
  8416  0016' 0084               	movwf	4
  8417  0017' 0803'              	movf	??_strcpy+1,w
  8418  0018' 0085               	movwf	5
  8419  0019' 0800               	movf	0,w	;code access
  8420  001A' 3FC0               	movwi [0]fsr1
  8421  001B' 0889               	movf	9,f
  8422  001C' 1D03               	btfss	3,2
  8423  001D' 2800'              	goto	u5171
  8424  001E' 2800'              	goto	u5170
  8425  001F'                    u5171:
  8426  001F' 2800'              	goto	l3769
  8427  0020'                    u5170:
  8428  0020'                    l1197:
  8429  0020' 0008               	return
  8430  0021'                    __end_of_strcpy:
  8431                           
  8432                           	psect	text9
  8433  0000'                    __ptext9:	
  8434 ;; *************** function _floorf *****************
  8435 ;; Defined at:
  8436 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  x               4   42[BANK0 ] float 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  u               4   58[BANK0 ] struct .
  8441 ;;  m               4   52[BANK0 ] unsigned long 
  8442 ;;  e               2   56[BANK0 ] int 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  4   42[BANK0 ] float 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;Total ram usage:       20 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; This function calls:
  8459 ;;		Nothing
  8460 ;; This function is called by:
  8461 ;;		_efgtoa
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _floorf
  8467  0000'                    _floorf:
  8468  0000'                    l3781:	
  8469                           ;incstack = 0
  8470                           ; Regs used in _floorf: [wreg+status,2+status,0]
  8471                           
  8472  0000' 0023               	movlb	3	; select bank3
  8473  0001' 0800'              	movf	(floorf@F527+3)^(0+384),w
  8474  0002' 0020               	movlb	0	; select bank0
  8475  0003' 00BD'              	movwf	floorf@u+3
  8476  0004' 0023               	movlb	3	; select bank3
  8477  0005' 0800'              	movf	(floorf@F527+2)^(0+384),w
  8478  0006' 0020               	movlb	0	; select bank0
  8479  0007' 00BC'              	movwf	floorf@u+2
  8480  0008' 0023               	movlb	3	; select bank3
  8481  0009' 0800'              	movf	(floorf@F527+1)^(0+384),w
  8482  000A' 0020               	movlb	0	; select bank0
  8483  000B' 00BB'              	movwf	floorf@u+1
  8484  000C' 0023               	movlb	3	; select bank3
  8485  000D' 0800'              	movf	floorf@F527^(0+384),w
  8486  000E' 0020               	movlb	0	; select bank0
  8487  000F' 00BA'              	movwf	floorf@u
  8488  0010' 082D'              	movf	floorf@x+3,w
  8489  0011' 00BD'              	movwf	floorf@u+3
  8490  0012' 082C'              	movf	floorf@x+2,w
  8491  0013' 00BC'              	movwf	floorf@u+2
  8492  0014' 082B'              	movf	floorf@x+1,w
  8493  0015' 00BB'              	movwf	floorf@u+1
  8494  0016' 082A'              	movf	floorf@x,w
  8495  0017' 00BA'              	movwf	floorf@u
  8496  0018'                    l3783:
  8497  0018' 083A'              	movf	floorf@u,w
  8498  0019' 00AE'              	movwf	??_floorf
  8499  001A' 083B'              	movf	floorf@u+1,w
  8500  001B' 00AF'              	movwf	??_floorf+1
  8501  001C' 083C'              	movf	floorf@u+2,w
  8502  001D' 00B0'              	movwf	??_floorf+2
  8503  001E' 083D'              	movf	floorf@u+3,w
  8504  001F' 00B1'              	movwf	??_floorf+3
  8505  0020' 3017               	movlw	23
  8506  0021'                    u5215:
  8507  0021' 36B1'              	lsrf	??_floorf+3,f
  8508  0022' 0CB0'              	rrf	??_floorf+2,f
  8509  0023' 0CAF'              	rrf	??_floorf+1,f
  8510  0024' 0CAE'              	rrf	??_floorf,f
  8511  0025'                    u5210:
  8512  0025' 0B89               	decfsz	9,f
  8513  0026' 2800'              	goto	u5215
  8514  0027' 30FF               	movlw	255
  8515  0028' 052E'              	andwf	??_floorf,w
  8516  0029' 00B2'              	movwf	??_floorf+4
  8517  002A' 3000               	movlw	0
  8518  002B' 052F'              	andwf	??_floorf+1,w
  8519  002C' 00B3'              	movwf	??_floorf+5
  8520  002D' 0832'              	movf	??_floorf+4,w
  8521  002E' 3E81               	addlw	129
  8522  002F' 00B8'              	movwf	floorf@e
  8523  0030' 30FF               	movlw	255
  8524  0031' 3D33'              	addwfc	??_floorf+5,w
  8525  0032' 00B9'              	movwf	floorf@e+1
  8526  0033'                    l3785:
  8527  0033' 0839'              	movf	floorf@e+1,w
  8528  0034' 3A80               	xorlw	128
  8529  0035' 00AE'              	movwf	??_floorf
  8530  0036' 3080               	movlw	128
  8531  0037' 022E'              	subwf	??_floorf,w
  8532  0038' 1D03               	skipz
  8533  0039' 2800'              	goto	u5225
  8534  003A' 3017               	movlw	23
  8535  003B' 0238'              	subwf	floorf@e,w
  8536  003C'                    u5225:
  8537  003C' 1C03               	skipc
  8538  003D' 2800'              	goto	u5221
  8539  003E' 2800'              	goto	u5220
  8540  003F'                    u5221:
  8541  003F' 2800'              	goto	l1140
  8542  0040'                    u5220:
  8543  0040'                    l3787:
  8544  0040' 2800'              	goto	l1141
  8545  0041'                    l1140:
  8546  0041' 0020               	movlb	0	; select bank0
  8547  0042' 1BB9'              	btfsc	floorf@e+1,7
  8548  0043' 2800'              	goto	u5231
  8549  0044' 2800'              	goto	u5230
  8550  0045'                    u5231:
  8551  0045' 2800'              	goto	l3801
  8552  0046'                    u5230:
  8553  0046'                    l3789:
  8554  0046' 30FF               	movlw	255
  8555  0047' 00AE'              	movwf	??_floorf
  8556  0048' 30FF               	movlw	255
  8557  0049' 00AF'              	movwf	??_floorf+1
  8558  004A' 307F               	movlw	127
  8559  004B' 00B0'              	movwf	??_floorf+2
  8560  004C' 3000               	movlw	0
  8561  004D' 00B1'              	movwf	??_floorf+3
  8562  004E' 0A38'              	incf	floorf@e,w
  8563  004F' 2800'              	goto	u5240
  8564  0050'                    u5245:
  8565  0050' 37B1'              	asrf	??_floorf+3,f
  8566  0051' 0CB0'              	rrf	??_floorf+2,f
  8567  0052' 0CAF'              	rrf	??_floorf+1,f
  8568  0053' 0CAE'              	rrf	??_floorf,f
  8569  0054'                    u5240:
  8570  0054' 0B89               	decfsz	9,f
  8571  0055' 2800'              	goto	u5245
  8572  0056' 0831'              	movf	??_floorf+3,w
  8573  0057' 00B7'              	movwf	floorf@m+3
  8574  0058' 0830'              	movf	??_floorf+2,w
  8575  0059' 00B6'              	movwf	floorf@m+2
  8576  005A' 082F'              	movf	??_floorf+1,w
  8577  005B' 00B5'              	movwf	floorf@m+1
  8578  005C' 082E'              	movf	??_floorf,w
  8579  005D' 00B4'              	movwf	floorf@m
  8580  005E'                    l3791:
  8581  005E' 083A'              	movf	floorf@u,w
  8582  005F' 0534'              	andwf	floorf@m,w
  8583  0060' 00AE'              	movwf	??_floorf
  8584  0061' 083B'              	movf	floorf@u+1,w
  8585  0062' 0535'              	andwf	floorf@m+1,w
  8586  0063' 00AF'              	movwf	??_floorf+1
  8587  0064' 083C'              	movf	floorf@u+2,w
  8588  0065' 0536'              	andwf	floorf@m+2,w
  8589  0066' 00B0'              	movwf	??_floorf+2
  8590  0067' 083D'              	movf	floorf@u+3,w
  8591  0068' 0537'              	andwf	floorf@m+3,w
  8592  0069' 00B1'              	movwf	??_floorf+3
  8593  006A' 0831'              	movf	??_floorf+3,w
  8594  006B' 0430'              	iorwf	??_floorf+2,w
  8595  006C' 042F'              	iorwf	??_floorf+1,w
  8596  006D' 042E'              	iorwf	??_floorf,w
  8597  006E' 1D03               	skipz
  8598  006F' 2800'              	goto	u5251
  8599  0070' 2800'              	goto	u5250
  8600  0071'                    u5251:
  8601  0071' 2800'              	goto	l3795
  8602  0072'                    u5250:
  8603  0072' 2800'              	goto	l3787
  8604  0073'                    l3795:
  8605  0073' 083A'              	movf	floorf@u,w
  8606  0074' 00AE'              	movwf	??_floorf
  8607  0075' 083B'              	movf	floorf@u+1,w
  8608  0076' 00AF'              	movwf	??_floorf+1
  8609  0077' 083C'              	movf	floorf@u+2,w
  8610  0078' 00B0'              	movwf	??_floorf+2
  8611  0079' 083D'              	movf	floorf@u+3,w
  8612  007A' 00B1'              	movwf	??_floorf+3
  8613  007B' 301F               	movlw	31
  8614  007C'                    u5265:
  8615  007C' 36B1'              	lsrf	??_floorf+3,f
  8616  007D' 0CB0'              	rrf	??_floorf+2,f
  8617  007E' 0CAF'              	rrf	??_floorf+1,f
  8618  007F' 0CAE'              	rrf	??_floorf,f
  8619  0080'                    u5260:
  8620  0080' 0B89               	decfsz	9,f
  8621  0081' 2800'              	goto	u5265
  8622  0082' 0831'              	movf	??_floorf+3,w
  8623  0083' 0430'              	iorwf	??_floorf+2,w
  8624  0084' 042F'              	iorwf	??_floorf+1,w
  8625  0085' 042E'              	iorwf	??_floorf,w
  8626  0086' 1903               	skipnz
  8627  0087' 2800'              	goto	u5271
  8628  0088' 2800'              	goto	u5270
  8629  0089'                    u5271:
  8630  0089' 2800'              	goto	l3799
  8631  008A'                    u5270:
  8632  008A'                    l3797:
  8633  008A' 0834'              	movf	floorf@m,w
  8634  008B' 07BA'              	addwf	floorf@u,f
  8635  008C' 0835'              	movf	floorf@m+1,w
  8636  008D' 3DBB'              	addwfc	floorf@u+1,f
  8637  008E' 0836'              	movf	floorf@m+2,w
  8638  008F' 3DBC'              	addwfc	floorf@u+2,f
  8639  0090' 0837'              	movf	floorf@m+3,w
  8640  0091' 3DBD'              	addwfc	floorf@u+3,f
  8641  0092'                    l3799:
  8642  0092' 0934'              	comf	floorf@m,w
  8643  0093' 00AE'              	movwf	??_floorf
  8644  0094' 0935'              	comf	floorf@m+1,w
  8645  0095' 00AF'              	movwf	??_floorf+1
  8646  0096' 0936'              	comf	floorf@m+2,w
  8647  0097' 00B0'              	movwf	??_floorf+2
  8648  0098' 0937'              	comf	floorf@m+3,w
  8649  0099' 00B1'              	movwf	??_floorf+3
  8650  009A' 082E'              	movf	??_floorf,w
  8651  009B' 05BA'              	andwf	floorf@u,f
  8652  009C' 082F'              	movf	??_floorf+1,w
  8653  009D' 05BB'              	andwf	floorf@u+1,f
  8654  009E' 0830'              	movf	??_floorf+2,w
  8655  009F' 05BC'              	andwf	floorf@u+2,f
  8656  00A0' 0831'              	movf	??_floorf+3,w
  8657  00A1' 05BD'              	andwf	floorf@u+3,f
  8658  00A2' 2800'              	goto	l1145
  8659  00A3'                    l3801:
  8660  00A3' 083A'              	movf	floorf@u,w
  8661  00A4' 00AE'              	movwf	??_floorf
  8662  00A5' 083B'              	movf	floorf@u+1,w
  8663  00A6' 00AF'              	movwf	??_floorf+1
  8664  00A7' 083C'              	movf	floorf@u+2,w
  8665  00A8' 00B0'              	movwf	??_floorf+2
  8666  00A9' 083D'              	movf	floorf@u+3,w
  8667  00AA' 00B1'              	movwf	??_floorf+3
  8668  00AB' 301F               	movlw	31
  8669  00AC'                    u5285:
  8670  00AC' 36B1'              	lsrf	??_floorf+3,f
  8671  00AD' 0CB0'              	rrf	??_floorf+2,f
  8672  00AE' 0CAF'              	rrf	??_floorf+1,f
  8673  00AF' 0CAE'              	rrf	??_floorf,f
  8674  00B0'                    u5280:
  8675  00B0' 0B89               	decfsz	9,f
  8676  00B1' 2800'              	goto	u5285
  8677  00B2' 0831'              	movf	??_floorf+3,w
  8678  00B3' 0430'              	iorwf	??_floorf+2,w
  8679  00B4' 042F'              	iorwf	??_floorf+1,w
  8680  00B5' 042E'              	iorwf	??_floorf,w
  8681  00B6' 1D03               	skipz
  8682  00B7' 2800'              	goto	u5291
  8683  00B8' 2800'              	goto	u5290
  8684  00B9'                    u5291:
  8685  00B9' 2800'              	goto	l3805
  8686  00BA'                    u5290:
  8687  00BA'                    l3803:
  8688  00BA' 3000               	movlw	0
  8689  00BB' 00BD'              	movwf	floorf@u+3
  8690  00BC' 3000               	movlw	0
  8691  00BD' 00BC'              	movwf	floorf@u+2
  8692  00BE' 3000               	movlw	0
  8693  00BF' 00BB'              	movwf	floorf@u+1
  8694  00C0' 3000               	movlw	0
  8695  00C1' 00BA'              	movwf	floorf@u
  8696  00C2' 2800'              	goto	l1145
  8697  00C3'                    l3805:
  8698  00C3' 083A'              	movf	floorf@u,w
  8699  00C4' 00AE'              	movwf	??_floorf
  8700  00C5' 083B'              	movf	floorf@u+1,w
  8701  00C6' 00AF'              	movwf	??_floorf+1
  8702  00C7' 083C'              	movf	floorf@u+2,w
  8703  00C8' 00B0'              	movwf	??_floorf+2
  8704  00C9' 083D'              	movf	floorf@u+3,w
  8705  00CA' 00B1'              	movwf	??_floorf+3
  8706  00CB' 3001               	movlw	1
  8707  00CC'                    u5305:
  8708  00CC' 35AE'              	lslf	??_floorf,f
  8709  00CD' 0DAF'              	rlf	??_floorf+1,f
  8710  00CE' 0DB0'              	rlf	??_floorf+2,f
  8711  00CF' 0DB1'              	rlf	??_floorf+3,f
  8712  00D0'                    u5300:
  8713  00D0' 0B89               	decfsz	9,f
  8714  00D1' 2800'              	goto	u5305
  8715  00D2' 0831'              	movf	??_floorf+3,w
  8716  00D3' 0430'              	iorwf	??_floorf+2,w
  8717  00D4' 042F'              	iorwf	??_floorf+1,w
  8718  00D5' 042E'              	iorwf	??_floorf,w
  8719  00D6' 1903               	skipnz
  8720  00D7' 2800'              	goto	u5311
  8721  00D8' 2800'              	goto	u5310
  8722  00D9'                    u5311:
  8723  00D9' 2800'              	goto	l1145
  8724  00DA'                    u5310:
  8725  00DA'                    l3807:
  8726  00DA' 30BF               	movlw	191
  8727  00DB' 00BD'              	movwf	floorf@u+3
  8728  00DC' 3080               	movlw	128
  8729  00DD' 00BC'              	movwf	floorf@u+2
  8730  00DE' 3000               	movlw	0
  8731  00DF' 00BB'              	movwf	floorf@u+1
  8732  00E0' 3000               	movlw	0
  8733  00E1' 00BA'              	movwf	floorf@u
  8734  00E2'                    l1145:
  8735  00E2' 083D'              	movf	floorf@u+3,w
  8736  00E3' 00AD'              	movwf	?_floorf+3
  8737  00E4' 083C'              	movf	floorf@u+2,w
  8738  00E5' 00AC'              	movwf	?_floorf+2
  8739  00E6' 083B'              	movf	floorf@u+1,w
  8740  00E7' 00AB'              	movwf	?_floorf+1
  8741  00E8' 083A'              	movf	floorf@u,w
  8742  00E9' 00AA'              	movwf	?_floorf
  8743  00EA'                    l1141:
  8744  00EA' 0008               	return
  8745  00EB'                    __end_of_floorf:
  8746                           
  8747                           	psect	text10
  8748  0000'                    __ptext10:	
  8749 ;; *************** function ___fpclassifyf *****************
  8750 ;; Defined at:
  8751 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  x               4    0[COMMON] float 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  u               4    2[BANK0 ] struct .
  8756 ;;  e               2    0[BANK0 ] int 
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  2    0[COMMON] int 
  8759 ;; Registers used:
  8760 ;;		wreg, status,2, status,0
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;Total ram usage:       16 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; This function calls:
  8773 ;;		Nothing
  8774 ;; This function is called by:
  8775 ;;		_efgtoa
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           
  8780                           ;psect for function ___fpclassifyf
  8781  0000'                    ___fpclassifyf:
  8782  0000'                    l3743:	
  8783                           ;incstack = 0
  8784                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  8785                           
  8786  0000' 0023               	movlb	3	; select bank3
  8787  0001' 0800'              	movf	(___fpclassifyf@F465+3)^(0+384),w
  8788  0002' 0020               	movlb	0	; select bank0
  8789  0003' 0085'              	movwf	___fpclassifyf@u+3
  8790  0004' 0023               	movlb	3	; select bank3
  8791  0005' 0800'              	movf	(___fpclassifyf@F465+2)^(0+384),w
  8792  0006' 0020               	movlb	0	; select bank0
  8793  0007' 0084'              	movwf	___fpclassifyf@u+2
  8794  0008' 0023               	movlb	3	; select bank3
  8795  0009' 0800'              	movf	(___fpclassifyf@F465+1)^(0+384),w
  8796  000A' 0020               	movlb	0	; select bank0
  8797  000B' 0083'              	movwf	___fpclassifyf@u+1
  8798  000C' 0023               	movlb	3	; select bank3
  8799  000D' 0800'              	movf	___fpclassifyf@F465^(0+384),w
  8800  000E' 0020               	movlb	0	; select bank0
  8801  000F' 0082'              	movwf	___fpclassifyf@u
  8802  0010' 0803'              	movf	___fpclassifyf@x+3,w
  8803  0011' 0085'              	movwf	___fpclassifyf@u+3
  8804  0012' 0802'              	movf	___fpclassifyf@x+2,w
  8805  0013' 0084'              	movwf	___fpclassifyf@u+2
  8806  0014' 0801'              	movf	___fpclassifyf@x+1,w
  8807  0015' 0083'              	movwf	___fpclassifyf@u+1
  8808  0016' 0800'              	movf	___fpclassifyf@x,w
  8809  0017' 0082'              	movwf	___fpclassifyf@u
  8810  0018'                    l3745:
  8811  0018' 0802'              	movf	___fpclassifyf@u,w
  8812  0019' 0084'              	movwf	??___fpclassifyf
  8813  001A' 0803'              	movf	___fpclassifyf@u+1,w
  8814  001B' 0085'              	movwf	??___fpclassifyf+1
  8815  001C' 0804'              	movf	___fpclassifyf@u+2,w
  8816  001D' 0086'              	movwf	??___fpclassifyf+2
  8817  001E' 0805'              	movf	___fpclassifyf@u+3,w
  8818  001F' 0087'              	movwf	??___fpclassifyf+3
  8819  0020' 3017               	movlw	23
  8820  0021'                    u5095:
  8821  0021' 3687'              	lsrf	??___fpclassifyf+3,f
  8822  0022' 0C86'              	rrf	??___fpclassifyf+2,f
  8823  0023' 0C85'              	rrf	??___fpclassifyf+1,f
  8824  0024' 0C84'              	rrf	??___fpclassifyf,f
  8825  0025'                    u5090:
  8826  0025' 0B89               	decfsz	9,f
  8827  0026' 2800'              	goto	u5095
  8828  0027' 30FF               	movlw	255
  8829  0028' 0504'              	andwf	??___fpclassifyf,w
  8830  0029' 0080'              	movwf	___fpclassifyf@e
  8831  002A' 3000               	movlw	0
  8832  002B' 0505'              	andwf	??___fpclassifyf+1,w
  8833  002C' 0081'              	movwf	___fpclassifyf@e+1
  8834  002D'                    l3747:
  8835  002D' 0800'              	movf	___fpclassifyf@e,w
  8836  002E' 0401'              	iorwf	___fpclassifyf@e+1,w
  8837  002F' 1D03               	btfss	3,2
  8838  0030' 2800'              	goto	u5101
  8839  0031' 2800'              	goto	u5100
  8840  0032'                    u5101:
  8841  0032' 2800'              	goto	l3757
  8842  0033'                    u5100:
  8843  0033'                    l3749:
  8844  0033' 0802'              	movf	___fpclassifyf@u,w
  8845  0034' 0084'              	movwf	??___fpclassifyf
  8846  0035' 0803'              	movf	___fpclassifyf@u+1,w
  8847  0036' 0085'              	movwf	??___fpclassifyf+1
  8848  0037' 0804'              	movf	___fpclassifyf@u+2,w
  8849  0038' 0086'              	movwf	??___fpclassifyf+2
  8850  0039' 0805'              	movf	___fpclassifyf@u+3,w
  8851  003A' 0087'              	movwf	??___fpclassifyf+3
  8852  003B' 3001               	movlw	1
  8853  003C'                    u5115:
  8854  003C' 3584'              	lslf	??___fpclassifyf,f
  8855  003D' 0D85'              	rlf	??___fpclassifyf+1,f
  8856  003E' 0D86'              	rlf	??___fpclassifyf+2,f
  8857  003F' 0D87'              	rlf	??___fpclassifyf+3,f
  8858  0040'                    u5110:
  8859  0040' 0B89               	decfsz	9,f
  8860  0041' 2800'              	goto	u5115
  8861  0042' 0807'              	movf	??___fpclassifyf+3,w
  8862  0043' 0406'              	iorwf	??___fpclassifyf+2,w
  8863  0044' 0405'              	iorwf	??___fpclassifyf+1,w
  8864  0045' 0404'              	iorwf	??___fpclassifyf,w
  8865  0046' 1D03               	skipz
  8866  0047' 2800'              	goto	u5121
  8867  0048' 2800'              	goto	u5120
  8868  0049'                    u5121:
  8869  0049' 2800'              	goto	l3753
  8870  004A'                    u5120:
  8871  004A'                    l3751:
  8872  004A' 3002               	movlw	2
  8873  004B' 0080'              	movwf	?___fpclassifyf
  8874  004C' 3000               	movlw	0
  8875  004D' 0081'              	movwf	?___fpclassifyf+1
  8876  004E' 2800'              	goto	l1096
  8877  004F'                    l3753:
  8878  004F' 3003               	movlw	3
  8879  0050' 0080'              	movwf	?___fpclassifyf
  8880  0051' 3000               	movlw	0
  8881  0052' 0081'              	movwf	?___fpclassifyf+1
  8882  0053' 2800'              	goto	l1096
  8883  0054'                    l3757:
  8884  0054' 0A00'              	incf	___fpclassifyf@e,w
  8885  0055' 0401'              	iorwf	___fpclassifyf@e+1,w
  8886  0056' 1D03               	btfss	3,2
  8887  0057' 2800'              	goto	u5131
  8888  0058' 2800'              	goto	u5130
  8889  0059'                    u5131:
  8890  0059' 2800'              	goto	l3763
  8891  005A'                    u5130:
  8892  005A'                    l3759:
  8893  005A' 0802'              	movf	___fpclassifyf@u,w
  8894  005B' 0084'              	movwf	??___fpclassifyf
  8895  005C' 0803'              	movf	___fpclassifyf@u+1,w
  8896  005D' 0085'              	movwf	??___fpclassifyf+1
  8897  005E' 0804'              	movf	___fpclassifyf@u+2,w
  8898  005F' 0086'              	movwf	??___fpclassifyf+2
  8899  0060' 0805'              	movf	___fpclassifyf@u+3,w
  8900  0061' 0087'              	movwf	??___fpclassifyf+3
  8901  0062' 3009               	movlw	9
  8902  0063'                    u5145:
  8903  0063' 3584'              	lslf	??___fpclassifyf,f
  8904  0064' 0D85'              	rlf	??___fpclassifyf+1,f
  8905  0065' 0D86'              	rlf	??___fpclassifyf+2,f
  8906  0066' 0D87'              	rlf	??___fpclassifyf+3,f
  8907  0067'                    u5140:
  8908  0067' 0B89               	decfsz	9,f
  8909  0068' 2800'              	goto	u5145
  8910  0069' 0807'              	movf	??___fpclassifyf+3,w
  8911  006A' 0406'              	iorwf	??___fpclassifyf+2,w
  8912  006B' 0405'              	iorwf	??___fpclassifyf+1,w
  8913  006C' 0404'              	iorwf	??___fpclassifyf,w
  8914  006D' 1903               	skipnz
  8915  006E' 2800'              	goto	u5151
  8916  006F' 2800'              	goto	u5150
  8917  0070'                    u5151:
  8918  0070' 3001               	movlw	1
  8919  0071' 2800'              	goto	u5160
  8920  0072'                    u5150:
  8921  0072' 3000               	movlw	0
  8922  0073'                    u5160:
  8923  0073' 0088'              	movwf	??___fpclassifyf+4
  8924  0074' 0189'              	clrf	??___fpclassifyf+5
  8925  0075' 0808'              	movf	??___fpclassifyf+4,w
  8926  0076' 0080'              	movwf	?___fpclassifyf
  8927  0077' 0809'              	movf	??___fpclassifyf+5,w
  8928  0078' 0081'              	movwf	?___fpclassifyf+1
  8929  0079' 2800'              	goto	l1096
  8930  007A'                    l3763:
  8931  007A' 3004               	movlw	4
  8932  007B' 0080'              	movwf	?___fpclassifyf
  8933  007C' 3000               	movlw	0
  8934  007D' 0081'              	movwf	?___fpclassifyf+1
  8935  007E'                    l1096:
  8936  007E' 0008               	return
  8937  007F'                    __end_of___fpclassifyf:
  8938                           
  8939                           	psect	text11
  8940  0000'                    __ptext11:	
  8941 ;; *************** function ___fltol *****************
  8942 ;; Defined at:
  8943 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  f1              4   42[BANK0 ] int 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  exp1            1   13[COMMON] unsigned char 
  8948 ;;  sign1           1   12[COMMON] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  4   42[BANK0 ] long 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8958 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;Total ram usage:       11 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; This function calls:
  8965 ;;		Nothing
  8966 ;; This function is called by:
  8967 ;;		_main
  8968 ;;		_efgtoa
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function ___fltol
  8974  0000'                    ___fltol:
  8975  0000'                    l3395:	
  8976                           ;incstack = 0
  8977                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8978                           
  8979  0000' 1003               	clrc
  8980  0001' 0020               	movlb	0	; select bank0
  8981  0002' 0D2C'              	rlf	___fltol@f1+2,w
  8982  0003' 0D2D'              	rlf	___fltol@f1+3,w
  8983  0004' 00AE'              	movwf	??___fltol
  8984  0005' 082E'              	movf	??___fltol,w
  8985  0006' 008D'              	movwf	___fltol@exp1
  8986  0007' 080D'              	movf	___fltol@exp1,w
  8987  0008' 1D03               	btfss	3,2
  8988  0009' 2800'              	goto	u4391
  8989  000A' 2800'              	goto	u4390
  8990  000B'                    u4391:
  8991  000B' 2800'              	goto	l3401
  8992  000C'                    u4390:
  8993  000C'                    l3397:
  8994  000C' 3000               	movlw	0
  8995  000D' 00AD'              	movwf	?___fltol+3
  8996  000E' 3000               	movlw	0
  8997  000F' 00AC'              	movwf	?___fltol+2
  8998  0010' 3000               	movlw	0
  8999  0011' 00AB'              	movwf	?___fltol+1
  9000  0012' 3000               	movlw	0
  9001  0013' 00AA'              	movwf	?___fltol
  9002  0014' 2800'              	goto	l606
  9003  0015'                    l3401:
  9004  0015' 082A'              	movf	___fltol@f1,w
  9005  0016' 00AE'              	movwf	??___fltol
  9006  0017' 082B'              	movf	___fltol@f1+1,w
  9007  0018' 00AF'              	movwf	??___fltol+1
  9008  0019' 082C'              	movf	___fltol@f1+2,w
  9009  001A' 00B0'              	movwf	??___fltol+2
  9010  001B' 082D'              	movf	___fltol@f1+3,w
  9011  001C' 00B1'              	movwf	??___fltol+3
  9012  001D' 301F               	movlw	31
  9013  001E'                    u4405:
  9014  001E' 36B1'              	lsrf	??___fltol+3,f
  9015  001F' 0CB0'              	rrf	??___fltol+2,f
  9016  0020' 0CAF'              	rrf	??___fltol+1,f
  9017  0021' 0CAE'              	rrf	??___fltol,f
  9018  0022'                    u4400:
  9019  0022' 0B89               	decfsz	9,f
  9020  0023' 2800'              	goto	u4405
  9021  0024' 082E'              	movf	??___fltol,w
  9022  0025' 00B2'              	movwf	??___fltol+4
  9023  0026' 0832'              	movf	??___fltol+4,w
  9024  0027' 008C'              	movwf	___fltol@sign1
  9025  0028'                    l3403:
  9026  0028' 17AC'              	bsf	___fltol@f1+2,7
  9027  0029'                    l3405:
  9028  0029' 30FF               	movlw	255
  9029  002A' 05AA'              	andwf	___fltol@f1,f
  9030  002B' 30FF               	movlw	255
  9031  002C' 05AB'              	andwf	___fltol@f1+1,f
  9032  002D' 30FF               	movlw	255
  9033  002E' 05AC'              	andwf	___fltol@f1+2,f
  9034  002F' 3000               	movlw	0
  9035  0030' 05AD'              	andwf	___fltol@f1+3,f
  9036  0031'                    l3407:
  9037  0031' 3096               	movlw	150
  9038  0032' 028D'              	subwf	___fltol@exp1,f
  9039  0033'                    l3409:
  9040  0033' 1F8D'              	btfss	___fltol@exp1,7
  9041  0034' 2800'              	goto	u4411
  9042  0035' 2800'              	goto	u4410
  9043  0036'                    u4411:
  9044  0036' 2800'              	goto	l3419
  9045  0037'                    u4410:
  9046  0037'                    l3411:
  9047  0037' 080D'              	movf	___fltol@exp1,w
  9048  0038' 3A80               	xorlw	128
  9049  0039' 3E97               	addlw	151
  9050  003A' 1803               	skipnc
  9051  003B' 2800'              	goto	u4421
  9052  003C' 2800'              	goto	u4420
  9053  003D'                    u4421:
  9054  003D' 2800'              	goto	l3417
  9055  003E'                    u4420:
  9056  003E' 2800'              	goto	l3397
  9057  003F'                    l3417:
  9058  003F' 3001               	movlw	1
  9059  0040'                    u4435:
  9060  0040' 36AD'              	lsrf	___fltol@f1+3,f
  9061  0041' 0CAC'              	rrf	___fltol@f1+2,f
  9062  0042' 0CAB'              	rrf	___fltol@f1+1,f
  9063  0043' 0CAA'              	rrf	___fltol@f1,f
  9064  0044' 0B89               	decfsz	9,f
  9065  0045' 2800'              	goto	u4435
  9066  0046' 3001               	movlw	1
  9067  0047' 00AE'              	movwf	??___fltol
  9068  0048' 082E'              	movf	??___fltol,w
  9069  0049' 078D'              	addwf	___fltol@exp1,f
  9070  004A' 1D03               	btfss	3,2
  9071  004B' 2800'              	goto	u4441
  9072  004C' 2800'              	goto	u4440
  9073  004D'                    u4441:
  9074  004D' 2800'              	goto	l3417
  9075  004E'                    u4440:
  9076  004E' 2800'              	goto	l3427
  9077  004F'                    l3419:
  9078  004F' 3020               	movlw	32
  9079  0050' 020D'              	subwf	___fltol@exp1,w
  9080  0051' 1C03               	skipc
  9081  0052' 2800'              	goto	u4451
  9082  0053' 2800'              	goto	u4450
  9083  0054'                    u4451:
  9084  0054' 2800'              	goto	l613
  9085  0055'                    u4450:
  9086  0055' 2800'              	goto	l3397
  9087  0056'                    l3425:
  9088  0056' 3001               	movlw	1
  9089  0057'                    u4465:
  9090  0057' 35AA'              	lslf	___fltol@f1,f
  9091  0058' 0DAB'              	rlf	___fltol@f1+1,f
  9092  0059' 0DAC'              	rlf	___fltol@f1+2,f
  9093  005A' 0DAD'              	rlf	___fltol@f1+3,f
  9094  005B' 0B89               	decfsz	9,f
  9095  005C' 2800'              	goto	u4465
  9096  005D' 3001               	movlw	1
  9097  005E' 028D'              	subwf	___fltol@exp1,f
  9098  005F'                    l613:
  9099  005F' 080D'              	movf	___fltol@exp1,w
  9100  0060' 1D03               	btfss	3,2
  9101  0061' 2800'              	goto	u4471
  9102  0062' 2800'              	goto	u4470
  9103  0063'                    u4471:
  9104  0063' 2800'              	goto	l3425
  9105  0064'                    u4470:
  9106  0064'                    l3427:
  9107  0064' 080C'              	movf	___fltol@sign1,w
  9108  0065' 1903               	btfsc	3,2
  9109  0066' 2800'              	goto	u4481
  9110  0067' 2800'              	goto	u4480
  9111  0068'                    u4481:
  9112  0068' 2800'              	goto	l616
  9113  0069'                    u4480:
  9114  0069'                    l3429:
  9115  0069' 09AA'              	comf	___fltol@f1,f
  9116  006A' 09AB'              	comf	___fltol@f1+1,f
  9117  006B' 09AC'              	comf	___fltol@f1+2,f
  9118  006C' 09AD'              	comf	___fltol@f1+3,f
  9119  006D' 0AAA'              	incf	___fltol@f1,f
  9120  006E' 1903               	skipnz
  9121  006F' 0AAB'              	incf	___fltol@f1+1,f
  9122  0070' 1903               	skipnz
  9123  0071' 0AAC'              	incf	___fltol@f1+2,f
  9124  0072' 1903               	skipnz
  9125  0073' 0AAD'              	incf	___fltol@f1+3,f
  9126  0074'                    l616:
  9127  0074'                    l606:
  9128  0074' 0008               	return
  9129  0075'                    __end_of___fltol:
  9130                           
  9131                           	psect	text12
  9132  0000'                    __ptext12:	
  9133 ;; *************** function ___flsub *****************
  9134 ;; Defined at:
  9135 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  a               4    8[BANK0 ] long 
  9138 ;;  b               4   12[BANK0 ] long 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  4    8[BANK0 ] long 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0, pclath, cstack
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9150 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;Total ram usage:        8 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; Hardware stack levels required when called:    1
  9157 ;; This function calls:
  9158 ;;		___fladd
  9159 ;; This function is called by:
  9160 ;;		_main
  9161 ;;		_efgtoa
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           
  9166                           ;psect for function ___flsub
  9167  0000'                    ___flsub:
  9168  0000'                    l3431:	
  9169                           ;incstack = 0
  9170                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9171                           
  9172  0000' 3080               	movlw	128
  9173  0001' 0020               	movlb	0	; select bank0
  9174  0002' 068B'              	xorwf	___flsub@a+3,f
  9175  0003'                    l3433:
  9176  0003' 080F'              	movf	___flsub@b+3,w
  9177  0004' 0083'              	movwf	___fladd@b+3
  9178  0005' 080E'              	movf	___flsub@b+2,w
  9179  0006' 0082'              	movwf	___fladd@b+2
  9180  0007' 080D'              	movf	___flsub@b+1,w
  9181  0008' 0081'              	movwf	___fladd@b+1
  9182  0009' 080C'              	movf	___flsub@b,w
  9183  000A' 0080'              	movwf	___fladd@b
  9184  000B' 080B'              	movf	___flsub@a+3,w
  9185  000C' 0087'              	movwf	___fladd@a+3
  9186  000D' 080A'              	movf	___flsub@a+2,w
  9187  000E' 0086'              	movwf	___fladd@a+2
  9188  000F' 0809'              	movf	___flsub@a+1,w
  9189  0010' 0085'              	movwf	___fladd@a+1
  9190  0011' 0808'              	movf	___flsub@a,w
  9191  0012' 0084'              	movwf	___fladd@a
  9192  0013' 3180' 2000' 3180'  	fcall	___fladd
  9193  0016' 0803'              	movf	?___fladd+3,w
  9194  0017' 0020               	movlb	0	; select bank0
  9195  0018' 008B'              	movwf	?___flsub+3
  9196  0019' 0802'              	movf	?___fladd+2,w
  9197  001A' 008A'              	movwf	?___flsub+2
  9198  001B' 0801'              	movf	?___fladd+1,w
  9199  001C' 0089'              	movwf	?___flsub+1
  9200  001D' 0800'              	movf	?___fladd,w
  9201  001E' 0088'              	movwf	?___flsub
  9202  001F'                    l759:
  9203  001F' 0008               	return
  9204  0020'                    __end_of___flsub:
  9205                           
  9206                           	psect	text13
  9207  0000'                    __ptext13:	
  9208 ;; *************** function ___fladd *****************
  9209 ;; Defined at:
  9210 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  b               4    0[COMMON] long 
  9213 ;;  a               4    4[COMMON] long 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  grs             1   11[COMMON] unsigned char 
  9216 ;;  bexp            1   10[COMMON] unsigned char 
  9217 ;;  aexp            1    9[COMMON] unsigned char 
  9218 ;;  signs           1    8[COMMON] unsigned char 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  4    0[COMMON] unsigned char 
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, status,0
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9228 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;Total ram usage:       20 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		___flsub
  9238 ;;		_efgtoa
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function ___fladd
  9244  0000'                    ___fladd:
  9245  0000'                    l2961:	
  9246                           ;incstack = 0
  9247                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9248                           
  9249  0000' 0803'              	movf	___fladd@b+3,w
  9250  0001' 3980               	andlw	128
  9251  0002' 0020               	movlb	0	; select bank0
  9252  0003' 0080'              	movwf	??___fladd
  9253  0004' 0800'              	movf	??___fladd,w
  9254  0005' 0088'              	movwf	___fladd@signs
  9255  0006'                    l2963:
  9256  0006' 3503'              	lslf	___fladd@b+3,w
  9257  0007' 0080'              	movwf	??___fladd
  9258  0008' 0800'              	movf	??___fladd,w
  9259  0009' 008A'              	movwf	___fladd@bexp
  9260  000A'                    l2965:
  9261  000A' 1F82'              	btfss	___fladd@b+2,7
  9262  000B' 2800'              	goto	u3361
  9263  000C' 2800'              	goto	u3360
  9264  000D'                    u3361:
  9265  000D' 2800'              	goto	l2969
  9266  000E'                    u3360:
  9267  000E'                    l2967:
  9268  000E' 140A'              	bsf	___fladd@bexp,0
  9269  000F'                    l2969:
  9270  000F' 080A'              	movf	___fladd@bexp,w
  9271  0010' 1903               	btfsc	3,2
  9272  0011' 2800'              	goto	u3371
  9273  0012' 2800'              	goto	u3370
  9274  0013'                    u3371:
  9275  0013' 2800'              	goto	l2979
  9276  0014'                    u3370:
  9277  0014'                    l2971:
  9278  0014' 0A0A'              	incf	___fladd@bexp,w
  9279  0015' 1D03               	btfss	3,2
  9280  0016' 2800'              	goto	u3381
  9281  0017' 2800'              	goto	u3380
  9282  0018'                    u3381:
  9283  0018' 2800'              	goto	l2975
  9284  0019'                    u3380:
  9285  0019'                    l2973:
  9286  0019' 3000               	movlw	0
  9287  001A' 0083'              	movwf	___fladd@b+3
  9288  001B' 3000               	movlw	0
  9289  001C' 0082'              	movwf	___fladd@b+2
  9290  001D' 3000               	movlw	0
  9291  001E' 0081'              	movwf	___fladd@b+1
  9292  001F' 3000               	movlw	0
  9293  0020' 0080'              	movwf	___fladd@b
  9294  0021'                    l2975:
  9295  0021' 1782'              	bsf	___fladd@b+2,7
  9296  0022'                    l2977:
  9297  0022' 0183'              	clrf	___fladd@b+3
  9298  0023' 2800'              	goto	l2981
  9299  0024'                    l2979:
  9300  0024' 3000               	movlw	0
  9301  0025' 0083'              	movwf	___fladd@b+3
  9302  0026' 3000               	movlw	0
  9303  0027' 0082'              	movwf	___fladd@b+2
  9304  0028' 3000               	movlw	0
  9305  0029' 0081'              	movwf	___fladd@b+1
  9306  002A' 3000               	movlw	0
  9307  002B' 0080'              	movwf	___fladd@b
  9308  002C'                    l2981:
  9309  002C' 0807'              	movf	___fladd@a+3,w
  9310  002D' 3980               	andlw	128
  9311  002E' 0080'              	movwf	??___fladd
  9312  002F' 0800'              	movf	??___fladd,w
  9313  0030' 0089'              	movwf	___fladd@aexp
  9314  0031'                    l2983:
  9315  0031' 0809'              	movf	___fladd@aexp,w
  9316  0032' 0608'              	xorwf	___fladd@signs,w
  9317  0033' 1903               	skipnz
  9318  0034' 2800'              	goto	u3391
  9319  0035' 2800'              	goto	u3390
  9320  0036'                    u3391:
  9321  0036' 2800'              	goto	l2987
  9322  0037'                    u3390:
  9323  0037'                    l2985:
  9324  0037' 1708'              	bsf	___fladd@signs,6
  9325  0038'                    l2987:
  9326  0038' 3507'              	lslf	___fladd@a+3,w
  9327  0039' 0080'              	movwf	??___fladd
  9328  003A' 0800'              	movf	??___fladd,w
  9329  003B' 0089'              	movwf	___fladd@aexp
  9330  003C'                    l2989:
  9331  003C' 1F86'              	btfss	___fladd@a+2,7
  9332  003D' 2800'              	goto	u3401
  9333  003E' 2800'              	goto	u3400
  9334  003F'                    u3401:
  9335  003F' 2800'              	goto	l2993
  9336  0040'                    u3400:
  9337  0040'                    l2991:
  9338  0040' 1409'              	bsf	___fladd@aexp,0
  9339  0041'                    l2993:
  9340  0041' 0809'              	movf	___fladd@aexp,w
  9341  0042' 1903               	btfsc	3,2
  9342  0043' 2800'              	goto	u3411
  9343  0044' 2800'              	goto	u3410
  9344  0045'                    u3411:
  9345  0045' 2800'              	goto	l3003
  9346  0046'                    u3410:
  9347  0046'                    l2995:
  9348  0046' 0A09'              	incf	___fladd@aexp,w
  9349  0047' 1D03               	btfss	3,2
  9350  0048' 2800'              	goto	u3421
  9351  0049' 2800'              	goto	u3420
  9352  004A'                    u3421:
  9353  004A' 2800'              	goto	l2999
  9354  004B'                    u3420:
  9355  004B'                    l2997:
  9356  004B' 3000               	movlw	0
  9357  004C' 0087'              	movwf	___fladd@a+3
  9358  004D' 3000               	movlw	0
  9359  004E' 0086'              	movwf	___fladd@a+2
  9360  004F' 3000               	movlw	0
  9361  0050' 0085'              	movwf	___fladd@a+1
  9362  0051' 3000               	movlw	0
  9363  0052' 0084'              	movwf	___fladd@a
  9364  0053'                    l2999:
  9365  0053' 1786'              	bsf	___fladd@a+2,7
  9366  0054'                    l3001:
  9367  0054' 0187'              	clrf	___fladd@a+3
  9368  0055' 2800'              	goto	l713
  9369  0056'                    l3003:
  9370  0056' 3000               	movlw	0
  9371  0057' 0087'              	movwf	___fladd@a+3
  9372  0058' 3000               	movlw	0
  9373  0059' 0086'              	movwf	___fladd@a+2
  9374  005A' 3000               	movlw	0
  9375  005B' 0085'              	movwf	___fladd@a+1
  9376  005C' 3000               	movlw	0
  9377  005D' 0084'              	movwf	___fladd@a
  9378  005E'                    l713:
  9379  005E' 080A'              	movf	___fladd@bexp,w
  9380  005F' 0209'              	subwf	___fladd@aexp,w
  9381  0060' 1803               	skipnc
  9382  0061' 2800'              	goto	u3431
  9383  0062' 2800'              	goto	u3430
  9384  0063'                    u3431:
  9385  0063' 2800'              	goto	l3039
  9386  0064'                    u3430:
  9387  0064'                    l3005:
  9388  0064' 1F08'              	btfss	___fladd@signs,6
  9389  0065' 2800'              	goto	u3441
  9390  0066' 2800'              	goto	u3440
  9391  0067'                    u3441:
  9392  0067' 2800'              	goto	l3009
  9393  0068'                    u3440:
  9394  0068'                    l3007:
  9395  0068' 3080               	movlw	128
  9396  0069' 0080'              	movwf	??___fladd
  9397  006A' 0800'              	movf	??___fladd,w
  9398  006B' 0688'              	xorwf	___fladd@signs,f
  9399  006C'                    l3009:
  9400  006C' 080A'              	movf	___fladd@bexp,w
  9401  006D' 0080'              	movwf	??___fladd
  9402  006E' 0800'              	movf	??___fladd,w
  9403  006F' 008B'              	movwf	___fladd@grs
  9404  0070'                    l3011:
  9405  0070' 0809'              	movf	___fladd@aexp,w
  9406  0071' 0080'              	movwf	??___fladd
  9407  0072' 0800'              	movf	??___fladd,w
  9408  0073' 008A'              	movwf	___fladd@bexp
  9409  0074'                    l3013:
  9410  0074' 080B'              	movf	___fladd@grs,w
  9411  0075' 0080'              	movwf	??___fladd
  9412  0076' 0800'              	movf	??___fladd,w
  9413  0077' 0089'              	movwf	___fladd@aexp
  9414  0078'                    l3015:
  9415  0078' 0800'              	movf	___fladd@b,w
  9416  0079' 0080'              	movwf	??___fladd
  9417  007A' 0800'              	movf	??___fladd,w
  9418  007B' 008B'              	movwf	___fladd@grs
  9419  007C'                    l3017:
  9420  007C' 0804'              	movf	___fladd@a,w
  9421  007D' 0080'              	movwf	??___fladd
  9422  007E' 0800'              	movf	??___fladd,w
  9423  007F' 0080'              	movwf	___fladd@b
  9424  0080'                    l3019:
  9425  0080' 080B'              	movf	___fladd@grs,w
  9426  0081' 0080'              	movwf	??___fladd
  9427  0082' 0800'              	movf	??___fladd,w
  9428  0083' 0084'              	movwf	___fladd@a
  9429  0084'                    l3021:
  9430  0084' 0801'              	movf	___fladd@b+1,w
  9431  0085' 0080'              	movwf	??___fladd
  9432  0086' 0800'              	movf	??___fladd,w
  9433  0087' 008B'              	movwf	___fladd@grs
  9434  0088'                    l3023:
  9435  0088' 0805'              	movf	___fladd@a+1,w
  9436  0089' 0080'              	movwf	??___fladd
  9437  008A' 0800'              	movf	??___fladd,w
  9438  008B' 0081'              	movwf	___fladd@b+1
  9439  008C'                    l3025:
  9440  008C' 080B'              	movf	___fladd@grs,w
  9441  008D' 0080'              	movwf	??___fladd
  9442  008E' 0800'              	movf	??___fladd,w
  9443  008F' 0085'              	movwf	___fladd@a+1
  9444  0090'                    l3027:
  9445  0090' 0802'              	movf	___fladd@b+2,w
  9446  0091' 0080'              	movwf	??___fladd
  9447  0092' 0800'              	movf	??___fladd,w
  9448  0093' 008B'              	movwf	___fladd@grs
  9449  0094'                    l3029:
  9450  0094' 0806'              	movf	___fladd@a+2,w
  9451  0095' 0080'              	movwf	??___fladd
  9452  0096' 0800'              	movf	??___fladd,w
  9453  0097' 0082'              	movwf	___fladd@b+2
  9454  0098'                    l3031:
  9455  0098' 080B'              	movf	___fladd@grs,w
  9456  0099' 0080'              	movwf	??___fladd
  9457  009A' 0800'              	movf	??___fladd,w
  9458  009B' 0086'              	movwf	___fladd@a+2
  9459  009C'                    l3033:
  9460  009C' 0803'              	movf	___fladd@b+3,w
  9461  009D' 0080'              	movwf	??___fladd
  9462  009E' 0800'              	movf	??___fladd,w
  9463  009F' 008B'              	movwf	___fladd@grs
  9464  00A0'                    l3035:
  9465  00A0' 0807'              	movf	___fladd@a+3,w
  9466  00A1' 0080'              	movwf	??___fladd
  9467  00A2' 0800'              	movf	??___fladd,w
  9468  00A3' 0083'              	movwf	___fladd@b+3
  9469  00A4'                    l3037:
  9470  00A4' 080B'              	movf	___fladd@grs,w
  9471  00A5' 0080'              	movwf	??___fladd
  9472  00A6' 0800'              	movf	??___fladd,w
  9473  00A7' 0087'              	movwf	___fladd@a+3
  9474  00A8'                    l3039:
  9475  00A8' 018B'              	clrf	___fladd@grs
  9476  00A9'                    l3041:
  9477  00A9' 0809'              	movf	___fladd@aexp,w
  9478  00AA' 0080'              	movwf	??___fladd
  9479  00AB' 0181'              	clrf	??___fladd+1
  9480  00AC' 0801'              	movf	??___fladd+1,w
  9481  00AD' 0083'              	movwf	??___fladd+3
  9482  00AE' 080A'              	movf	___fladd@bexp,w
  9483  00AF' 0200'              	subwf	??___fladd,w
  9484  00B0' 0082'              	movwf	??___fladd+2
  9485  00B1' 1C03               	skipc
  9486  00B2' 0383'              	decf	??___fladd+3,f
  9487  00B3' 0803'              	movf	??___fladd+3,w
  9488  00B4' 3A80               	xorlw	128
  9489  00B5' 0084'              	movwf	??___fladd+4
  9490  00B6' 3080               	movlw	128
  9491  00B7' 0204'              	subwf	??___fladd+4,w
  9492  00B8' 1D03               	skipz
  9493  00B9' 2800'              	goto	u3455
  9494  00BA' 301A               	movlw	26
  9495  00BB' 0202'              	subwf	??___fladd+2,w
  9496  00BC'                    u3455:
  9497  00BC' 1C03               	skipc
  9498  00BD' 2800'              	goto	u3451
  9499  00BE' 2800'              	goto	u3450
  9500  00BF'                    u3451:
  9501  00BF' 2800'              	goto	l3057
  9502  00C0'                    u3450:
  9503  00C0'                    l3043:
  9504  00C0' 0803'              	movf	___fladd@b+3,w
  9505  00C1' 0402'              	iorwf	___fladd@b+2,w
  9506  00C2' 0401'              	iorwf	___fladd@b+1,w
  9507  00C3' 0400'              	iorwf	___fladd@b,w
  9508  00C4' 1D03               	skipz
  9509  00C5' 2800'              	goto	u3461
  9510  00C6' 2800'              	goto	u3460
  9511  00C7'                    u3461:
  9512  00C7' 3001               	movlw	1
  9513  00C8' 2800'              	goto	u3470
  9514  00C9'                    u3460:
  9515  00C9' 3000               	movlw	0
  9516  00CA'                    u3470:
  9517  00CA' 0020               	movlb	0	; select bank0
  9518  00CB' 0080'              	movwf	??___fladd
  9519  00CC' 0800'              	movf	??___fladd,w
  9520  00CD' 008B'              	movwf	___fladd@grs
  9521  00CE' 3000               	movlw	0
  9522  00CF' 0083'              	movwf	___fladd@b+3
  9523  00D0' 3000               	movlw	0
  9524  00D1' 0082'              	movwf	___fladd@b+2
  9525  00D2' 3000               	movlw	0
  9526  00D3' 0081'              	movwf	___fladd@b+1
  9527  00D4' 3000               	movlw	0
  9528  00D5' 0080'              	movwf	___fladd@b
  9529  00D6' 0809'              	movf	___fladd@aexp,w
  9530  00D7' 0080'              	movwf	??___fladd
  9531  00D8' 0800'              	movf	??___fladd,w
  9532  00D9' 008A'              	movwf	___fladd@bexp
  9533  00DA' 2800'              	goto	l717
  9534  00DB'                    l719:
  9535  00DB' 1C0B'              	btfss	___fladd@grs,0
  9536  00DC' 2800'              	goto	u3481
  9537  00DD' 2800'              	goto	u3480
  9538  00DE'                    u3481:
  9539  00DE' 2800'              	goto	l3047
  9540  00DF'                    u3480:
  9541  00DF'                    l3045:
  9542  00DF' 360B'              	lsrf	___fladd@grs,w
  9543  00E0' 3801               	iorlw	1
  9544  00E1' 0020               	movlb	0	; select bank0
  9545  00E2' 0080'              	movwf	??___fladd
  9546  00E3' 0800'              	movf	??___fladd,w
  9547  00E4' 008B'              	movwf	___fladd@grs
  9548  00E5' 2800'              	goto	l3049
  9549  00E6'                    l3047:
  9550  00E6' 1003               	clrc
  9551  00E7' 0C8B'              	rrf	___fladd@grs,f
  9552  00E8'                    l3049:
  9553  00E8' 1C00'              	btfss	___fladd@b,0
  9554  00E9' 2800'              	goto	u3491
  9555  00EA' 2800'              	goto	u3490
  9556  00EB'                    u3491:
  9557  00EB' 2800'              	goto	l3053
  9558  00EC'                    u3490:
  9559  00EC'                    l3051:
  9560  00EC' 178B'              	bsf	___fladd@grs,7
  9561  00ED'                    l3053:
  9562  00ED' 3001               	movlw	1
  9563  00EE' 0020               	movlb	0	; select bank0
  9564  00EF' 0080'              	movwf	??___fladd
  9565  00F0'                    u3505:
  9566  00F0' 3783'              	asrf	___fladd@b+3,f
  9567  00F1' 0C82'              	rrf	___fladd@b+2,f
  9568  00F2' 0C81'              	rrf	___fladd@b+1,f
  9569  00F3' 0C80'              	rrf	___fladd@b,f
  9570  00F4' 0B80'              	decfsz	??___fladd& (0+127),f
  9571  00F5' 2800'              	goto	u3505
  9572  00F6'                    l3055:
  9573  00F6' 3001               	movlw	1
  9574  00F7' 0080'              	movwf	??___fladd
  9575  00F8' 0800'              	movf	??___fladd,w
  9576  00F9' 078A'              	addwf	___fladd@bexp,f
  9577  00FA'                    l3057:
  9578  00FA' 0809'              	movf	___fladd@aexp,w
  9579  00FB' 020A'              	subwf	___fladd@bexp,w
  9580  00FC' 1C03               	skipc
  9581  00FD' 2800'              	goto	u3511
  9582  00FE' 2800'              	goto	u3510
  9583  00FF'                    u3511:
  9584  00FF' 2800'              	goto	l719
  9585  0100'                    u3510:
  9586  0100'                    l717:
  9587  0100' 1B08'              	btfsc	___fladd@signs,6
  9588  0101' 2800'              	goto	u3521
  9589  0102' 2800'              	goto	u3520
  9590  0103'                    u3521:
  9591  0103' 2800'              	goto	l3083
  9592  0104'                    u3520:
  9593  0104'                    l3059:
  9594  0104' 080A'              	movf	___fladd@bexp,w
  9595  0105' 1D03               	btfss	3,2
  9596  0106' 2800'              	goto	u3531
  9597  0107' 2800'              	goto	u3530
  9598  0108'                    u3531:
  9599  0108' 2800'              	goto	l3065
  9600  0109'                    u3530:
  9601  0109'                    l3061:
  9602  0109' 3000               	movlw	0
  9603  010A' 0083'              	movwf	?___fladd+3
  9604  010B' 3000               	movlw	0
  9605  010C' 0082'              	movwf	?___fladd+2
  9606  010D' 3000               	movlw	0
  9607  010E' 0081'              	movwf	?___fladd+1
  9608  010F' 3000               	movlw	0
  9609  0110' 0080'              	movwf	?___fladd
  9610  0111' 2800'              	goto	l726
  9611  0112'                    l3065:
  9612  0112' 0804'              	movf	___fladd@a,w
  9613  0113' 0780'              	addwf	___fladd@b,f
  9614  0114' 0805'              	movf	___fladd@a+1,w
  9615  0115' 3D81'              	addwfc	___fladd@b+1,f
  9616  0116' 0806'              	movf	___fladd@a+2,w
  9617  0117' 3D82'              	addwfc	___fladd@b+2,f
  9618  0118' 0807'              	movf	___fladd@a+3,w
  9619  0119' 3D83'              	addwfc	___fladd@b+3,f
  9620  011A'                    l3067:
  9621  011A' 1C03'              	btfss	___fladd@b+3,0
  9622  011B' 2800'              	goto	u3541
  9623  011C' 2800'              	goto	u3540
  9624  011D'                    u3541:
  9625  011D' 2800'              	goto	l3117
  9626  011E'                    u3540:
  9627  011E'                    l3069:
  9628  011E' 1C0B'              	btfss	___fladd@grs,0
  9629  011F' 2800'              	goto	u3551
  9630  0120' 2800'              	goto	u3550
  9631  0121'                    u3551:
  9632  0121' 2800'              	goto	l3073
  9633  0122'                    u3550:
  9634  0122'                    l3071:
  9635  0122' 360B'              	lsrf	___fladd@grs,w
  9636  0123' 3801               	iorlw	1
  9637  0124' 0020               	movlb	0	; select bank0
  9638  0125' 0080'              	movwf	??___fladd
  9639  0126' 0800'              	movf	??___fladd,w
  9640  0127' 008B'              	movwf	___fladd@grs
  9641  0128' 2800'              	goto	l3075
  9642  0129'                    l3073:
  9643  0129' 1003               	clrc
  9644  012A' 0C8B'              	rrf	___fladd@grs,f
  9645  012B'                    l3075:
  9646  012B' 1C00'              	btfss	___fladd@b,0
  9647  012C' 2800'              	goto	u3561
  9648  012D' 2800'              	goto	u3560
  9649  012E'                    u3561:
  9650  012E' 2800'              	goto	l3079
  9651  012F'                    u3560:
  9652  012F'                    l3077:
  9653  012F' 178B'              	bsf	___fladd@grs,7
  9654  0130'                    l3079:
  9655  0130' 3001               	movlw	1
  9656  0131' 0020               	movlb	0	; select bank0
  9657  0132' 0080'              	movwf	??___fladd
  9658  0133'                    u3575:
  9659  0133' 3783'              	asrf	___fladd@b+3,f
  9660  0134' 0C82'              	rrf	___fladd@b+2,f
  9661  0135' 0C81'              	rrf	___fladd@b+1,f
  9662  0136' 0C80'              	rrf	___fladd@b,f
  9663  0137' 0B80'              	decfsz	??___fladd& (0+127),f
  9664  0138' 2800'              	goto	u3575
  9665  0139'                    l3081:
  9666  0139' 3001               	movlw	1
  9667  013A' 0080'              	movwf	??___fladd
  9668  013B' 0800'              	movf	??___fladd,w
  9669  013C' 078A'              	addwf	___fladd@bexp,f
  9670  013D' 2800'              	goto	l3117
  9671  013E'                    l3083:
  9672  013E' 0803'              	movf	___fladd@b+3,w
  9673  013F' 3A80               	xorlw	128
  9674  0140' 0020               	movlb	0	; select bank0
  9675  0141' 0080'              	movwf	??___fladd
  9676  0142' 0807'              	movf	___fladd@a+3,w
  9677  0143' 3A80               	xorlw	128
  9678  0144' 0200'              	subwf	??___fladd,w
  9679  0145' 1D03               	skipz
  9680  0146' 2800'              	goto	u3583
  9681  0147' 0806'              	movf	___fladd@a+2,w
  9682  0148' 0202'              	subwf	___fladd@b+2,w
  9683  0149' 1D03               	skipz
  9684  014A' 2800'              	goto	u3583
  9685  014B' 0805'              	movf	___fladd@a+1,w
  9686  014C' 0201'              	subwf	___fladd@b+1,w
  9687  014D' 1D03               	skipz
  9688  014E' 2800'              	goto	u3583
  9689  014F' 0804'              	movf	___fladd@a,w
  9690  0150' 0200'              	subwf	___fladd@b,w
  9691  0151'                    u3583:
  9692  0151' 1803               	skipnc
  9693  0152' 2800'              	goto	u3581
  9694  0153' 2800'              	goto	u3580
  9695  0154'                    u3581:
  9696  0154' 2800'              	goto	l3093
  9697  0155'                    u3580:
  9698  0155'                    l3085:
  9699  0155' 30FF               	movlw	255
  9700  0156' 0080'              	movwf	??___fladd
  9701  0157' 30FF               	movlw	255
  9702  0158' 0081'              	movwf	??___fladd+1
  9703  0159' 30FF               	movlw	255
  9704  015A' 0082'              	movwf	??___fladd+2
  9705  015B' 30FF               	movlw	255
  9706  015C' 0083'              	movwf	??___fladd+3
  9707  015D' 0800'              	movf	___fladd@b,w
  9708  015E' 0204'              	subwf	___fladd@a,w
  9709  015F' 0084'              	movwf	??___fladd+4
  9710  0160' 0801'              	movf	___fladd@b+1,w
  9711  0161' 3B05'              	subwfb	___fladd@a+1,w
  9712  0162' 0085'              	movwf	??___fladd+5
  9713  0163' 0802'              	movf	___fladd@b+2,w
  9714  0164' 3B06'              	subwfb	___fladd@a+2,w
  9715  0165' 0086'              	movwf	??___fladd+6
  9716  0166' 0803'              	movf	___fladd@b+3,w
  9717  0167' 3B07'              	subwfb	___fladd@a+3,w
  9718  0168' 0087'              	movwf	??___fladd+7
  9719  0169' 0804'              	movf	??___fladd+4,w
  9720  016A' 0780'              	addwf	??___fladd,f
  9721  016B' 0805'              	movf	??___fladd+5,w
  9722  016C' 3D81'              	addwfc	??___fladd+1,f
  9723  016D' 0806'              	movf	??___fladd+6,w
  9724  016E' 3D82'              	addwfc	??___fladd+2,f
  9725  016F' 0807'              	movf	??___fladd+7,w
  9726  0170' 3D83'              	addwfc	??___fladd+3,f
  9727  0171' 0803'              	movf	??___fladd+3,w
  9728  0172' 0083'              	movwf	___fladd@b+3
  9729  0173' 0802'              	movf	??___fladd+2,w
  9730  0174' 0082'              	movwf	___fladd@b+2
  9731  0175' 0801'              	movf	??___fladd+1,w
  9732  0176' 0081'              	movwf	___fladd@b+1
  9733  0177' 0800'              	movf	??___fladd,w
  9734  0178' 0080'              	movwf	___fladd@b
  9735  0179'                    l3087:
  9736  0179' 3080               	movlw	128
  9737  017A' 0080'              	movwf	??___fladd
  9738  017B' 0800'              	movf	??___fladd,w
  9739  017C' 0688'              	xorwf	___fladd@signs,f
  9740  017D' 098B'              	comf	___fladd@grs,f
  9741  017E' 0A8B'              	incf	___fladd@grs,f
  9742  017F'                    l3089:
  9743  017F' 080B'              	movf	___fladd@grs,w
  9744  0180' 1D03               	btfss	3,2
  9745  0181' 2800'              	goto	u3591
  9746  0182' 2800'              	goto	u3590
  9747  0183'                    u3591:
  9748  0183' 2800'              	goto	l734
  9749  0184'                    u3590:
  9750  0184'                    l3091:
  9751  0184' 3001               	movlw	1
  9752  0185' 0780'              	addwf	___fladd@b,f
  9753  0186' 3000               	movlw	0
  9754  0187' 3D81'              	addwfc	___fladd@b+1,f
  9755  0188' 3000               	movlw	0
  9756  0189' 3D82'              	addwfc	___fladd@b+2,f
  9757  018A' 3000               	movlw	0
  9758  018B' 3D83'              	addwfc	___fladd@b+3,f
  9759  018C' 2800'              	goto	l734
  9760  018D'                    l3093:
  9761  018D' 0804'              	movf	___fladd@a,w
  9762  018E' 0280'              	subwf	___fladd@b,f
  9763  018F' 0805'              	movf	___fladd@a+1,w
  9764  0190' 3B81'              	subwfb	___fladd@b+1,f
  9765  0191' 0806'              	movf	___fladd@a+2,w
  9766  0192' 3B82'              	subwfb	___fladd@b+2,f
  9767  0193' 0807'              	movf	___fladd@a+3,w
  9768  0194' 3B83'              	subwfb	___fladd@b+3,f
  9769  0195'                    l734:
  9770  0195' 0803'              	movf	___fladd@b+3,w
  9771  0196' 0402'              	iorwf	___fladd@b+2,w
  9772  0197' 0401'              	iorwf	___fladd@b+1,w
  9773  0198' 0400'              	iorwf	___fladd@b,w
  9774  0199' 1D03               	skipz
  9775  019A' 2800'              	goto	u3601
  9776  019B' 2800'              	goto	u3600
  9777  019C'                    u3601:
  9778  019C' 2800'              	goto	l3115
  9779  019D'                    u3600:
  9780  019D'                    l3095:
  9781  019D' 080B'              	movf	___fladd@grs,w
  9782  019E' 1D03               	btfss	3,2
  9783  019F' 2800'              	goto	u3611
  9784  01A0' 2800'              	goto	u3610
  9785  01A1'                    u3611:
  9786  01A1' 2800'              	goto	l3115
  9787  01A2'                    u3610:
  9788  01A2'                    l3097:
  9789  01A2' 3000               	movlw	0
  9790  01A3' 0083'              	movwf	?___fladd+3
  9791  01A4' 3000               	movlw	0
  9792  01A5' 0082'              	movwf	?___fladd+2
  9793  01A6' 3000               	movlw	0
  9794  01A7' 0081'              	movwf	?___fladd+1
  9795  01A8' 3000               	movlw	0
  9796  01A9' 0080'              	movwf	?___fladd
  9797  01AA' 2800'              	goto	l726
  9798  01AB'                    l3101:
  9799  01AB' 3001               	movlw	1
  9800  01AC'                    u3625:
  9801  01AC' 3580'              	lslf	___fladd@b,f
  9802  01AD' 0D81'              	rlf	___fladd@b+1,f
  9803  01AE' 0D82'              	rlf	___fladd@b+2,f
  9804  01AF' 0D83'              	rlf	___fladd@b+3,f
  9805  01B0' 0B89               	decfsz	9,f
  9806  01B1' 2800'              	goto	u3625
  9807  01B2'                    l3103:
  9808  01B2' 1F8B'              	btfss	___fladd@grs,7
  9809  01B3' 2800'              	goto	u3631
  9810  01B4' 2800'              	goto	u3630
  9811  01B5'                    u3631:
  9812  01B5' 2800'              	goto	l738
  9813  01B6'                    u3630:
  9814  01B6'                    l3105:
  9815  01B6' 1400'              	bsf	___fladd@b,0
  9816  01B7'                    l738:
  9817  01B7' 1C0B'              	btfss	___fladd@grs,0
  9818  01B8' 2800'              	goto	u3641
  9819  01B9' 2800'              	goto	u3640
  9820  01BA'                    u3641:
  9821  01BA' 2800'              	goto	l3109
  9822  01BB'                    u3640:
  9823  01BB'                    l3107:
  9824  01BB' 1403               	setc
  9825  01BC' 0D8B'              	rlf	___fladd@grs,f
  9826  01BD' 2800'              	goto	l3111
  9827  01BE'                    l3109:
  9828  01BE' 1003               	clrc
  9829  01BF' 0D8B'              	rlf	___fladd@grs,f
  9830  01C0'                    l3111:
  9831  01C0' 080A'              	movf	___fladd@bexp,w
  9832  01C1' 1903               	btfsc	3,2
  9833  01C2' 2800'              	goto	u3651
  9834  01C3' 2800'              	goto	u3650
  9835  01C4'                    u3651:
  9836  01C4' 2800'              	goto	l3115
  9837  01C5'                    u3650:
  9838  01C5'                    l3113:
  9839  01C5' 3001               	movlw	1
  9840  01C6' 028A'              	subwf	___fladd@bexp,f
  9841  01C7'                    l3115:
  9842  01C7' 1F82'              	btfss	___fladd@b+2,7
  9843  01C8' 2800'              	goto	u3661
  9844  01C9' 2800'              	goto	u3660
  9845  01CA'                    u3661:
  9846  01CA' 2800'              	goto	l3101
  9847  01CB'                    u3660:
  9848  01CB'                    l3117:
  9849  01CB' 0189'              	clrf	___fladd@aexp
  9850  01CC'                    l3119:
  9851  01CC' 1F8B'              	btfss	___fladd@grs,7
  9852  01CD' 2800'              	goto	u3671
  9853  01CE' 2800'              	goto	u3670
  9854  01CF'                    u3671:
  9855  01CF' 2800'              	goto	l3127
  9856  01D0'                    u3670:
  9857  01D0'                    l3121:
  9858  01D0' 080B'              	movf	___fladd@grs,w
  9859  01D1' 397F               	andlw	127
  9860  01D2' 1903               	btfsc	3,2
  9861  01D3' 2800'              	goto	u3681
  9862  01D4' 2800'              	goto	u3680
  9863  01D5'                    u3681:
  9864  01D5' 2800'              	goto	l744
  9865  01D6'                    u3680:
  9866  01D6'                    l3123:
  9867  01D6' 0189'              	clrf	___fladd@aexp
  9868  01D7' 0A89'              	incf	___fladd@aexp,f
  9869  01D8' 2800'              	goto	l3127
  9870  01D9'                    l744:
  9871  01D9' 1C00'              	btfss	___fladd@b,0
  9872  01DA' 2800'              	goto	u3691
  9873  01DB' 2800'              	goto	u3690
  9874  01DC'                    u3691:
  9875  01DC' 2800'              	goto	l3127
  9876  01DD'                    u3690:
  9877  01DD' 2800'              	goto	l3123
  9878  01DE'                    l3127:
  9879  01DE' 0809'              	movf	___fladd@aexp,w
  9880  01DF' 1903               	btfsc	3,2
  9881  01E0' 2800'              	goto	u3701
  9882  01E1' 2800'              	goto	u3700
  9883  01E2'                    u3701:
  9884  01E2' 2800'              	goto	l747
  9885  01E3'                    u3700:
  9886  01E3'                    l3129:
  9887  01E3' 3001               	movlw	1
  9888  01E4' 0780'              	addwf	___fladd@b,f
  9889  01E5' 3000               	movlw	0
  9890  01E6' 3D81'              	addwfc	___fladd@b+1,f
  9891  01E7' 3000               	movlw	0
  9892  01E8' 3D82'              	addwfc	___fladd@b+2,f
  9893  01E9' 3000               	movlw	0
  9894  01EA' 3D83'              	addwfc	___fladd@b+3,f
  9895  01EB'                    l3131:
  9896  01EB' 1C03'              	btfss	___fladd@b+3,0
  9897  01EC' 2800'              	goto	u3711
  9898  01ED' 2800'              	goto	u3710
  9899  01EE'                    u3711:
  9900  01EE' 2800'              	goto	l747
  9901  01EF'                    u3710:
  9902  01EF'                    l3133:
  9903  01EF' 0800'              	movf	___fladd@b,w
  9904  01F0' 0020               	movlb	0	; select bank0
  9905  01F1' 0080'              	movwf	??___fladd
  9906  01F2' 0801'              	movf	___fladd@b+1,w
  9907  01F3' 0081'              	movwf	??___fladd+1
  9908  01F4' 0802'              	movf	___fladd@b+2,w
  9909  01F5' 0082'              	movwf	??___fladd+2
  9910  01F6' 0803'              	movf	___fladd@b+3,w
  9911  01F7' 0083'              	movwf	??___fladd+3
  9912  01F8' 3001               	movlw	1
  9913  01F9' 0084'              	movwf	??___fladd+4
  9914  01FA'                    u3725:
  9915  01FA' 3783'              	asrf	??___fladd+3,f
  9916  01FB' 0C82'              	rrf	??___fladd+2,f
  9917  01FC' 0C81'              	rrf	??___fladd+1,f
  9918  01FD' 0C80'              	rrf	??___fladd,f
  9919  01FE'                    u3720:
  9920  01FE' 0B84'              	decfsz	??___fladd+4,f
  9921  01FF' 2800'              	goto	u3725
  9922  0200' 0803'              	movf	??___fladd+3,w
  9923  0201' 0083'              	movwf	___fladd@b+3
  9924  0202' 0802'              	movf	??___fladd+2,w
  9925  0203' 0082'              	movwf	___fladd@b+2
  9926  0204' 0801'              	movf	??___fladd+1,w
  9927  0205' 0081'              	movwf	___fladd@b+1
  9928  0206' 0800'              	movf	??___fladd,w
  9929  0207' 0080'              	movwf	___fladd@b
  9930  0208' 0A0A'              	incf	___fladd@bexp,w
  9931  0209' 1903               	btfsc	3,2
  9932  020A' 2800'              	goto	u3731
  9933  020B' 2800'              	goto	u3730
  9934  020C'                    u3731:
  9935  020C' 2800'              	goto	l747
  9936  020D'                    u3730:
  9937  020D'                    l3135:
  9938  020D' 3001               	movlw	1
  9939  020E' 0080'              	movwf	??___fladd
  9940  020F' 0800'              	movf	??___fladd,w
  9941  0210' 078A'              	addwf	___fladd@bexp,f
  9942  0211'                    l747:
  9943  0211' 0A0A'              	incf	___fladd@bexp,w
  9944  0212' 1903               	btfsc	3,2
  9945  0213' 2800'              	goto	u3741
  9946  0214' 2800'              	goto	u3740
  9947  0215'                    u3741:
  9948  0215' 2800'              	goto	l3139
  9949  0216'                    u3740:
  9950  0216'                    l3137:
  9951  0216' 080A'              	movf	___fladd@bexp,w
  9952  0217' 1D03               	btfss	3,2
  9953  0218' 2800'              	goto	u3751
  9954  0219' 2800'              	goto	u3750
  9955  021A'                    u3751:
  9956  021A' 2800'              	goto	l3145
  9957  021B'                    u3750:
  9958  021B'                    l3139:
  9959  021B' 3000               	movlw	0
  9960  021C' 0083'              	movwf	___fladd@b+3
  9961  021D' 3000               	movlw	0
  9962  021E' 0082'              	movwf	___fladd@b+2
  9963  021F' 3000               	movlw	0
  9964  0220' 0081'              	movwf	___fladd@b+1
  9965  0221' 3000               	movlw	0
  9966  0222' 0080'              	movwf	___fladd@b
  9967  0223'                    l3141:
  9968  0223' 080A'              	movf	___fladd@bexp,w
  9969  0224' 1D03               	btfss	3,2
  9970  0225' 2800'              	goto	u3761
  9971  0226' 2800'              	goto	u3760
  9972  0227'                    u3761:
  9973  0227' 2800'              	goto	l3145
  9974  0228'                    u3760:
  9975  0228'                    l3143:
  9976  0228' 0188'              	clrf	___fladd@signs
  9977  0229'                    l3145:
  9978  0229' 1C0A'              	btfss	___fladd@bexp,0
  9979  022A' 2800'              	goto	u3771
  9980  022B' 2800'              	goto	u3770
  9981  022C'                    u3771:
  9982  022C' 2800'              	goto	l3149
  9983  022D'                    u3770:
  9984  022D'                    l3147:
  9985  022D' 1782'              	bsf	___fladd@b+2,7
  9986  022E' 2800'              	goto	l755
  9987  022F'                    l3149:
  9988  022F' 307F               	movlw	127
  9989  0230' 0020               	movlb	0	; select bank0
  9990  0231' 0080'              	movwf	??___fladd
  9991  0232' 0800'              	movf	??___fladd,w
  9992  0233' 0582'              	andwf	___fladd@b+2,f
  9993  0234'                    l755:
  9994  0234' 360A'              	lsrf	___fladd@bexp,w
  9995  0235' 0020               	movlb	0	; select bank0
  9996  0236' 0080'              	movwf	??___fladd
  9997  0237' 0800'              	movf	??___fladd,w
  9998  0238' 0083'              	movwf	___fladd@b+3
  9999  0239'                    l3151:
 10000  0239' 1F88'              	btfss	___fladd@signs,7
 10001  023A' 2800'              	goto	u3781
 10002  023B' 2800'              	goto	u3780
 10003  023C'                    u3781:
 10004  023C' 2800'              	goto	l756
 10005  023D'                    u3780:
 10006  023D'                    l3153:
 10007  023D' 1783'              	bsf	___fladd@b+3,7
 10008  023E'                    l756:
 10009  023E'                    l726:
 10010  023E' 0008               	return
 10011  023F'                    __end_of___fladd:
 10012                           
 10013                           	psect	text14
 10014  0000'                    __ptext14:	
 10015 ;; *************** function ___flneg *****************
 10016 ;; Defined at:
 10017 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  f1              4    0[COMMON] unsigned char 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  4    0[COMMON] unsigned char 
 10024 ;; Registers used:
 10025 ;;		wreg
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10035 ;;Total ram usage:        4 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; This function calls:
 10038 ;;		Nothing
 10039 ;; This function is called by:
 10040 ;;		_efgtoa
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           
 10045                           ;psect for function ___flneg
 10046  0000'                    ___flneg:
 10047  0000'                    l3387:	
 10048                           ;incstack = 0
 10049                           ; Regs used in ___flneg: [wreg]
 10050                           
 10051  0000' 0803'              	movf	___flneg@f1+3,w
 10052  0001' 0402'              	iorwf	___flneg@f1+2,w
 10053  0002' 0401'              	iorwf	___flneg@f1+1,w
 10054  0003' 0400'              	iorwf	___flneg@f1,w
 10055  0004' 1903               	skipnz
 10056  0005' 2800'              	goto	u4381
 10057  0006' 2800'              	goto	u4380
 10058  0007'                    u4381:
 10059  0007' 2800'              	goto	l3391
 10060  0008'                    u4380:
 10061  0008'                    l3389:
 10062  0008' 3080               	movlw	128
 10063  0009' 0683'              	xorwf	___flneg@f1+3,f
 10064  000A'                    l3391:
 10065  000A'                    l602:
 10066  000A' 0008               	return
 10067  000B'                    __end_of___flneg:
 10068                           
 10069                           	psect	text15
 10070  0000'                    __ptext15:	
 10071 ;; *************** function ___flmul *****************
 10072 ;; Defined at:
 10073 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  b               4   42[BANK0 ] unsigned char 
 10076 ;;  a               4   46[BANK0 ] unsigned char 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  prod            4   62[BANK0 ] struct .
 10079 ;;  grs             4   56[BANK0 ] unsigned long 
 10080 ;;  temp            2   66[BANK0 ] struct .
 10081 ;;  bexp            1   61[BANK0 ] unsigned char 
 10082 ;;  aexp            1   60[BANK0 ] unsigned char 
 10083 ;;  sign            1   55[BANK0 ] unsigned char 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  4   42[BANK0 ] unsigned char 
 10086 ;; Registers used:
 10087 ;;		wreg, status,2, status,0, pclath, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10093 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;Total ram usage:       26 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    1
 10100 ;; This function calls:
 10101 ;;		__Umul8_16
 10102 ;; This function is called by:
 10103 ;;		_main
 10104 ;;		_efgtoa
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           
 10109                           ;psect for function ___flmul
 10110  0000'                    ___flmul:
 10111  0000'                    l3577:	
 10112                           ;incstack = 0
 10113                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10114                           
 10115  0000' 0020               	movlb	0	; select bank0
 10116  0001' 082D'              	movf	___flmul@b+3,w
 10117  0002' 3980               	andlw	128
 10118  0003' 00B2'              	movwf	??___flmul
 10119  0004' 0832'              	movf	??___flmul,w
 10120  0005' 00B7'              	movwf	___flmul@sign
 10121  0006'                    l3579:
 10122  0006' 352D'              	lslf	___flmul@b+3,w
 10123  0007' 00B2'              	movwf	??___flmul
 10124  0008' 0832'              	movf	??___flmul,w
 10125  0009' 00BD'              	movwf	___flmul@bexp
 10126  000A'                    l3581:
 10127  000A' 1FAC'              	btfss	___flmul@b+2,7
 10128  000B' 2800'              	goto	u4781
 10129  000C' 2800'              	goto	u4780
 10130  000D'                    u4781:
 10131  000D' 2800'              	goto	l3585
 10132  000E'                    u4780:
 10133  000E'                    l3583:
 10134  000E' 143D'              	bsf	___flmul@bexp,0
 10135  000F'                    l3585:
 10136  000F' 083D'              	movf	___flmul@bexp,w
 10137  0010' 1903               	btfsc	3,2
 10138  0011' 2800'              	goto	u4791
 10139  0012' 2800'              	goto	u4790
 10140  0013'                    u4791:
 10141  0013' 2800'              	goto	l3593
 10142  0014'                    u4790:
 10143  0014'                    l3587:
 10144  0014' 0A3D'              	incf	___flmul@bexp,w
 10145  0015' 1D03               	btfss	3,2
 10146  0016' 2800'              	goto	u4801
 10147  0017' 2800'              	goto	u4800
 10148  0018'                    u4801:
 10149  0018' 2800'              	goto	l3591
 10150  0019'                    u4800:
 10151  0019'                    l3589:
 10152  0019' 3000               	movlw	0
 10153  001A' 00AD'              	movwf	___flmul@b+3
 10154  001B' 3000               	movlw	0
 10155  001C' 00AC'              	movwf	___flmul@b+2
 10156  001D' 3000               	movlw	0
 10157  001E' 00AB'              	movwf	___flmul@b+1
 10158  001F' 3000               	movlw	0
 10159  0020' 00AA'              	movwf	___flmul@b
 10160  0021'                    l3591:
 10161  0021' 17AC'              	bsf	___flmul@b+2,7
 10162  0022' 2800'              	goto	l3595
 10163  0023'                    l3593:
 10164  0023' 3000               	movlw	0
 10165  0024' 00AD'              	movwf	___flmul@b+3
 10166  0025' 3000               	movlw	0
 10167  0026' 00AC'              	movwf	___flmul@b+2
 10168  0027' 3000               	movlw	0
 10169  0028' 00AB'              	movwf	___flmul@b+1
 10170  0029' 3000               	movlw	0
 10171  002A' 00AA'              	movwf	___flmul@b
 10172  002B'                    l3595:
 10173  002B' 0831'              	movf	___flmul@a+3,w
 10174  002C' 3980               	andlw	128
 10175  002D' 00B2'              	movwf	??___flmul
 10176  002E' 0832'              	movf	??___flmul,w
 10177  002F' 06B7'              	xorwf	___flmul@sign,f
 10178  0030'                    l3597:
 10179  0030' 3531'              	lslf	___flmul@a+3,w
 10180  0031' 00B2'              	movwf	??___flmul
 10181  0032' 0832'              	movf	??___flmul,w
 10182  0033' 00BC'              	movwf	___flmul@aexp
 10183  0034'                    l3599:
 10184  0034' 1FB0'              	btfss	___flmul@a+2,7
 10185  0035' 2800'              	goto	u4811
 10186  0036' 2800'              	goto	u4810
 10187  0037'                    u4811:
 10188  0037' 2800'              	goto	l3603
 10189  0038'                    u4810:
 10190  0038'                    l3601:
 10191  0038' 143C'              	bsf	___flmul@aexp,0
 10192  0039'                    l3603:
 10193  0039' 083C'              	movf	___flmul@aexp,w
 10194  003A' 1903               	btfsc	3,2
 10195  003B' 2800'              	goto	u4821
 10196  003C' 2800'              	goto	u4820
 10197  003D'                    u4821:
 10198  003D' 2800'              	goto	l3611
 10199  003E'                    u4820:
 10200  003E'                    l3605:
 10201  003E' 0A3C'              	incf	___flmul@aexp,w
 10202  003F' 1D03               	btfss	3,2
 10203  0040' 2800'              	goto	u4831
 10204  0041' 2800'              	goto	u4830
 10205  0042'                    u4831:
 10206  0042' 2800'              	goto	l3609
 10207  0043'                    u4830:
 10208  0043'                    l3607:
 10209  0043' 3000               	movlw	0
 10210  0044' 00B1'              	movwf	___flmul@a+3
 10211  0045' 3000               	movlw	0
 10212  0046' 00B0'              	movwf	___flmul@a+2
 10213  0047' 3000               	movlw	0
 10214  0048' 00AF'              	movwf	___flmul@a+1
 10215  0049' 3000               	movlw	0
 10216  004A' 00AE'              	movwf	___flmul@a
 10217  004B'                    l3609:
 10218  004B' 17B0'              	bsf	___flmul@a+2,7
 10219  004C' 2800'              	goto	l3613
 10220  004D'                    l3611:
 10221  004D' 3000               	movlw	0
 10222  004E' 00B1'              	movwf	___flmul@a+3
 10223  004F' 3000               	movlw	0
 10224  0050' 00B0'              	movwf	___flmul@a+2
 10225  0051' 3000               	movlw	0
 10226  0052' 00AF'              	movwf	___flmul@a+1
 10227  0053' 3000               	movlw	0
 10228  0054' 00AE'              	movwf	___flmul@a
 10229  0055'                    l3613:
 10230  0055' 083C'              	movf	___flmul@aexp,w
 10231  0056' 1903               	btfsc	3,2
 10232  0057' 2800'              	goto	u4841
 10233  0058' 2800'              	goto	u4840
 10234  0059'                    u4841:
 10235  0059' 2800'              	goto	l3617
 10236  005A'                    u4840:
 10237  005A'                    l3615:
 10238  005A' 083D'              	movf	___flmul@bexp,w
 10239  005B' 1D03               	btfss	3,2
 10240  005C' 2800'              	goto	u4851
 10241  005D' 2800'              	goto	u4850
 10242  005E'                    u4851:
 10243  005E' 2800'              	goto	l3621
 10244  005F'                    u4850:
 10245  005F'                    l3617:
 10246  005F' 3000               	movlw	0
 10247  0060' 00AD'              	movwf	?___flmul+3
 10248  0061' 3000               	movlw	0
 10249  0062' 00AC'              	movwf	?___flmul+2
 10250  0063' 3000               	movlw	0
 10251  0064' 00AB'              	movwf	?___flmul+1
 10252  0065' 3000               	movlw	0
 10253  0066' 00AA'              	movwf	?___flmul
 10254  0067' 2800'              	goto	l809
 10255  0068'                    l3621:
 10256  0068' 082A'              	movf	___flmul@b,w
 10257  0069' 00B2'              	movwf	??___flmul
 10258  006A' 0832'              	movf	??___flmul,w
 10259  006B' 0080'              	movwf	__Umul8_16@multiplicand
 10260  006C' 0830'              	movf	___flmul@a+2,w
 10261  006D' 3180' 2000' 3180'  	fcall	__Umul8_16
 10262  0070' 0801'              	movf	?__Umul8_16+1,w
 10263  0071' 0020               	movlb	0	; select bank0
 10264  0072' 00C3'              	movwf	___flmul@temp+1
 10265  0073' 0800'              	movf	?__Umul8_16,w
 10266  0074' 00C2'              	movwf	___flmul@temp
 10267  0075'                    l3623:
 10268  0075' 0842'              	movf	___flmul@temp,w
 10269  0076' 00B2'              	movwf	??___flmul
 10270  0077' 01B3'              	clrf	??___flmul+1
 10271  0078' 01B4'              	clrf	??___flmul+2
 10272  0079' 01B5'              	clrf	??___flmul+3
 10273  007A' 0835'              	movf	??___flmul+3,w
 10274  007B' 00BB'              	movwf	___flmul@grs+3
 10275  007C' 0834'              	movf	??___flmul+2,w
 10276  007D' 00BA'              	movwf	___flmul@grs+2
 10277  007E' 0833'              	movf	??___flmul+1,w
 10278  007F' 00B9'              	movwf	___flmul@grs+1
 10279  0080' 0832'              	movf	??___flmul,w
 10280  0081' 00B8'              	movwf	___flmul@grs
 10281  0082'                    l3625:
 10282  0082' 0843'              	movf	___flmul@temp+1,w
 10283  0083' 00B2'              	movwf	??___flmul
 10284  0084' 01B3'              	clrf	??___flmul+1
 10285  0085' 01B4'              	clrf	??___flmul+2
 10286  0086' 01B5'              	clrf	??___flmul+3
 10287  0087' 0835'              	movf	??___flmul+3,w
 10288  0088' 00C1'              	movwf	___flmul@prod+3
 10289  0089' 0834'              	movf	??___flmul+2,w
 10290  008A' 00C0'              	movwf	___flmul@prod+2
 10291  008B' 0833'              	movf	??___flmul+1,w
 10292  008C' 00BF'              	movwf	___flmul@prod+1
 10293  008D' 0832'              	movf	??___flmul,w
 10294  008E' 00BE'              	movwf	___flmul@prod
 10295  008F' 082B'              	movf	___flmul@b+1,w
 10296  0090' 00B2'              	movwf	??___flmul
 10297  0091' 0832'              	movf	??___flmul,w
 10298  0092' 0080'              	movwf	__Umul8_16@multiplicand
 10299  0093' 082F'              	movf	___flmul@a+1,w
 10300  0094' 3180' 2000' 3180'  	fcall	__Umul8_16
 10301  0097' 0801'              	movf	?__Umul8_16+1,w
 10302  0098' 0020               	movlb	0	; select bank0
 10303  0099' 00C3'              	movwf	___flmul@temp+1
 10304  009A' 0800'              	movf	?__Umul8_16,w
 10305  009B' 00C2'              	movwf	___flmul@temp
 10306  009C'                    l3627:
 10307  009C' 0842'              	movf	___flmul@temp,w
 10308  009D' 00B2'              	movwf	??___flmul
 10309  009E' 01B3'              	clrf	??___flmul+1
 10310  009F' 01B4'              	clrf	??___flmul+2
 10311  00A0' 01B5'              	clrf	??___flmul+3
 10312  00A1' 0832'              	movf	??___flmul,w
 10313  00A2' 07B8'              	addwf	___flmul@grs,f
 10314  00A3' 0833'              	movf	??___flmul+1,w
 10315  00A4' 3DB9'              	addwfc	___flmul@grs+1,f
 10316  00A5' 0834'              	movf	??___flmul+2,w
 10317  00A6' 3DBA'              	addwfc	___flmul@grs+2,f
 10318  00A7' 0835'              	movf	??___flmul+3,w
 10319  00A8' 3DBB'              	addwfc	___flmul@grs+3,f
 10320  00A9'                    l3629:
 10321  00A9' 0843'              	movf	___flmul@temp+1,w
 10322  00AA' 00B2'              	movwf	??___flmul
 10323  00AB' 01B3'              	clrf	??___flmul+1
 10324  00AC' 01B4'              	clrf	??___flmul+2
 10325  00AD' 01B5'              	clrf	??___flmul+3
 10326  00AE' 0832'              	movf	??___flmul,w
 10327  00AF' 07BE'              	addwf	___flmul@prod,f
 10328  00B0' 0833'              	movf	??___flmul+1,w
 10329  00B1' 3DBF'              	addwfc	___flmul@prod+1,f
 10330  00B2' 0834'              	movf	??___flmul+2,w
 10331  00B3' 3DC0'              	addwfc	___flmul@prod+2,f
 10332  00B4' 0835'              	movf	??___flmul+3,w
 10333  00B5' 3DC1'              	addwfc	___flmul@prod+3,f
 10334  00B6' 082C'              	movf	___flmul@b+2,w
 10335  00B7' 00B2'              	movwf	??___flmul
 10336  00B8' 0832'              	movf	??___flmul,w
 10337  00B9' 0080'              	movwf	__Umul8_16@multiplicand
 10338  00BA' 082E'              	movf	___flmul@a,w
 10339  00BB' 3180' 2000' 3180'  	fcall	__Umul8_16
 10340  00BE' 0801'              	movf	?__Umul8_16+1,w
 10341  00BF' 0020               	movlb	0	; select bank0
 10342  00C0' 00C3'              	movwf	___flmul@temp+1
 10343  00C1' 0800'              	movf	?__Umul8_16,w
 10344  00C2' 00C2'              	movwf	___flmul@temp
 10345  00C3'                    l3631:
 10346  00C3' 0842'              	movf	___flmul@temp,w
 10347  00C4' 00B2'              	movwf	??___flmul
 10348  00C5' 01B3'              	clrf	??___flmul+1
 10349  00C6' 01B4'              	clrf	??___flmul+2
 10350  00C7' 01B5'              	clrf	??___flmul+3
 10351  00C8' 0832'              	movf	??___flmul,w
 10352  00C9' 07B8'              	addwf	___flmul@grs,f
 10353  00CA' 0833'              	movf	??___flmul+1,w
 10354  00CB' 3DB9'              	addwfc	___flmul@grs+1,f
 10355  00CC' 0834'              	movf	??___flmul+2,w
 10356  00CD' 3DBA'              	addwfc	___flmul@grs+2,f
 10357  00CE' 0835'              	movf	??___flmul+3,w
 10358  00CF' 3DBB'              	addwfc	___flmul@grs+3,f
 10359  00D0'                    l3633:
 10360  00D0' 0843'              	movf	___flmul@temp+1,w
 10361  00D1' 00B2'              	movwf	??___flmul
 10362  00D2' 01B3'              	clrf	??___flmul+1
 10363  00D3' 01B4'              	clrf	??___flmul+2
 10364  00D4' 01B5'              	clrf	??___flmul+3
 10365  00D5' 0832'              	movf	??___flmul,w
 10366  00D6' 07BE'              	addwf	___flmul@prod,f
 10367  00D7' 0833'              	movf	??___flmul+1,w
 10368  00D8' 3DBF'              	addwfc	___flmul@prod+1,f
 10369  00D9' 0834'              	movf	??___flmul+2,w
 10370  00DA' 3DC0'              	addwfc	___flmul@prod+2,f
 10371  00DB' 0835'              	movf	??___flmul+3,w
 10372  00DC' 3DC1'              	addwfc	___flmul@prod+3,f
 10373  00DD'                    l3635:
 10374  00DD' 3008               	movlw	8
 10375  00DE'                    u4865:
 10376  00DE' 35B8'              	lslf	___flmul@grs,f
 10377  00DF' 0DB9'              	rlf	___flmul@grs+1,f
 10378  00E0' 0DBA'              	rlf	___flmul@grs+2,f
 10379  00E1' 0DBB'              	rlf	___flmul@grs+3,f
 10380  00E2' 0B89               	decfsz	9,f
 10381  00E3' 2800'              	goto	u4865
 10382  00E4'                    l3637:
 10383  00E4' 082B'              	movf	___flmul@b+1,w
 10384  00E5' 00B2'              	movwf	??___flmul
 10385  00E6' 0832'              	movf	??___flmul,w
 10386  00E7' 0080'              	movwf	__Umul8_16@multiplicand
 10387  00E8' 082E'              	movf	___flmul@a,w
 10388  00E9' 3180' 2000' 3180'  	fcall	__Umul8_16
 10389  00EC' 0801'              	movf	?__Umul8_16+1,w
 10390  00ED' 0020               	movlb	0	; select bank0
 10391  00EE' 00C3'              	movwf	___flmul@temp+1
 10392  00EF' 0800'              	movf	?__Umul8_16,w
 10393  00F0' 00C2'              	movwf	___flmul@temp
 10394  00F1'                    l3639:
 10395  00F1' 0842'              	movf	___flmul@temp,w
 10396  00F2' 07B8'              	addwf	___flmul@grs,f
 10397  00F3' 0843'              	movf	___flmul@temp+1,w
 10398  00F4' 3DB9'              	addwfc	___flmul@grs+1,f
 10399  00F5' 3000               	movlw	0
 10400  00F6' 3DBA'              	addwfc	___flmul@grs+2,f
 10401  00F7' 3DBB'              	addwfc	___flmul@grs+3,f
 10402  00F8'                    l3641:
 10403  00F8' 082A'              	movf	___flmul@b,w
 10404  00F9' 00B2'              	movwf	??___flmul
 10405  00FA' 0832'              	movf	??___flmul,w
 10406  00FB' 0080'              	movwf	__Umul8_16@multiplicand
 10407  00FC' 082F'              	movf	___flmul@a+1,w
 10408  00FD' 3180' 2000' 3180'  	fcall	__Umul8_16
 10409  0100' 0801'              	movf	?__Umul8_16+1,w
 10410  0101' 0020               	movlb	0	; select bank0
 10411  0102' 00C3'              	movwf	___flmul@temp+1
 10412  0103' 0800'              	movf	?__Umul8_16,w
 10413  0104' 00C2'              	movwf	___flmul@temp
 10414  0105'                    l3643:
 10415  0105' 0842'              	movf	___flmul@temp,w
 10416  0106' 07B8'              	addwf	___flmul@grs,f
 10417  0107' 0843'              	movf	___flmul@temp+1,w
 10418  0108' 3DB9'              	addwfc	___flmul@grs+1,f
 10419  0109' 3000               	movlw	0
 10420  010A' 3DBA'              	addwfc	___flmul@grs+2,f
 10421  010B' 3DBB'              	addwfc	___flmul@grs+3,f
 10422  010C'                    l3645:
 10423  010C' 3008               	movlw	8
 10424  010D'                    u4875:
 10425  010D' 35B8'              	lslf	___flmul@grs,f
 10426  010E' 0DB9'              	rlf	___flmul@grs+1,f
 10427  010F' 0DBA'              	rlf	___flmul@grs+2,f
 10428  0110' 0DBB'              	rlf	___flmul@grs+3,f
 10429  0111' 0B89               	decfsz	9,f
 10430  0112' 2800'              	goto	u4875
 10431  0113' 082A'              	movf	___flmul@b,w
 10432  0114' 00B2'              	movwf	??___flmul
 10433  0115' 0832'              	movf	??___flmul,w
 10434  0116' 0080'              	movwf	__Umul8_16@multiplicand
 10435  0117' 082E'              	movf	___flmul@a,w
 10436  0118' 3180' 2000' 3180'  	fcall	__Umul8_16
 10437  011B' 0801'              	movf	?__Umul8_16+1,w
 10438  011C' 0020               	movlb	0	; select bank0
 10439  011D' 00C3'              	movwf	___flmul@temp+1
 10440  011E' 0800'              	movf	?__Umul8_16,w
 10441  011F' 00C2'              	movwf	___flmul@temp
 10442  0120'                    l3647:
 10443  0120' 0842'              	movf	___flmul@temp,w
 10444  0121' 07B8'              	addwf	___flmul@grs,f
 10445  0122' 0843'              	movf	___flmul@temp+1,w
 10446  0123' 3DB9'              	addwfc	___flmul@grs+1,f
 10447  0124' 3000               	movlw	0
 10448  0125' 3DBA'              	addwfc	___flmul@grs+2,f
 10449  0126' 3DBB'              	addwfc	___flmul@grs+3,f
 10450  0127'                    l3649:
 10451  0127' 082B'              	movf	___flmul@b+1,w
 10452  0128' 00B2'              	movwf	??___flmul
 10453  0129' 0832'              	movf	??___flmul,w
 10454  012A' 0080'              	movwf	__Umul8_16@multiplicand
 10455  012B' 0830'              	movf	___flmul@a+2,w
 10456  012C' 3180' 2000' 3180'  	fcall	__Umul8_16
 10457  012F' 0801'              	movf	?__Umul8_16+1,w
 10458  0130' 0020               	movlb	0	; select bank0
 10459  0131' 00C3'              	movwf	___flmul@temp+1
 10460  0132' 0800'              	movf	?__Umul8_16,w
 10461  0133' 00C2'              	movwf	___flmul@temp
 10462  0134' 0842'              	movf	___flmul@temp,w
 10463  0135' 07BE'              	addwf	___flmul@prod,f
 10464  0136' 0843'              	movf	___flmul@temp+1,w
 10465  0137' 3DBF'              	addwfc	___flmul@prod+1,f
 10466  0138' 3000               	movlw	0
 10467  0139' 3DC0'              	addwfc	___flmul@prod+2,f
 10468  013A' 3DC1'              	addwfc	___flmul@prod+3,f
 10469  013B'                    l3651:
 10470  013B' 082C'              	movf	___flmul@b+2,w
 10471  013C' 00B2'              	movwf	??___flmul
 10472  013D' 0832'              	movf	??___flmul,w
 10473  013E' 0080'              	movwf	__Umul8_16@multiplicand
 10474  013F' 082F'              	movf	___flmul@a+1,w
 10475  0140' 3180' 2000' 3180'  	fcall	__Umul8_16
 10476  0143' 0801'              	movf	?__Umul8_16+1,w
 10477  0144' 0020               	movlb	0	; select bank0
 10478  0145' 00C3'              	movwf	___flmul@temp+1
 10479  0146' 0800'              	movf	?__Umul8_16,w
 10480  0147' 00C2'              	movwf	___flmul@temp
 10481  0148'                    l3653:
 10482  0148' 0842'              	movf	___flmul@temp,w
 10483  0149' 07BE'              	addwf	___flmul@prod,f
 10484  014A' 0843'              	movf	___flmul@temp+1,w
 10485  014B' 3DBF'              	addwfc	___flmul@prod+1,f
 10486  014C' 3000               	movlw	0
 10487  014D' 3DC0'              	addwfc	___flmul@prod+2,f
 10488  014E' 3DC1'              	addwfc	___flmul@prod+3,f
 10489  014F' 082C'              	movf	___flmul@b+2,w
 10490  0150' 00B2'              	movwf	??___flmul
 10491  0151' 0832'              	movf	??___flmul,w
 10492  0152' 0080'              	movwf	__Umul8_16@multiplicand
 10493  0153' 0830'              	movf	___flmul@a+2,w
 10494  0154' 3180' 2000' 3180'  	fcall	__Umul8_16
 10495  0157' 0801'              	movf	?__Umul8_16+1,w
 10496  0158' 0020               	movlb	0	; select bank0
 10497  0159' 00C3'              	movwf	___flmul@temp+1
 10498  015A' 0800'              	movf	?__Umul8_16,w
 10499  015B' 00C2'              	movwf	___flmul@temp
 10500  015C'                    l3655:
 10501  015C' 0842'              	movf	___flmul@temp,w
 10502  015D' 00B2'              	movwf	??___flmul
 10503  015E' 0843'              	movf	___flmul@temp+1,w
 10504  015F' 00B3'              	movwf	??___flmul+1
 10505  0160' 01B4'              	clrf	??___flmul+2
 10506  0161' 01B5'              	clrf	??___flmul+3
 10507  0162' 3008               	movlw	8
 10508  0163'                    u4885:
 10509  0163' 35B2'              	lslf	??___flmul,f
 10510  0164' 0DB3'              	rlf	??___flmul+1,f
 10511  0165' 0DB4'              	rlf	??___flmul+2,f
 10512  0166' 0DB5'              	rlf	??___flmul+3,f
 10513  0167'                    u4880:
 10514  0167' 0B89               	decfsz	9,f
 10515  0168' 2800'              	goto	u4885
 10516  0169' 0832'              	movf	??___flmul,w
 10517  016A' 07BE'              	addwf	___flmul@prod,f
 10518  016B' 0833'              	movf	??___flmul+1,w
 10519  016C' 3DBF'              	addwfc	___flmul@prod+1,f
 10520  016D' 0834'              	movf	??___flmul+2,w
 10521  016E' 3DC0'              	addwfc	___flmul@prod+2,f
 10522  016F' 0835'              	movf	??___flmul+3,w
 10523  0170' 3DC1'              	addwfc	___flmul@prod+3,f
 10524  0171'                    l3657:
 10525  0171' 0838'              	movf	___flmul@grs,w
 10526  0172' 00B2'              	movwf	??___flmul
 10527  0173' 0839'              	movf	___flmul@grs+1,w
 10528  0174' 00B3'              	movwf	??___flmul+1
 10529  0175' 083A'              	movf	___flmul@grs+2,w
 10530  0176' 00B4'              	movwf	??___flmul+2
 10531  0177' 083B'              	movf	___flmul@grs+3,w
 10532  0178' 00B5'              	movwf	??___flmul+3
 10533  0179' 3018               	movlw	24
 10534  017A'                    u4895:
 10535  017A' 36B5'              	lsrf	??___flmul+3,f
 10536  017B' 0CB4'              	rrf	??___flmul+2,f
 10537  017C' 0CB3'              	rrf	??___flmul+1,f
 10538  017D' 0CB2'              	rrf	??___flmul,f
 10539  017E'                    u4890:
 10540  017E' 0B89               	decfsz	9,f
 10541  017F' 2800'              	goto	u4895
 10542  0180' 0832'              	movf	??___flmul,w
 10543  0181' 07BE'              	addwf	___flmul@prod,f
 10544  0182' 0833'              	movf	??___flmul+1,w
 10545  0183' 3DBF'              	addwfc	___flmul@prod+1,f
 10546  0184' 0834'              	movf	??___flmul+2,w
 10547  0185' 3DC0'              	addwfc	___flmul@prod+2,f
 10548  0186' 0835'              	movf	??___flmul+3,w
 10549  0187' 3DC1'              	addwfc	___flmul@prod+3,f
 10550  0188'                    l3659:
 10551  0188' 3008               	movlw	8
 10552  0189'                    u4905:
 10553  0189' 35B8'              	lslf	___flmul@grs,f
 10554  018A' 0DB9'              	rlf	___flmul@grs+1,f
 10555  018B' 0DBA'              	rlf	___flmul@grs+2,f
 10556  018C' 0DBB'              	rlf	___flmul@grs+3,f
 10557  018D' 0B89               	decfsz	9,f
 10558  018E' 2800'              	goto	u4905
 10559  018F'                    l3661:
 10560  018F' 083D'              	movf	___flmul@bexp,w
 10561  0190' 073C'              	addwf	___flmul@aexp,w
 10562  0191' 00B2'              	movwf	??___flmul
 10563  0192' 01B3'              	clrf	??___flmul+1
 10564  0193' 0DB3'              	rlf	??___flmul+1,f
 10565  0194' 0832'              	movf	??___flmul,w
 10566  0195' 3E82               	addlw	130
 10567  0196' 00C2'              	movwf	___flmul@temp
 10568  0197' 30FF               	movlw	255
 10569  0198' 3D33'              	addwfc	??___flmul+1,w
 10570  0199' 00C3'              	movwf	___flmul@temp+1
 10571  019A' 2800'              	goto	l3673
 10572  019B'                    l3663:
 10573  019B' 3001               	movlw	1
 10574  019C'                    u4915:
 10575  019C' 35BE'              	lslf	___flmul@prod,f
 10576  019D' 0DBF'              	rlf	___flmul@prod+1,f
 10577  019E' 0DC0'              	rlf	___flmul@prod+2,f
 10578  019F' 0DC1'              	rlf	___flmul@prod+3,f
 10579  01A0' 0B89               	decfsz	9,f
 10580  01A1' 2800'              	goto	u4915
 10581  01A2'                    l3665:
 10582  01A2' 1FBB'              	btfss	___flmul@grs+3,7
 10583  01A3' 2800'              	goto	u4921
 10584  01A4' 2800'              	goto	u4920
 10585  01A5'                    u4921:
 10586  01A5' 2800'              	goto	l3669
 10587  01A6'                    u4920:
 10588  01A6'                    l3667:
 10589  01A6' 143E'              	bsf	___flmul@prod,0
 10590  01A7'                    l3669:
 10591  01A7' 3001               	movlw	1
 10592  01A8'                    u4935:
 10593  01A8' 35B8'              	lslf	___flmul@grs,f
 10594  01A9' 0DB9'              	rlf	___flmul@grs+1,f
 10595  01AA' 0DBA'              	rlf	___flmul@grs+2,f
 10596  01AB' 0DBB'              	rlf	___flmul@grs+3,f
 10597  01AC' 0B89               	decfsz	9,f
 10598  01AD' 2800'              	goto	u4935
 10599  01AE'                    l3671:
 10600  01AE' 30FF               	movlw	255
 10601  01AF' 07C2'              	addwf	___flmul@temp,f
 10602  01B0' 30FF               	movlw	255
 10603  01B1' 3DC3'              	addwfc	___flmul@temp+1,f
 10604  01B2'                    l3673:
 10605  01B2' 1FC0'              	btfss	___flmul@prod+2,7
 10606  01B3' 2800'              	goto	u4941
 10607  01B4' 2800'              	goto	u4940
 10608  01B5'                    u4941:
 10609  01B5' 2800'              	goto	l3663
 10610  01B6'                    u4940:
 10611  01B6'                    l3675:
 10612  01B6' 01BC'              	clrf	___flmul@aexp
 10613  01B7'                    l3677:
 10614  01B7' 1FBB'              	btfss	___flmul@grs+3,7
 10615  01B8' 2800'              	goto	u4951
 10616  01B9' 2800'              	goto	u4950
 10617  01BA'                    u4951:
 10618  01BA' 2800'              	goto	l3685
 10619  01BB'                    u4950:
 10620  01BB'                    l3679:
 10621  01BB' 30FF               	movlw	255
 10622  01BC' 0538'              	andwf	___flmul@grs,w
 10623  01BD' 00B2'              	movwf	??___flmul
 10624  01BE' 30FF               	movlw	255
 10625  01BF' 0539'              	andwf	___flmul@grs+1,w
 10626  01C0' 00B3'              	movwf	??___flmul+1
 10627  01C1' 30FF               	movlw	255
 10628  01C2' 053A'              	andwf	___flmul@grs+2,w
 10629  01C3' 00B4'              	movwf	??___flmul+2
 10630  01C4' 307F               	movlw	127
 10631  01C5' 053B'              	andwf	___flmul@grs+3,w
 10632  01C6' 00B5'              	movwf	??___flmul+3
 10633  01C7' 0835'              	movf	??___flmul+3,w
 10634  01C8' 0434'              	iorwf	??___flmul+2,w
 10635  01C9' 0433'              	iorwf	??___flmul+1,w
 10636  01CA' 0432'              	iorwf	??___flmul,w
 10637  01CB' 1903               	skipnz
 10638  01CC' 2800'              	goto	u4961
 10639  01CD' 2800'              	goto	u4960
 10640  01CE'                    u4961:
 10641  01CE' 2800'              	goto	l815
 10642  01CF'                    u4960:
 10643  01CF'                    l3681:
 10644  01CF' 01BC'              	clrf	___flmul@aexp
 10645  01D0' 0ABC'              	incf	___flmul@aexp,f
 10646  01D1' 2800'              	goto	l3685
 10647  01D2'                    l815:
 10648  01D2' 1C3E'              	btfss	___flmul@prod,0
 10649  01D3' 2800'              	goto	u4971
 10650  01D4' 2800'              	goto	u4970
 10651  01D5'                    u4971:
 10652  01D5' 2800'              	goto	l3685
 10653  01D6'                    u4970:
 10654  01D6' 2800'              	goto	l3681
 10655  01D7'                    l3685:
 10656  01D7' 083C'              	movf	___flmul@aexp,w
 10657  01D8' 1903               	btfsc	3,2
 10658  01D9' 2800'              	goto	u4981
 10659  01DA' 2800'              	goto	u4980
 10660  01DB'                    u4981:
 10661  01DB' 2800'              	goto	l3695
 10662  01DC'                    u4980:
 10663  01DC'                    l3687:
 10664  01DC' 3001               	movlw	1
 10665  01DD' 07BE'              	addwf	___flmul@prod,f
 10666  01DE' 3000               	movlw	0
 10667  01DF' 3DBF'              	addwfc	___flmul@prod+1,f
 10668  01E0' 3000               	movlw	0
 10669  01E1' 3DC0'              	addwfc	___flmul@prod+2,f
 10670  01E2' 3000               	movlw	0
 10671  01E3' 3DC1'              	addwfc	___flmul@prod+3,f
 10672  01E4'                    l3689:
 10673  01E4' 1C41'              	btfss	___flmul@prod+3,0
 10674  01E5' 2800'              	goto	u4991
 10675  01E6' 2800'              	goto	u4990
 10676  01E7'                    u4991:
 10677  01E7' 2800'              	goto	l3695
 10678  01E8'                    u4990:
 10679  01E8'                    l3691:
 10680  01E8' 083E'              	movf	___flmul@prod,w
 10681  01E9' 00B2'              	movwf	??___flmul
 10682  01EA' 083F'              	movf	___flmul@prod+1,w
 10683  01EB' 00B3'              	movwf	??___flmul+1
 10684  01EC' 0840'              	movf	___flmul@prod+2,w
 10685  01ED' 00B4'              	movwf	??___flmul+2
 10686  01EE' 0841'              	movf	___flmul@prod+3,w
 10687  01EF' 00B5'              	movwf	??___flmul+3
 10688  01F0' 3001               	movlw	1
 10689  01F1' 00B6'              	movwf	??___flmul+4
 10690  01F2'                    u5005:
 10691  01F2' 37B5'              	asrf	??___flmul+3,f
 10692  01F3' 0CB4'              	rrf	??___flmul+2,f
 10693  01F4' 0CB3'              	rrf	??___flmul+1,f
 10694  01F5' 0CB2'              	rrf	??___flmul,f
 10695  01F6'                    u5000:
 10696  01F6' 0BB6'              	decfsz	??___flmul+4,f
 10697  01F7' 2800'              	goto	u5005
 10698  01F8' 0835'              	movf	??___flmul+3,w
 10699  01F9' 00C1'              	movwf	___flmul@prod+3
 10700  01FA' 0834'              	movf	??___flmul+2,w
 10701  01FB' 00C0'              	movwf	___flmul@prod+2
 10702  01FC' 0833'              	movf	??___flmul+1,w
 10703  01FD' 00BF'              	movwf	___flmul@prod+1
 10704  01FE' 0832'              	movf	??___flmul,w
 10705  01FF' 00BE'              	movwf	___flmul@prod
 10706  0200'                    l3693:
 10707  0200' 3001               	movlw	1
 10708  0201' 07C2'              	addwf	___flmul@temp,f
 10709  0202' 3000               	movlw	0
 10710  0203' 3DC3'              	addwfc	___flmul@temp+1,f
 10711  0204'                    l3695:
 10712  0204' 0843'              	movf	___flmul@temp+1,w
 10713  0205' 3A80               	xorlw	128
 10714  0206' 00B2'              	movwf	??___flmul
 10715  0207' 3080               	movlw	128
 10716  0208' 0232'              	subwf	??___flmul,w
 10717  0209' 1D03               	skipz
 10718  020A' 2800'              	goto	u5015
 10719  020B' 30FF               	movlw	255
 10720  020C' 0242'              	subwf	___flmul@temp,w
 10721  020D'                    u5015:
 10722  020D' 1C03               	skipc
 10723  020E' 2800'              	goto	u5011
 10724  020F' 2800'              	goto	u5010
 10725  0210'                    u5011:
 10726  0210' 2800'              	goto	l3699
 10727  0211'                    u5010:
 10728  0211'                    l3697:
 10729  0211' 307F               	movlw	127
 10730  0212' 0020               	movlb	0	; select bank0
 10731  0213' 00C1'              	movwf	___flmul@prod+3
 10732  0214' 3080               	movlw	128
 10733  0215' 00C0'              	movwf	___flmul@prod+2
 10734  0216' 3000               	movlw	0
 10735  0217' 00BF'              	movwf	___flmul@prod+1
 10736  0218' 3000               	movlw	0
 10737  0219' 00BE'              	movwf	___flmul@prod
 10738  021A' 2800'              	goto	l821
 10739  021B'                    l3699:
 10740  021B' 0020               	movlb	0	; select bank0
 10741  021C' 0843'              	movf	___flmul@temp+1,w
 10742  021D' 3A80               	xorlw	128
 10743  021E' 00B2'              	movwf	??___flmul
 10744  021F' 3080               	movlw	128
 10745  0220' 0232'              	subwf	??___flmul,w
 10746  0221' 1D03               	skipz
 10747  0222' 2800'              	goto	u5025
 10748  0223' 3001               	movlw	1
 10749  0224' 0242'              	subwf	___flmul@temp,w
 10750  0225'                    u5025:
 10751  0225' 1803               	skipnc
 10752  0226' 2800'              	goto	u5021
 10753  0227' 2800'              	goto	u5020
 10754  0228'                    u5021:
 10755  0228' 2800'              	goto	l3705
 10756  0229'                    u5020:
 10757  0229'                    l3701:
 10758  0229' 3000               	movlw	0
 10759  022A' 0020               	movlb	0	; select bank0
 10760  022B' 00C1'              	movwf	___flmul@prod+3
 10761  022C' 3000               	movlw	0
 10762  022D' 00C0'              	movwf	___flmul@prod+2
 10763  022E' 3000               	movlw	0
 10764  022F' 00BF'              	movwf	___flmul@prod+1
 10765  0230' 3000               	movlw	0
 10766  0231' 00BE'              	movwf	___flmul@prod
 10767  0232'                    l3703:
 10768  0232' 01B7'              	clrf	___flmul@sign
 10769  0233' 2800'              	goto	l821
 10770  0234'                    l3705:
 10771  0234' 0020               	movlb	0	; select bank0
 10772  0235' 0842'              	movf	___flmul@temp,w
 10773  0236' 00B2'              	movwf	??___flmul
 10774  0237' 0832'              	movf	??___flmul,w
 10775  0238' 00BD'              	movwf	___flmul@bexp
 10776  0239' 30FF               	movlw	255
 10777  023A' 05BE'              	andwf	___flmul@prod,f
 10778  023B' 30FF               	movlw	255
 10779  023C' 05BF'              	andwf	___flmul@prod+1,f
 10780  023D' 307F               	movlw	127
 10781  023E' 05C0'              	andwf	___flmul@prod+2,f
 10782  023F' 3000               	movlw	0
 10783  0240' 05C1'              	andwf	___flmul@prod+3,f
 10784  0241'                    l3707:
 10785  0241' 1C3D'              	btfss	___flmul@bexp,0
 10786  0242' 2800'              	goto	u5031
 10787  0243' 2800'              	goto	u5030
 10788  0244'                    u5031:
 10789  0244' 2800'              	goto	l3711
 10790  0245'                    u5030:
 10791  0245'                    l3709:
 10792  0245' 17C0'              	bsf	___flmul@prod+2,7
 10793  0246'                    l3711:
 10794  0246' 363D'              	lsrf	___flmul@bexp,w
 10795  0247' 00B2'              	movwf	??___flmul
 10796  0248' 0832'              	movf	??___flmul,w
 10797  0249' 00C1'              	movwf	___flmul@prod+3
 10798  024A'                    l821:
 10799  024A' 0837'              	movf	___flmul@sign,w
 10800  024B' 00B2'              	movwf	??___flmul
 10801  024C' 0832'              	movf	??___flmul,w
 10802  024D' 04C1'              	iorwf	___flmul@prod+3,f
 10803  024E'                    l3713:
 10804  024E' 0841'              	movf	___flmul@prod+3,w
 10805  024F' 00AD'              	movwf	?___flmul+3
 10806  0250' 0840'              	movf	___flmul@prod+2,w
 10807  0251' 00AC'              	movwf	?___flmul+2
 10808  0252' 083F'              	movf	___flmul@prod+1,w
 10809  0253' 00AB'              	movwf	?___flmul+1
 10810  0254' 083E'              	movf	___flmul@prod,w
 10811  0255' 00AA'              	movwf	?___flmul
 10812  0256'                    l809:
 10813  0256' 0008               	return
 10814  0257'                    __end_of___flmul:
 10815                           
 10816                           	psect	text16
 10817  0000'                    __ptext16:	
 10818 ;; *************** function __Umul8_16 *****************
 10819 ;; Defined at:
 10820 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8_16.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  multiplier      1    wreg     unsigned char 
 10823 ;;  multiplicand    1    0[COMMON] unsigned char 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  multiplier      1    8[COMMON] unsigned char 
 10826 ;;  word_mpld       2    6[COMMON] unsigned int 
 10827 ;;  product         2    4[COMMON] unsigned int 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  2    0[COMMON] unsigned int 
 10830 ;; Registers used:
 10831 ;;		wreg, status,2, status,0
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;Total ram usage:        9 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; This function calls:
 10844 ;;		Nothing
 10845 ;; This function is called by:
 10846 ;;		___flmul
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           
 10851                           ;psect for function __Umul8_16
 10852  0000'                    __Umul8_16:
 10853                           
 10854                           ;incstack = 0
 10855                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10856                           ;__Umul8_16@multiplier stored from wreg
 10857  0000' 0088'              	movwf	__Umul8_16@multiplier
 10858  0001'                    l3155:
 10859  0001' 0184'              	clrf	__Umul8_16@product
 10860  0002' 0185'              	clrf	__Umul8_16@product+1
 10861  0003'                    l3157:
 10862  0003' 0800'              	movf	__Umul8_16@multiplicand,w
 10863  0004' 0082'              	movwf	??__Umul8_16
 10864  0005' 0183'              	clrf	??__Umul8_16+1
 10865  0006' 0802'              	movf	??__Umul8_16,w
 10866  0007' 0086'              	movwf	__Umul8_16@word_mpld
 10867  0008' 0803'              	movf	??__Umul8_16+1,w
 10868  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
 10869  000A'                    l3159:
 10870  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
 10871  000B' 2800'              	goto	u3791
 10872  000C' 2800'              	goto	u3790
 10873  000D'                    u3791:
 10874  000D' 2800'              	goto	l828
 10875  000E'                    u3790:
 10876  000E'                    l3161:
 10877  000E' 0806'              	movf	__Umul8_16@word_mpld,w
 10878  000F' 0784'              	addwf	__Umul8_16@product,f
 10879  0010' 0807'              	movf	__Umul8_16@word_mpld+1,w
 10880  0011' 3D85'              	addwfc	__Umul8_16@product+1,f
 10881  0012'                    l828:
 10882  0012' 3001               	movlw	1
 10883  0013'                    u3805:
 10884  0013' 3586'              	lslf	__Umul8_16@word_mpld,f
 10885  0014' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
 10886  0015' 0B89               	decfsz	9,f
 10887  0016' 2800'              	goto	u3805
 10888  0017' 1003               	clrc
 10889  0018' 0C88'              	rrf	__Umul8_16@multiplier,f
 10890  0019'                    l3163:
 10891  0019' 0808'              	movf	__Umul8_16@multiplier,w
 10892  001A' 1D03               	btfss	3,2
 10893  001B' 2800'              	goto	u3811
 10894  001C' 2800'              	goto	u3810
 10895  001D'                    u3811:
 10896  001D' 2800'              	goto	l3159
 10897  001E'                    u3810:
 10898  001E'                    l3165:
 10899  001E' 0805'              	movf	__Umul8_16@product+1,w
 10900  001F' 0081'              	movwf	?__Umul8_16+1
 10901  0020' 0804'              	movf	__Umul8_16@product,w
 10902  0021' 0080'              	movwf	?__Umul8_16
 10903  0022'                    l830:
 10904  0022' 0008               	return
 10905  0023'                    __end_of__Umul8_16:
 10906                           
 10907                           	psect	text17
 10908  0000'                    __ptext17:	
 10909 ;; *************** function ___flge *****************
 10910 ;; Defined at:
 10911 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;  ff1             4   68[BANK0 ] unsigned int 
 10914 ;;  ff2             4   72[BANK0 ] unsigned int 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;		None               void
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10926 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;Total ram usage:       12 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_efgtoa
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           
 10940                           ;psect for function ___flge
 10941  0000'                    ___flge:
 10942  0000'                    l3367:	
 10943                           ;incstack = 0
 10944                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10945                           
 10946  0000' 3000               	movlw	0
 10947  0001' 0020               	movlb	0	; select bank0
 10948  0002' 0544'              	andwf	___flge@ff1,w
 10949  0003' 00CC'              	movwf	??___flge
 10950  0004' 3000               	movlw	0
 10951  0005' 0545'              	andwf	___flge@ff1+1,w
 10952  0006' 00CD'              	movwf	??___flge+1
 10953  0007' 3080               	movlw	128
 10954  0008' 0546'              	andwf	___flge@ff1+2,w
 10955  0009' 00CE'              	movwf	??___flge+2
 10956  000A' 307F               	movlw	127
 10957  000B' 0547'              	andwf	___flge@ff1+3,w
 10958  000C' 00CF'              	movwf	??___flge+3
 10959  000D' 084F'              	movf	??___flge+3,w
 10960  000E' 044E'              	iorwf	??___flge+2,w
 10961  000F' 044D'              	iorwf	??___flge+1,w
 10962  0010' 044C'              	iorwf	??___flge,w
 10963  0011' 1D03               	skipz
 10964  0012' 2800'              	goto	u4331
 10965  0013' 2800'              	goto	u4330
 10966  0014'                    u4331:
 10967  0014' 2800'              	goto	l590
 10968  0015'                    u4330:
 10969  0015'                    l3369:
 10970  0015' 3000               	movlw	0
 10971  0016' 00C7'              	movwf	___flge@ff1+3
 10972  0017' 3000               	movlw	0
 10973  0018' 00C6'              	movwf	___flge@ff1+2
 10974  0019' 3000               	movlw	0
 10975  001A' 00C5'              	movwf	___flge@ff1+1
 10976  001B' 3000               	movlw	0
 10977  001C' 00C4'              	movwf	___flge@ff1
 10978  001D'                    l590:
 10979  001D' 3000               	movlw	0
 10980  001E' 0548'              	andwf	___flge@ff2,w
 10981  001F' 00CC'              	movwf	??___flge
 10982  0020' 3000               	movlw	0
 10983  0021' 0549'              	andwf	___flge@ff2+1,w
 10984  0022' 00CD'              	movwf	??___flge+1
 10985  0023' 3080               	movlw	128
 10986  0024' 054A'              	andwf	___flge@ff2+2,w
 10987  0025' 00CE'              	movwf	??___flge+2
 10988  0026' 307F               	movlw	127
 10989  0027' 054B'              	andwf	___flge@ff2+3,w
 10990  0028' 00CF'              	movwf	??___flge+3
 10991  0029' 084F'              	movf	??___flge+3,w
 10992  002A' 044E'              	iorwf	??___flge+2,w
 10993  002B' 044D'              	iorwf	??___flge+1,w
 10994  002C' 044C'              	iorwf	??___flge,w
 10995  002D' 1D03               	skipz
 10996  002E' 2800'              	goto	u4341
 10997  002F' 2800'              	goto	u4340
 10998  0030'                    u4341:
 10999  0030' 2800'              	goto	l3373
 11000  0031'                    u4340:
 11001  0031'                    l3371:
 11002  0031' 3000               	movlw	0
 11003  0032' 00CB'              	movwf	___flge@ff2+3
 11004  0033' 3000               	movlw	0
 11005  0034' 00CA'              	movwf	___flge@ff2+2
 11006  0035' 3000               	movlw	0
 11007  0036' 00C9'              	movwf	___flge@ff2+1
 11008  0037' 3000               	movlw	0
 11009  0038' 00C8'              	movwf	___flge@ff2
 11010  0039'                    l3373:
 11011  0039' 1FC7'              	btfss	___flge@ff1+3,7
 11012  003A' 2800'              	goto	u4351
 11013  003B' 2800'              	goto	u4350
 11014  003C'                    u4351:
 11015  003C' 2800'              	goto	l3377
 11016  003D'                    u4350:
 11017  003D'                    l3375:
 11018  003D' 3000               	movlw	0
 11019  003E' 00CC'              	movwf	??___flge
 11020  003F' 3000               	movlw	0
 11021  0040' 00CD'              	movwf	??___flge+1
 11022  0041' 3000               	movlw	0
 11023  0042' 00CE'              	movwf	??___flge+2
 11024  0043' 3080               	movlw	128
 11025  0044' 00CF'              	movwf	??___flge+3
 11026  0045' 0844'              	movf	___flge@ff1,w
 11027  0046' 02CC'              	subwf	??___flge,f
 11028  0047' 0845'              	movf	___flge@ff1+1,w
 11029  0048' 3BCD'              	subwfb	??___flge+1,f
 11030  0049' 0846'              	movf	___flge@ff1+2,w
 11031  004A' 3BCE'              	subwfb	??___flge+2,f
 11032  004B' 0847'              	movf	___flge@ff1+3,w
 11033  004C' 3BCF'              	subwfb	??___flge+3,f
 11034  004D' 084F'              	movf	??___flge+3,w
 11035  004E' 00C7'              	movwf	___flge@ff1+3
 11036  004F' 084E'              	movf	??___flge+2,w
 11037  0050' 00C6'              	movwf	___flge@ff1+2
 11038  0051' 084D'              	movf	??___flge+1,w
 11039  0052' 00C5'              	movwf	___flge@ff1+1
 11040  0053' 084C'              	movf	??___flge,w
 11041  0054' 00C4'              	movwf	___flge@ff1
 11042  0055'                    l3377:
 11043  0055' 1FCB'              	btfss	___flge@ff2+3,7
 11044  0056' 2800'              	goto	u4361
 11045  0057' 2800'              	goto	u4360
 11046  0058'                    u4361:
 11047  0058' 2800'              	goto	l593
 11048  0059'                    u4360:
 11049  0059'                    l3379:
 11050  0059' 3000               	movlw	0
 11051  005A' 00CC'              	movwf	??___flge
 11052  005B' 3000               	movlw	0
 11053  005C' 00CD'              	movwf	??___flge+1
 11054  005D' 3000               	movlw	0
 11055  005E' 00CE'              	movwf	??___flge+2
 11056  005F' 3080               	movlw	128
 11057  0060' 00CF'              	movwf	??___flge+3
 11058  0061' 0848'              	movf	___flge@ff2,w
 11059  0062' 02CC'              	subwf	??___flge,f
 11060  0063' 0849'              	movf	___flge@ff2+1,w
 11061  0064' 3BCD'              	subwfb	??___flge+1,f
 11062  0065' 084A'              	movf	___flge@ff2+2,w
 11063  0066' 3BCE'              	subwfb	??___flge+2,f
 11064  0067' 084B'              	movf	___flge@ff2+3,w
 11065  0068' 3BCF'              	subwfb	??___flge+3,f
 11066  0069' 084F'              	movf	??___flge+3,w
 11067  006A' 00CB'              	movwf	___flge@ff2+3
 11068  006B' 084E'              	movf	??___flge+2,w
 11069  006C' 00CA'              	movwf	___flge@ff2+2
 11070  006D' 084D'              	movf	??___flge+1,w
 11071  006E' 00C9'              	movwf	___flge@ff2+1
 11072  006F' 084C'              	movf	??___flge,w
 11073  0070' 00C8'              	movwf	___flge@ff2
 11074  0071'                    l593:
 11075  0071' 3080               	movlw	128
 11076  0072' 06C7'              	xorwf	___flge@ff1+3,f
 11077  0073' 3080               	movlw	128
 11078  0074' 06CB'              	xorwf	___flge@ff2+3,f
 11079  0075' 084B'              	movf	___flge@ff2+3,w
 11080  0076' 0247'              	subwf	___flge@ff1+3,w
 11081  0077' 1D03               	skipz
 11082  0078' 2800'              	goto	u4375
 11083  0079' 084A'              	movf	___flge@ff2+2,w
 11084  007A' 0246'              	subwf	___flge@ff1+2,w
 11085  007B' 1D03               	skipz
 11086  007C' 2800'              	goto	u4375
 11087  007D' 0849'              	movf	___flge@ff2+1,w
 11088  007E' 0245'              	subwf	___flge@ff1+1,w
 11089  007F' 1D03               	skipz
 11090  0080' 2800'              	goto	u4375
 11091  0081' 0848'              	movf	___flge@ff2,w
 11092  0082' 0244'              	subwf	___flge@ff1,w
 11093  0083'                    u4375:
 11094  0083' 1803               	skipnc
 11095  0084' 2800'              	goto	u4371
 11096  0085' 2800'              	goto	u4370
 11097  0086'                    u4371:
 11098  0086' 2800'              	goto	l3383
 11099  0087'                    u4370:
 11100  0087'                    l3381:
 11101  0087' 1003               	clrc
 11102  0088' 2800'              	goto	l598
 11103  0089'                    l3383:
 11104  0089' 1403               	setc
 11105  008A'                    l598:
 11106  008A' 0008               	return
 11107  008B'                    __end_of___flge:
 11108                           
 11109                           	psect	text18
 11110  0000'                    __ptext18:	
 11111 ;; *************** function ___fleq *****************
 11112 ;; Defined at:
 11113 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;  ff1             4    0[COMMON] unsigned int 
 11116 ;;  ff2             4    4[COMMON] unsigned int 
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;		None
 11119 ;; Return value:  Size  Location     Type
 11120 ;;		None               void
 11121 ;; Registers used:
 11122 ;;		wreg, status,2, status,0
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;Total ram usage:       12 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_efgtoa
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           
 11142                           ;psect for function ___fleq
 11143  0000'                    ___fleq:
 11144  0000'                    l3355:	
 11145                           ;incstack = 0
 11146                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11147                           
 11148  0000' 3000               	movlw	0
 11149  0001' 0500'              	andwf	___fleq@ff1,w
 11150  0002' 0088'              	movwf	??___fleq
 11151  0003' 3000               	movlw	0
 11152  0004' 0501'              	andwf	___fleq@ff1+1,w
 11153  0005' 0089'              	movwf	??___fleq+1
 11154  0006' 3080               	movlw	128
 11155  0007' 0502'              	andwf	___fleq@ff1+2,w
 11156  0008' 008A'              	movwf	??___fleq+2
 11157  0009' 307F               	movlw	127
 11158  000A' 0503'              	andwf	___fleq@ff1+3,w
 11159  000B' 008B'              	movwf	??___fleq+3
 11160  000C' 080B'              	movf	??___fleq+3,w
 11161  000D' 040A'              	iorwf	??___fleq+2,w
 11162  000E' 0409'              	iorwf	??___fleq+1,w
 11163  000F' 0408'              	iorwf	??___fleq,w
 11164  0010' 1D03               	skipz
 11165  0011' 2800'              	goto	u4301
 11166  0012' 2800'              	goto	u4300
 11167  0013'                    u4301:
 11168  0013' 2800'              	goto	l581
 11169  0014'                    u4300:
 11170  0014'                    l3357:
 11171  0014' 3000               	movlw	0
 11172  0015' 0083'              	movwf	___fleq@ff1+3
 11173  0016' 3000               	movlw	0
 11174  0017' 0082'              	movwf	___fleq@ff1+2
 11175  0018' 3000               	movlw	0
 11176  0019' 0081'              	movwf	___fleq@ff1+1
 11177  001A' 3000               	movlw	0
 11178  001B' 0080'              	movwf	___fleq@ff1
 11179  001C'                    l581:
 11180  001C' 3000               	movlw	0
 11181  001D' 0504'              	andwf	___fleq@ff2,w
 11182  001E' 0088'              	movwf	??___fleq
 11183  001F' 3000               	movlw	0
 11184  0020' 0505'              	andwf	___fleq@ff2+1,w
 11185  0021' 0089'              	movwf	??___fleq+1
 11186  0022' 3080               	movlw	128
 11187  0023' 0506'              	andwf	___fleq@ff2+2,w
 11188  0024' 008A'              	movwf	??___fleq+2
 11189  0025' 307F               	movlw	127
 11190  0026' 0507'              	andwf	___fleq@ff2+3,w
 11191  0027' 008B'              	movwf	??___fleq+3
 11192  0028' 080B'              	movf	??___fleq+3,w
 11193  0029' 040A'              	iorwf	??___fleq+2,w
 11194  002A' 0409'              	iorwf	??___fleq+1,w
 11195  002B' 0408'              	iorwf	??___fleq,w
 11196  002C' 1D03               	skipz
 11197  002D' 2800'              	goto	u4311
 11198  002E' 2800'              	goto	u4310
 11199  002F'                    u4311:
 11200  002F' 2800'              	goto	l582
 11201  0030'                    u4310:
 11202  0030'                    l3359:
 11203  0030' 3000               	movlw	0
 11204  0031' 0087'              	movwf	___fleq@ff2+3
 11205  0032' 3000               	movlw	0
 11206  0033' 0086'              	movwf	___fleq@ff2+2
 11207  0034' 3000               	movlw	0
 11208  0035' 0085'              	movwf	___fleq@ff2+1
 11209  0036' 3000               	movlw	0
 11210  0037' 0084'              	movwf	___fleq@ff2
 11211  0038'                    l582:
 11212  0038' 0807'              	movf	___fleq@ff2+3,w
 11213  0039' 0603'              	xorwf	___fleq@ff1+3,w
 11214  003A' 1D03               	skipz
 11215  003B' 2800'              	goto	u4325
 11216  003C' 0806'              	movf	___fleq@ff2+2,w
 11217  003D' 0602'              	xorwf	___fleq@ff1+2,w
 11218  003E' 1D03               	skipz
 11219  003F' 2800'              	goto	u4325
 11220  0040' 0805'              	movf	___fleq@ff2+1,w
 11221  0041' 0601'              	xorwf	___fleq@ff1+1,w
 11222  0042' 1D03               	skipz
 11223  0043' 2800'              	goto	u4325
 11224  0044' 0804'              	movf	___fleq@ff2,w
 11225  0045' 0600'              	xorwf	___fleq@ff1,w
 11226  0046'                    u4325:
 11227  0046' 1903               	skipnz
 11228  0047' 2800'              	goto	u4321
 11229  0048' 2800'              	goto	u4320
 11230  0049'                    u4321:
 11231  0049' 2800'              	goto	l3363
 11232  004A'                    u4320:
 11233  004A'                    l3361:
 11234  004A' 1003               	clrc
 11235  004B' 2800'              	goto	l587
 11236  004C'                    l3363:
 11237  004C' 1403               	setc
 11238  004D'                    l587:
 11239  004D' 0008               	return
 11240  004E'                    __end_of___fleq:
 11241                           
 11242                           	psect	text19
 11243  0000'                    __ptext19:	
 11244 ;; *************** function ___fldiv *****************
 11245 ;; Defined at:
 11246 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;  a               4   16[BANK0 ] unsigned int 
 11249 ;;  b               4   20[BANK0 ] unsigned int 
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;  grs             4   36[BANK0 ] unsigned long 
 11252 ;;  rem             4   29[BANK0 ] unsigned long 
 11253 ;;  new_exp         2   34[BANK0 ] int 
 11254 ;;  aexp            1   41[BANK0 ] unsigned char 
 11255 ;;  bexp            1   40[BANK0 ] unsigned char 
 11256 ;;  sign            1   33[BANK0 ] unsigned char 
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  4   16[BANK0 ] unsigned char 
 11259 ;; Registers used:
 11260 ;;		wreg, status,2, status,0
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11266 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;Total ram usage:       26 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; This function calls:
 11273 ;;		Nothing
 11274 ;; This function is called by:
 11275 ;;		_main
 11276 ;;		_efgtoa
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           
 11281                           ;psect for function ___fldiv
 11282  0000'                    ___fldiv:
 11283  0000'                    l3437:	
 11284                           ;incstack = 0
 11285                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11286                           
 11287  0000' 0020               	movlb	0	; select bank0
 11288  0001' 0817'              	movf	___fldiv@b+3,w
 11289  0002' 3980               	andlw	128
 11290  0003' 0098'              	movwf	??___fldiv
 11291  0004' 0818'              	movf	??___fldiv,w
 11292  0005' 00A1'              	movwf	___fldiv@sign
 11293  0006'                    l3439:
 11294  0006' 3517'              	lslf	___fldiv@b+3,w
 11295  0007' 0098'              	movwf	??___fldiv
 11296  0008' 0818'              	movf	??___fldiv,w
 11297  0009' 00A8'              	movwf	___fldiv@bexp
 11298  000A'                    l3441:
 11299  000A' 1F96'              	btfss	___fldiv@b+2,7
 11300  000B' 2800'              	goto	u4491
 11301  000C' 2800'              	goto	u4490
 11302  000D'                    u4491:
 11303  000D' 2800'              	goto	l3445
 11304  000E'                    u4490:
 11305  000E'                    l3443:
 11306  000E' 1428'              	bsf	___fldiv@bexp,0
 11307  000F'                    l3445:
 11308  000F' 0828'              	movf	___fldiv@bexp,w
 11309  0010' 1903               	btfsc	3,2
 11310  0011' 2800'              	goto	u4501
 11311  0012' 2800'              	goto	u4500
 11312  0013'                    u4501:
 11313  0013' 2800'              	goto	l3455
 11314  0014'                    u4500:
 11315  0014'                    l3447:
 11316  0014' 0A28'              	incf	___fldiv@bexp,w
 11317  0015' 1D03               	btfss	3,2
 11318  0016' 2800'              	goto	u4511
 11319  0017' 2800'              	goto	u4510
 11320  0018'                    u4511:
 11321  0018' 2800'              	goto	l3451
 11322  0019'                    u4510:
 11323  0019'                    l3449:
 11324  0019' 3000               	movlw	0
 11325  001A' 0097'              	movwf	___fldiv@b+3
 11326  001B' 3000               	movlw	0
 11327  001C' 0096'              	movwf	___fldiv@b+2
 11328  001D' 3000               	movlw	0
 11329  001E' 0095'              	movwf	___fldiv@b+1
 11330  001F' 3000               	movlw	0
 11331  0020' 0094'              	movwf	___fldiv@b
 11332  0021'                    l3451:
 11333  0021' 1796'              	bsf	___fldiv@b+2,7
 11334  0022'                    l3453:
 11335  0022' 0197'              	clrf	___fldiv@b+3
 11336  0023' 2800'              	goto	l3457
 11337  0024'                    l3455:
 11338  0024' 3000               	movlw	0
 11339  0025' 0097'              	movwf	___fldiv@b+3
 11340  0026' 3000               	movlw	0
 11341  0027' 0096'              	movwf	___fldiv@b+2
 11342  0028' 3000               	movlw	0
 11343  0029' 0095'              	movwf	___fldiv@b+1
 11344  002A' 3000               	movlw	0
 11345  002B' 0094'              	movwf	___fldiv@b
 11346  002C'                    l3457:
 11347  002C' 0813'              	movf	___fldiv@a+3,w
 11348  002D' 3980               	andlw	128
 11349  002E' 0098'              	movwf	??___fldiv
 11350  002F' 0818'              	movf	??___fldiv,w
 11351  0030' 06A1'              	xorwf	___fldiv@sign,f
 11352  0031'                    l3459:
 11353  0031' 3513'              	lslf	___fldiv@a+3,w
 11354  0032' 0098'              	movwf	??___fldiv
 11355  0033' 0818'              	movf	??___fldiv,w
 11356  0034' 00A9'              	movwf	___fldiv@aexp
 11357  0035'                    l3461:
 11358  0035' 1F92'              	btfss	___fldiv@a+2,7
 11359  0036' 2800'              	goto	u4521
 11360  0037' 2800'              	goto	u4520
 11361  0038'                    u4521:
 11362  0038' 2800'              	goto	l3465
 11363  0039'                    u4520:
 11364  0039'                    l3463:
 11365  0039' 1429'              	bsf	___fldiv@aexp,0
 11366  003A'                    l3465:
 11367  003A' 0829'              	movf	___fldiv@aexp,w
 11368  003B' 1903               	btfsc	3,2
 11369  003C' 2800'              	goto	u4531
 11370  003D' 2800'              	goto	u4530
 11371  003E'                    u4531:
 11372  003E' 2800'              	goto	l3475
 11373  003F'                    u4530:
 11374  003F'                    l3467:
 11375  003F' 0A29'              	incf	___fldiv@aexp,w
 11376  0040' 1D03               	btfss	3,2
 11377  0041' 2800'              	goto	u4541
 11378  0042' 2800'              	goto	u4540
 11379  0043'                    u4541:
 11380  0043' 2800'              	goto	l3471
 11381  0044'                    u4540:
 11382  0044'                    l3469:
 11383  0044' 3000               	movlw	0
 11384  0045' 0093'              	movwf	___fldiv@a+3
 11385  0046' 3000               	movlw	0
 11386  0047' 0092'              	movwf	___fldiv@a+2
 11387  0048' 3000               	movlw	0
 11388  0049' 0091'              	movwf	___fldiv@a+1
 11389  004A' 3000               	movlw	0
 11390  004B' 0090'              	movwf	___fldiv@a
 11391  004C'                    l3471:
 11392  004C' 1792'              	bsf	___fldiv@a+2,7
 11393  004D'                    l3473:
 11394  004D' 0193'              	clrf	___fldiv@a+3
 11395  004E' 2800'              	goto	l769
 11396  004F'                    l3475:
 11397  004F' 3000               	movlw	0
 11398  0050' 0093'              	movwf	___fldiv@a+3
 11399  0051' 3000               	movlw	0
 11400  0052' 0092'              	movwf	___fldiv@a+2
 11401  0053' 3000               	movlw	0
 11402  0054' 0091'              	movwf	___fldiv@a+1
 11403  0055' 3000               	movlw	0
 11404  0056' 0090'              	movwf	___fldiv@a
 11405  0057'                    l769:
 11406  0057' 0813'              	movf	___fldiv@a+3,w
 11407  0058' 0412'              	iorwf	___fldiv@a+2,w
 11408  0059' 0411'              	iorwf	___fldiv@a+1,w
 11409  005A' 0410'              	iorwf	___fldiv@a,w
 11410  005B' 1D03               	skipz
 11411  005C' 2800'              	goto	u4551
 11412  005D' 2800'              	goto	u4550
 11413  005E'                    u4551:
 11414  005E' 2800'              	goto	l3485
 11415  005F'                    u4550:
 11416  005F'                    l3477:
 11417  005F' 3000               	movlw	0
 11418  0060' 0097'              	movwf	___fldiv@b+3
 11419  0061' 3000               	movlw	0
 11420  0062' 0096'              	movwf	___fldiv@b+2
 11421  0063' 3000               	movlw	0
 11422  0064' 0095'              	movwf	___fldiv@b+1
 11423  0065' 3000               	movlw	0
 11424  0066' 0094'              	movwf	___fldiv@b
 11425  0067' 3080               	movlw	128
 11426  0068' 0496'              	iorwf	___fldiv@b+2,f
 11427  0069' 307F               	movlw	127
 11428  006A' 0497'              	iorwf	___fldiv@b+3,f
 11429  006B'                    l3479:
 11430  006B' 0821'              	movf	___fldiv@sign,w
 11431  006C' 0098'              	movwf	??___fldiv
 11432  006D' 0818'              	movf	??___fldiv,w
 11433  006E' 0497'              	iorwf	___fldiv@b+3,f
 11434  006F'                    l3481:
 11435  006F' 0817'              	movf	___fldiv@b+3,w
 11436  0070' 0093'              	movwf	?___fldiv+3
 11437  0071' 0816'              	movf	___fldiv@b+2,w
 11438  0072' 0092'              	movwf	?___fldiv+2
 11439  0073' 0815'              	movf	___fldiv@b+1,w
 11440  0074' 0091'              	movwf	?___fldiv+1
 11441  0075' 0814'              	movf	___fldiv@b,w
 11442  0076' 0090'              	movwf	?___fldiv
 11443  0077' 2800'              	goto	l771
 11444  0078'                    l3485:
 11445  0078' 0828'              	movf	___fldiv@bexp,w
 11446  0079' 1D03               	btfss	3,2
 11447  007A' 2800'              	goto	u4561
 11448  007B' 2800'              	goto	u4560
 11449  007C'                    u4561:
 11450  007C' 2800'              	goto	l3491
 11451  007D'                    u4560:
 11452  007D'                    l3487:
 11453  007D' 3000               	movlw	0
 11454  007E' 0093'              	movwf	?___fldiv+3
 11455  007F' 3000               	movlw	0
 11456  0080' 0092'              	movwf	?___fldiv+2
 11457  0081' 3000               	movlw	0
 11458  0082' 0091'              	movwf	?___fldiv+1
 11459  0083' 3000               	movlw	0
 11460  0084' 0090'              	movwf	?___fldiv
 11461  0085' 2800'              	goto	l771
 11462  0086'                    l3491:
 11463  0086' 0828'              	movf	___fldiv@bexp,w
 11464  0087' 0098'              	movwf	??___fldiv
 11465  0088' 0199'              	clrf	??___fldiv+1
 11466  0089' 0819'              	movf	??___fldiv+1,w
 11467  008A' 009B'              	movwf	??___fldiv+3
 11468  008B' 0829'              	movf	___fldiv@aexp,w
 11469  008C' 0218'              	subwf	??___fldiv,w
 11470  008D' 009A'              	movwf	??___fldiv+2
 11471  008E' 1C03               	skipc
 11472  008F' 039B'              	decf	??___fldiv+3,f
 11473  0090' 081A'              	movf	??___fldiv+2,w
 11474  0091' 3E7F               	addlw	127
 11475  0092' 00A2'              	movwf	___fldiv@new_exp
 11476  0093' 3000               	movlw	0
 11477  0094' 3D1B'              	addwfc	??___fldiv+3,w
 11478  0095' 00A3'              	movwf	___fldiv@new_exp+1
 11479  0096'                    l3493:
 11480  0096' 0817'              	movf	___fldiv@b+3,w
 11481  0097' 00A0'              	movwf	___fldiv@rem+3
 11482  0098' 0816'              	movf	___fldiv@b+2,w
 11483  0099' 009F'              	movwf	___fldiv@rem+2
 11484  009A' 0815'              	movf	___fldiv@b+1,w
 11485  009B' 009E'              	movwf	___fldiv@rem+1
 11486  009C' 0814'              	movf	___fldiv@b,w
 11487  009D' 009D'              	movwf	___fldiv@rem
 11488  009E'                    l3495:
 11489  009E' 3000               	movlw	0
 11490  009F' 0097'              	movwf	___fldiv@b+3
 11491  00A0' 3000               	movlw	0
 11492  00A1' 0096'              	movwf	___fldiv@b+2
 11493  00A2' 3000               	movlw	0
 11494  00A3' 0095'              	movwf	___fldiv@b+1
 11495  00A4' 3000               	movlw	0
 11496  00A5' 0094'              	movwf	___fldiv@b
 11497  00A6'                    l3497:
 11498  00A6' 3000               	movlw	0
 11499  00A7' 00A7'              	movwf	___fldiv@grs+3
 11500  00A8' 3000               	movlw	0
 11501  00A9' 00A6'              	movwf	___fldiv@grs+2
 11502  00AA' 3000               	movlw	0
 11503  00AB' 00A5'              	movwf	___fldiv@grs+1
 11504  00AC' 3000               	movlw	0
 11505  00AD' 00A4'              	movwf	___fldiv@grs
 11506  00AE'                    l3499:
 11507  00AE' 01A9'              	clrf	___fldiv@aexp
 11508  00AF' 2800'              	goto	l3519
 11509  00B0'                    l3501:
 11510  00B0' 0829'              	movf	___fldiv@aexp,w
 11511  00B1' 1903               	btfsc	3,2
 11512  00B2' 2800'              	goto	u4571
 11513  00B3' 2800'              	goto	u4570
 11514  00B4'                    u4571:
 11515  00B4' 2800'              	goto	l3511
 11516  00B5'                    u4570:
 11517  00B5'                    l3503:
 11518  00B5' 3001               	movlw	1
 11519  00B6'                    u4585:
 11520  00B6' 359D'              	lslf	___fldiv@rem,f
 11521  00B7' 0D9E'              	rlf	___fldiv@rem+1,f
 11522  00B8' 0D9F'              	rlf	___fldiv@rem+2,f
 11523  00B9' 0DA0'              	rlf	___fldiv@rem+3,f
 11524  00BA' 0B89               	decfsz	9,f
 11525  00BB' 2800'              	goto	u4585
 11526  00BC' 3001               	movlw	1
 11527  00BD'                    u4595:
 11528  00BD' 3594'              	lslf	___fldiv@b,f
 11529  00BE' 0D95'              	rlf	___fldiv@b+1,f
 11530  00BF' 0D96'              	rlf	___fldiv@b+2,f
 11531  00C0' 0D97'              	rlf	___fldiv@b+3,f
 11532  00C1' 0B89               	decfsz	9,f
 11533  00C2' 2800'              	goto	u4595
 11534  00C3'                    l3505:
 11535  00C3' 1FA7'              	btfss	___fldiv@grs+3,7
 11536  00C4' 2800'              	goto	u4601
 11537  00C5' 2800'              	goto	u4600
 11538  00C6'                    u4601:
 11539  00C6' 2800'              	goto	l3509
 11540  00C7'                    u4600:
 11541  00C7'                    l3507:
 11542  00C7' 1414'              	bsf	___fldiv@b,0
 11543  00C8'                    l3509:
 11544  00C8' 3001               	movlw	1
 11545  00C9'                    u4615:
 11546  00C9' 35A4'              	lslf	___fldiv@grs,f
 11547  00CA' 0DA5'              	rlf	___fldiv@grs+1,f
 11548  00CB' 0DA6'              	rlf	___fldiv@grs+2,f
 11549  00CC' 0DA7'              	rlf	___fldiv@grs+3,f
 11550  00CD' 0B89               	decfsz	9,f
 11551  00CE' 2800'              	goto	u4615
 11552  00CF'                    l3511:
 11553  00CF' 0813'              	movf	___fldiv@a+3,w
 11554  00D0' 0220'              	subwf	___fldiv@rem+3,w
 11555  00D1' 1D03               	skipz
 11556  00D2' 2800'              	goto	u4625
 11557  00D3' 0812'              	movf	___fldiv@a+2,w
 11558  00D4' 021F'              	subwf	___fldiv@rem+2,w
 11559  00D5' 1D03               	skipz
 11560  00D6' 2800'              	goto	u4625
 11561  00D7' 0811'              	movf	___fldiv@a+1,w
 11562  00D8' 021E'              	subwf	___fldiv@rem+1,w
 11563  00D9' 1D03               	skipz
 11564  00DA' 2800'              	goto	u4625
 11565  00DB' 0810'              	movf	___fldiv@a,w
 11566  00DC' 021D'              	subwf	___fldiv@rem,w
 11567  00DD'                    u4625:
 11568  00DD' 1C03               	skipc
 11569  00DE' 2800'              	goto	u4621
 11570  00DF' 2800'              	goto	u4620
 11571  00E0'                    u4621:
 11572  00E0' 2800'              	goto	l3517
 11573  00E1'                    u4620:
 11574  00E1'                    l3513:
 11575  00E1' 1727'              	bsf	___fldiv@grs+3,6
 11576  00E2'                    l3515:
 11577  00E2' 0810'              	movf	___fldiv@a,w
 11578  00E3' 029D'              	subwf	___fldiv@rem,f
 11579  00E4' 0811'              	movf	___fldiv@a+1,w
 11580  00E5' 3B9E'              	subwfb	___fldiv@rem+1,f
 11581  00E6' 0812'              	movf	___fldiv@a+2,w
 11582  00E7' 3B9F'              	subwfb	___fldiv@rem+2,f
 11583  00E8' 0813'              	movf	___fldiv@a+3,w
 11584  00E9' 3BA0'              	subwfb	___fldiv@rem+3,f
 11585  00EA'                    l3517:
 11586  00EA' 3001               	movlw	1
 11587  00EB' 0098'              	movwf	??___fldiv
 11588  00EC' 0818'              	movf	??___fldiv,w
 11589  00ED' 07A9'              	addwf	___fldiv@aexp,f
 11590  00EE'                    l3519:
 11591  00EE' 301A               	movlw	26
 11592  00EF' 0229'              	subwf	___fldiv@aexp,w
 11593  00F0' 1C03               	skipc
 11594  00F1' 2800'              	goto	u4631
 11595  00F2' 2800'              	goto	u4630
 11596  00F3'                    u4631:
 11597  00F3' 2800'              	goto	l3501
 11598  00F4'                    u4630:
 11599  00F4'                    l3521:
 11600  00F4' 0820'              	movf	___fldiv@rem+3,w
 11601  00F5' 041F'              	iorwf	___fldiv@rem+2,w
 11602  00F6' 041E'              	iorwf	___fldiv@rem+1,w
 11603  00F7' 041D'              	iorwf	___fldiv@rem,w
 11604  00F8' 1903               	skipnz
 11605  00F9' 2800'              	goto	u4641
 11606  00FA' 2800'              	goto	u4640
 11607  00FB'                    u4641:
 11608  00FB' 2800'              	goto	l3535
 11609  00FC'                    u4640:
 11610  00FC'                    l3523:
 11611  00FC' 1424'              	bsf	___fldiv@grs,0
 11612  00FD' 2800'              	goto	l3535
 11613  00FE'                    l3525:
 11614  00FE' 3001               	movlw	1
 11615  00FF'                    u4655:
 11616  00FF' 3594'              	lslf	___fldiv@b,f
 11617  0100' 0D95'              	rlf	___fldiv@b+1,f
 11618  0101' 0D96'              	rlf	___fldiv@b+2,f
 11619  0102' 0D97'              	rlf	___fldiv@b+3,f
 11620  0103' 0B89               	decfsz	9,f
 11621  0104' 2800'              	goto	u4655
 11622  0105'                    l3527:
 11623  0105' 1FA7'              	btfss	___fldiv@grs+3,7
 11624  0106' 2800'              	goto	u4661
 11625  0107' 2800'              	goto	u4660
 11626  0108'                    u4661:
 11627  0108' 2800'              	goto	l3531
 11628  0109'                    u4660:
 11629  0109'                    l3529:
 11630  0109' 1414'              	bsf	___fldiv@b,0
 11631  010A'                    l3531:
 11632  010A' 3001               	movlw	1
 11633  010B'                    u4675:
 11634  010B' 35A4'              	lslf	___fldiv@grs,f
 11635  010C' 0DA5'              	rlf	___fldiv@grs+1,f
 11636  010D' 0DA6'              	rlf	___fldiv@grs+2,f
 11637  010E' 0DA7'              	rlf	___fldiv@grs+3,f
 11638  010F' 0B89               	decfsz	9,f
 11639  0110' 2800'              	goto	u4675
 11640  0111'                    l3533:
 11641  0111' 30FF               	movlw	255
 11642  0112' 07A2'              	addwf	___fldiv@new_exp,f
 11643  0113' 30FF               	movlw	255
 11644  0114' 3DA3'              	addwfc	___fldiv@new_exp+1,f
 11645  0115'                    l3535:
 11646  0115' 1F96'              	btfss	___fldiv@b+2,7
 11647  0116' 2800'              	goto	u4681
 11648  0117' 2800'              	goto	u4680
 11649  0118'                    u4681:
 11650  0118' 2800'              	goto	l3525
 11651  0119'                    u4680:
 11652  0119'                    l3537:
 11653  0119' 01A9'              	clrf	___fldiv@aexp
 11654  011A'                    l3539:
 11655  011A' 1FA7'              	btfss	___fldiv@grs+3,7
 11656  011B' 2800'              	goto	u4691
 11657  011C' 2800'              	goto	u4690
 11658  011D'                    u4691:
 11659  011D' 2800'              	goto	l3547
 11660  011E'                    u4690:
 11661  011E'                    l3541:
 11662  011E' 30FF               	movlw	255
 11663  011F' 0524'              	andwf	___fldiv@grs,w
 11664  0120' 0098'              	movwf	??___fldiv
 11665  0121' 30FF               	movlw	255
 11666  0122' 0525'              	andwf	___fldiv@grs+1,w
 11667  0123' 0099'              	movwf	??___fldiv+1
 11668  0124' 30FF               	movlw	255
 11669  0125' 0526'              	andwf	___fldiv@grs+2,w
 11670  0126' 009A'              	movwf	??___fldiv+2
 11671  0127' 307F               	movlw	127
 11672  0128' 0527'              	andwf	___fldiv@grs+3,w
 11673  0129' 009B'              	movwf	??___fldiv+3
 11674  012A' 081B'              	movf	??___fldiv+3,w
 11675  012B' 041A'              	iorwf	??___fldiv+2,w
 11676  012C' 0419'              	iorwf	??___fldiv+1,w
 11677  012D' 0418'              	iorwf	??___fldiv,w
 11678  012E' 1903               	skipnz
 11679  012F' 2800'              	goto	u4701
 11680  0130' 2800'              	goto	u4700
 11681  0131'                    u4701:
 11682  0131' 2800'              	goto	l785
 11683  0132'                    u4700:
 11684  0132'                    l3543:
 11685  0132' 01A9'              	clrf	___fldiv@aexp
 11686  0133' 0AA9'              	incf	___fldiv@aexp,f
 11687  0134' 2800'              	goto	l3547
 11688  0135'                    l785:
 11689  0135' 1C14'              	btfss	___fldiv@b,0
 11690  0136' 2800'              	goto	u4711
 11691  0137' 2800'              	goto	u4710
 11692  0138'                    u4711:
 11693  0138' 2800'              	goto	l3547
 11694  0139'                    u4710:
 11695  0139' 2800'              	goto	l3543
 11696  013A'                    l3547:
 11697  013A' 0829'              	movf	___fldiv@aexp,w
 11698  013B' 1903               	btfsc	3,2
 11699  013C' 2800'              	goto	u4721
 11700  013D' 2800'              	goto	u4720
 11701  013E'                    u4721:
 11702  013E' 2800'              	goto	l3557
 11703  013F'                    u4720:
 11704  013F'                    l3549:
 11705  013F' 3001               	movlw	1
 11706  0140' 0794'              	addwf	___fldiv@b,f
 11707  0141' 3000               	movlw	0
 11708  0142' 3D95'              	addwfc	___fldiv@b+1,f
 11709  0143' 3000               	movlw	0
 11710  0144' 3D96'              	addwfc	___fldiv@b+2,f
 11711  0145' 3000               	movlw	0
 11712  0146' 3D97'              	addwfc	___fldiv@b+3,f
 11713  0147'                    l3551:
 11714  0147' 1C17'              	btfss	___fldiv@b+3,0
 11715  0148' 2800'              	goto	u4731
 11716  0149' 2800'              	goto	u4730
 11717  014A'                    u4731:
 11718  014A' 2800'              	goto	l3557
 11719  014B'                    u4730:
 11720  014B'                    l3553:
 11721  014B' 0814'              	movf	___fldiv@b,w
 11722  014C' 0098'              	movwf	??___fldiv
 11723  014D' 0815'              	movf	___fldiv@b+1,w
 11724  014E' 0099'              	movwf	??___fldiv+1
 11725  014F' 0816'              	movf	___fldiv@b+2,w
 11726  0150' 009A'              	movwf	??___fldiv+2
 11727  0151' 0817'              	movf	___fldiv@b+3,w
 11728  0152' 009B'              	movwf	??___fldiv+3
 11729  0153' 3001               	movlw	1
 11730  0154' 009C'              	movwf	??___fldiv+4
 11731  0155'                    u4745:
 11732  0155' 379B'              	asrf	??___fldiv+3,f
 11733  0156' 0C9A'              	rrf	??___fldiv+2,f
 11734  0157' 0C99'              	rrf	??___fldiv+1,f
 11735  0158' 0C98'              	rrf	??___fldiv,f
 11736  0159'                    u4740:
 11737  0159' 0B9C'              	decfsz	??___fldiv+4,f
 11738  015A' 2800'              	goto	u4745
 11739  015B' 081B'              	movf	??___fldiv+3,w
 11740  015C' 0097'              	movwf	___fldiv@b+3
 11741  015D' 081A'              	movf	??___fldiv+2,w
 11742  015E' 0096'              	movwf	___fldiv@b+2
 11743  015F' 0819'              	movf	??___fldiv+1,w
 11744  0160' 0095'              	movwf	___fldiv@b+1
 11745  0161' 0818'              	movf	??___fldiv,w
 11746  0162' 0094'              	movwf	___fldiv@b
 11747  0163'                    l3555:
 11748  0163' 3001               	movlw	1
 11749  0164' 07A2'              	addwf	___fldiv@new_exp,f
 11750  0165' 3000               	movlw	0
 11751  0166' 3DA3'              	addwfc	___fldiv@new_exp+1,f
 11752  0167'                    l3557:
 11753  0167' 0823'              	movf	___fldiv@new_exp+1,w
 11754  0168' 3A80               	xorlw	128
 11755  0169' 0098'              	movwf	??___fldiv
 11756  016A' 3080               	movlw	128
 11757  016B' 0218'              	subwf	??___fldiv,w
 11758  016C' 1D03               	skipz
 11759  016D' 2800'              	goto	u4755
 11760  016E' 30FF               	movlw	255
 11761  016F' 0222'              	subwf	___fldiv@new_exp,w
 11762  0170'                    u4755:
 11763  0170' 1C03               	skipc
 11764  0171' 2800'              	goto	u4751
 11765  0172' 2800'              	goto	u4750
 11766  0173'                    u4751:
 11767  0173' 2800'              	goto	l790
 11768  0174'                    u4750:
 11769  0174'                    l3559:
 11770  0174' 30FF               	movlw	255
 11771  0175' 0020               	movlb	0	; select bank0
 11772  0176' 00A2'              	movwf	___fldiv@new_exp
 11773  0177' 3000               	movlw	0
 11774  0178' 00A3'              	movwf	___fldiv@new_exp+1
 11775  0179' 3000               	movlw	0
 11776  017A' 0097'              	movwf	___fldiv@b+3
 11777  017B' 3000               	movlw	0
 11778  017C' 0096'              	movwf	___fldiv@b+2
 11779  017D' 3000               	movlw	0
 11780  017E' 0095'              	movwf	___fldiv@b+1
 11781  017F' 3000               	movlw	0
 11782  0180' 0094'              	movwf	___fldiv@b
 11783  0181'                    l790:
 11784  0181' 0020               	movlb	0	; select bank0
 11785  0182' 0823'              	movf	___fldiv@new_exp+1,w
 11786  0183' 3A80               	xorlw	128
 11787  0184' 0098'              	movwf	??___fldiv
 11788  0185' 3080               	movlw	128
 11789  0186' 0218'              	subwf	??___fldiv,w
 11790  0187' 1D03               	skipz
 11791  0188' 2800'              	goto	u4765
 11792  0189' 3001               	movlw	1
 11793  018A' 0222'              	subwf	___fldiv@new_exp,w
 11794  018B'                    u4765:
 11795  018B' 1803               	skipnc
 11796  018C' 2800'              	goto	u4761
 11797  018D' 2800'              	goto	u4760
 11798  018E'                    u4761:
 11799  018E' 2800'              	goto	l791
 11800  018F'                    u4760:
 11801  018F'                    l3561:
 11802  018F' 0020               	movlb	0	; select bank0
 11803  0190' 01A2'              	clrf	___fldiv@new_exp
 11804  0191' 01A3'              	clrf	___fldiv@new_exp+1
 11805  0192'                    l3563:
 11806  0192' 3000               	movlw	0
 11807  0193' 0097'              	movwf	___fldiv@b+3
 11808  0194' 3000               	movlw	0
 11809  0195' 0096'              	movwf	___fldiv@b+2
 11810  0196' 3000               	movlw	0
 11811  0197' 0095'              	movwf	___fldiv@b+1
 11812  0198' 3000               	movlw	0
 11813  0199' 0094'              	movwf	___fldiv@b
 11814  019A'                    l3565:
 11815  019A' 01A1'              	clrf	___fldiv@sign
 11816  019B'                    l791:
 11817  019B' 0020               	movlb	0	; select bank0
 11818  019C' 0822'              	movf	___fldiv@new_exp,w
 11819  019D' 0098'              	movwf	??___fldiv
 11820  019E' 0818'              	movf	??___fldiv,w
 11821  019F' 00A8'              	movwf	___fldiv@bexp
 11822  01A0'                    l3567:
 11823  01A0' 1C28'              	btfss	___fldiv@bexp,0
 11824  01A1' 2800'              	goto	u4771
 11825  01A2' 2800'              	goto	u4770
 11826  01A3'                    u4771:
 11827  01A3' 2800'              	goto	l3571
 11828  01A4'                    u4770:
 11829  01A4'                    l3569:
 11830  01A4' 1796'              	bsf	___fldiv@b+2,7
 11831  01A5' 2800'              	goto	l793
 11832  01A6'                    l3571:
 11833  01A6' 307F               	movlw	127
 11834  01A7' 0098'              	movwf	??___fldiv
 11835  01A8' 0818'              	movf	??___fldiv,w
 11836  01A9' 0596'              	andwf	___fldiv@b+2,f
 11837  01AA'                    l793:
 11838  01AA' 3628'              	lsrf	___fldiv@bexp,w
 11839  01AB' 0098'              	movwf	??___fldiv
 11840  01AC' 0818'              	movf	??___fldiv,w
 11841  01AD' 0097'              	movwf	___fldiv@b+3
 11842  01AE' 0821'              	movf	___fldiv@sign,w
 11843  01AF' 0098'              	movwf	??___fldiv
 11844  01B0' 0818'              	movf	??___fldiv,w
 11845  01B1' 0497'              	iorwf	___fldiv@b+3,f
 11846  01B2' 2800'              	goto	l3481
 11847  01B3'                    l771:
 11848  01B3' 0008               	return
 11849  01B4'                    __end_of___fldiv:
 11850                           
 11851                           	psect	text20
 11852  0000'                    __ptext20:	
 11853 ;; *************** function ___awmod *****************
 11854 ;; Defined at:
 11855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  divisor         2    0[COMMON] int 
 11858 ;;  dividend        2    2[COMMON] int 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  sign            1    6[COMMON] unsigned char 
 11861 ;;  counter         1    5[COMMON] unsigned char 
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  2    0[COMMON] int 
 11864 ;; Registers used:
 11865 ;;		wreg, status,2, status,0
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11871 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11874 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;Total ram usage:        7 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; This function calls:
 11878 ;;		Nothing
 11879 ;; This function is called by:
 11880 ;;		_efgtoa
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           
 11884                           
 11885                           ;psect for function ___awmod
 11886  0000'                    ___awmod:
 11887  0000'                    l3317:	
 11888                           ;incstack = 0
 11889                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11890                           
 11891  0000' 0186'              	clrf	___awmod@sign
 11892  0001'                    l3319:
 11893  0001' 1F83'              	btfss	___awmod@dividend+1,7
 11894  0002' 2800'              	goto	u4211
 11895  0003' 2800'              	goto	u4210
 11896  0004'                    u4211:
 11897  0004' 2800'              	goto	l3325
 11898  0005'                    u4210:
 11899  0005'                    l3321:
 11900  0005' 0982'              	comf	___awmod@dividend,f
 11901  0006' 0983'              	comf	___awmod@dividend+1,f
 11902  0007' 0A82'              	incf	___awmod@dividend,f
 11903  0008' 1903               	skipnz
 11904  0009' 0A83'              	incf	___awmod@dividend+1,f
 11905  000A'                    l3323:
 11906  000A' 0186'              	clrf	___awmod@sign
 11907  000B' 0A86'              	incf	___awmod@sign,f
 11908  000C'                    l3325:
 11909  000C' 1F81'              	btfss	___awmod@divisor+1,7
 11910  000D' 2800'              	goto	u4221
 11911  000E' 2800'              	goto	u4220
 11912  000F'                    u4221:
 11913  000F' 2800'              	goto	l3329
 11914  0010'                    u4220:
 11915  0010'                    l3327:
 11916  0010' 0980'              	comf	___awmod@divisor,f
 11917  0011' 0981'              	comf	___awmod@divisor+1,f
 11918  0012' 0A80'              	incf	___awmod@divisor,f
 11919  0013' 1903               	skipnz
 11920  0014' 0A81'              	incf	___awmod@divisor+1,f
 11921  0015'                    l3329:
 11922  0015' 0800'              	movf	___awmod@divisor,w
 11923  0016' 0401'              	iorwf	___awmod@divisor+1,w
 11924  0017' 1903               	btfsc	3,2
 11925  0018' 2800'              	goto	u4231
 11926  0019' 2800'              	goto	u4230
 11927  001A'                    u4231:
 11928  001A' 2800'              	goto	l3347
 11929  001B'                    u4230:
 11930  001B'                    l3331:
 11931  001B' 0185'              	clrf	___awmod@counter
 11932  001C' 0A85'              	incf	___awmod@counter,f
 11933  001D' 2800'              	goto	l3337
 11934  001E'                    l3333:
 11935  001E' 3001               	movlw	1
 11936  001F'                    u4245:
 11937  001F' 3580'              	lslf	___awmod@divisor,f
 11938  0020' 0D81'              	rlf	___awmod@divisor+1,f
 11939  0021' 0B89               	decfsz	9,f
 11940  0022' 2800'              	goto	u4245
 11941  0023'                    l3335:
 11942  0023' 3001               	movlw	1
 11943  0024' 0084'              	movwf	??___awmod
 11944  0025' 0804'              	movf	??___awmod,w
 11945  0026' 0785'              	addwf	___awmod@counter,f
 11946  0027'                    l3337:
 11947  0027' 1F81'              	btfss	___awmod@divisor+1,7
 11948  0028' 2800'              	goto	u4251
 11949  0029' 2800'              	goto	u4250
 11950  002A'                    u4251:
 11951  002A' 2800'              	goto	l3333
 11952  002B'                    u4250:
 11953  002B'                    l3339:
 11954  002B' 0801'              	movf	___awmod@divisor+1,w
 11955  002C' 0203'              	subwf	___awmod@dividend+1,w
 11956  002D' 1D03               	skipz
 11957  002E' 2800'              	goto	u4265
 11958  002F' 0800'              	movf	___awmod@divisor,w
 11959  0030' 0202'              	subwf	___awmod@dividend,w
 11960  0031'                    u4265:
 11961  0031' 1C03               	skipc
 11962  0032' 2800'              	goto	u4261
 11963  0033' 2800'              	goto	u4260
 11964  0034'                    u4261:
 11965  0034' 2800'              	goto	l3343
 11966  0035'                    u4260:
 11967  0035'                    l3341:
 11968  0035' 0800'              	movf	___awmod@divisor,w
 11969  0036' 0282'              	subwf	___awmod@dividend,f
 11970  0037' 0801'              	movf	___awmod@divisor+1,w
 11971  0038' 3B83'              	subwfb	___awmod@dividend+1,f
 11972  0039'                    l3343:
 11973  0039' 3001               	movlw	1
 11974  003A'                    u4275:
 11975  003A' 3681'              	lsrf	___awmod@divisor+1,f
 11976  003B' 0C80'              	rrf	___awmod@divisor,f
 11977  003C' 0B89               	decfsz	9,f
 11978  003D' 2800'              	goto	u4275
 11979  003E'                    l3345:
 11980  003E' 3001               	movlw	1
 11981  003F' 0285'              	subwf	___awmod@counter,f
 11982  0040' 1D03               	btfss	3,2
 11983  0041' 2800'              	goto	u4281
 11984  0042' 2800'              	goto	u4280
 11985  0043'                    u4281:
 11986  0043' 2800'              	goto	l3339
 11987  0044'                    u4280:
 11988  0044'                    l3347:
 11989  0044' 0806'              	movf	___awmod@sign,w
 11990  0045' 1903               	btfsc	3,2
 11991  0046' 2800'              	goto	u4291
 11992  0047' 2800'              	goto	u4290
 11993  0048'                    u4291:
 11994  0048' 2800'              	goto	l3351
 11995  0049'                    u4290:
 11996  0049'                    l3349:
 11997  0049' 0982'              	comf	___awmod@dividend,f
 11998  004A' 0983'              	comf	___awmod@dividend+1,f
 11999  004B' 0A82'              	incf	___awmod@dividend,f
 12000  004C' 1903               	skipnz
 12001  004D' 0A83'              	incf	___awmod@dividend+1,f
 12002  004E'                    l3351:
 12003  004E' 0803'              	movf	___awmod@dividend+1,w
 12004  004F' 0081'              	movwf	?___awmod+1
 12005  0050' 0802'              	movf	___awmod@dividend,w
 12006  0051' 0080'              	movwf	?___awmod
 12007  0052'                    l578:
 12008  0052' 0008               	return
 12009  0053'                    __end_of___awmod:
 12010                           
 12011                           	psect	text21
 12012  0000'                    __ptext21:	
 12013 ;; *************** function ___awdiv *****************
 12014 ;; Defined at:
 12015 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  divisor         2    0[COMMON] int 
 12018 ;;  dividend        2    2[COMMON] int 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  quotient        2    7[COMMON] int 
 12021 ;;  sign            1    6[COMMON] unsigned char 
 12022 ;;  counter         1    5[COMMON] unsigned char 
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  2    0[COMMON] int 
 12025 ;; Registers used:
 12026 ;;		wreg, status,2, status,0
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;Total ram usage:        9 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		_efgtoa
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           
 12046                           ;psect for function ___awdiv
 12047  0000'                    ___awdiv:
 12048  0000'                    l3273:	
 12049                           ;incstack = 0
 12050                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12051                           
 12052  0000' 0186'              	clrf	___awdiv@sign
 12053  0001'                    l3275:
 12054  0001' 1F81'              	btfss	___awdiv@divisor+1,7
 12055  0002' 2800'              	goto	u4111
 12056  0003' 2800'              	goto	u4110
 12057  0004'                    u4111:
 12058  0004' 2800'              	goto	l3281
 12059  0005'                    u4110:
 12060  0005'                    l3277:
 12061  0005' 0980'              	comf	___awdiv@divisor,f
 12062  0006' 0981'              	comf	___awdiv@divisor+1,f
 12063  0007' 0A80'              	incf	___awdiv@divisor,f
 12064  0008' 1903               	skipnz
 12065  0009' 0A81'              	incf	___awdiv@divisor+1,f
 12066  000A'                    l3279:
 12067  000A' 0186'              	clrf	___awdiv@sign
 12068  000B' 0A86'              	incf	___awdiv@sign,f
 12069  000C'                    l3281:
 12070  000C' 1F83'              	btfss	___awdiv@dividend+1,7
 12071  000D' 2800'              	goto	u4121
 12072  000E' 2800'              	goto	u4120
 12073  000F'                    u4121:
 12074  000F' 2800'              	goto	l3287
 12075  0010'                    u4120:
 12076  0010'                    l3283:
 12077  0010' 0982'              	comf	___awdiv@dividend,f
 12078  0011' 0983'              	comf	___awdiv@dividend+1,f
 12079  0012' 0A82'              	incf	___awdiv@dividend,f
 12080  0013' 1903               	skipnz
 12081  0014' 0A83'              	incf	___awdiv@dividend+1,f
 12082  0015'                    l3285:
 12083  0015' 3001               	movlw	1
 12084  0016' 0084'              	movwf	??___awdiv
 12085  0017' 0804'              	movf	??___awdiv,w
 12086  0018' 0686'              	xorwf	___awdiv@sign,f
 12087  0019'                    l3287:
 12088  0019' 0187'              	clrf	___awdiv@quotient
 12089  001A' 0188'              	clrf	___awdiv@quotient+1
 12090  001B'                    l3289:
 12091  001B' 0800'              	movf	___awdiv@divisor,w
 12092  001C' 0401'              	iorwf	___awdiv@divisor+1,w
 12093  001D' 1903               	btfsc	3,2
 12094  001E' 2800'              	goto	u4131
 12095  001F' 2800'              	goto	u4130
 12096  0020'                    u4131:
 12097  0020' 2800'              	goto	l3309
 12098  0021'                    u4130:
 12099  0021'                    l3291:
 12100  0021' 0185'              	clrf	___awdiv@counter
 12101  0022' 0A85'              	incf	___awdiv@counter,f
 12102  0023' 2800'              	goto	l3297
 12103  0024'                    l3293:
 12104  0024' 3001               	movlw	1
 12105  0025'                    u4145:
 12106  0025' 3580'              	lslf	___awdiv@divisor,f
 12107  0026' 0D81'              	rlf	___awdiv@divisor+1,f
 12108  0027' 0B89               	decfsz	9,f
 12109  0028' 2800'              	goto	u4145
 12110  0029'                    l3295:
 12111  0029' 3001               	movlw	1
 12112  002A' 0084'              	movwf	??___awdiv
 12113  002B' 0804'              	movf	??___awdiv,w
 12114  002C' 0785'              	addwf	___awdiv@counter,f
 12115  002D'                    l3297:
 12116  002D' 1F81'              	btfss	___awdiv@divisor+1,7
 12117  002E' 2800'              	goto	u4151
 12118  002F' 2800'              	goto	u4150
 12119  0030'                    u4151:
 12120  0030' 2800'              	goto	l3293
 12121  0031'                    u4150:
 12122  0031'                    l3299:
 12123  0031' 3001               	movlw	1
 12124  0032'                    u4165:
 12125  0032' 3587'              	lslf	___awdiv@quotient,f
 12126  0033' 0D88'              	rlf	___awdiv@quotient+1,f
 12127  0034' 0B89               	decfsz	9,f
 12128  0035' 2800'              	goto	u4165
 12129  0036' 0801'              	movf	___awdiv@divisor+1,w
 12130  0037' 0203'              	subwf	___awdiv@dividend+1,w
 12131  0038' 1D03               	skipz
 12132  0039' 2800'              	goto	u4175
 12133  003A' 0800'              	movf	___awdiv@divisor,w
 12134  003B' 0202'              	subwf	___awdiv@dividend,w
 12135  003C'                    u4175:
 12136  003C' 1C03               	skipc
 12137  003D' 2800'              	goto	u4171
 12138  003E' 2800'              	goto	u4170
 12139  003F'                    u4171:
 12140  003F' 2800'              	goto	l3305
 12141  0040'                    u4170:
 12142  0040'                    l3301:
 12143  0040' 0800'              	movf	___awdiv@divisor,w
 12144  0041' 0282'              	subwf	___awdiv@dividend,f
 12145  0042' 0801'              	movf	___awdiv@divisor+1,w
 12146  0043' 3B83'              	subwfb	___awdiv@dividend+1,f
 12147  0044'                    l3303:
 12148  0044' 1407'              	bsf	___awdiv@quotient,0
 12149  0045'                    l3305:
 12150  0045' 3001               	movlw	1
 12151  0046'                    u4185:
 12152  0046' 3681'              	lsrf	___awdiv@divisor+1,f
 12153  0047' 0C80'              	rrf	___awdiv@divisor,f
 12154  0048' 0B89               	decfsz	9,f
 12155  0049' 2800'              	goto	u4185
 12156  004A'                    l3307:
 12157  004A' 3001               	movlw	1
 12158  004B' 0285'              	subwf	___awdiv@counter,f
 12159  004C' 1D03               	btfss	3,2
 12160  004D' 2800'              	goto	u4191
 12161  004E' 2800'              	goto	u4190
 12162  004F'                    u4191:
 12163  004F' 2800'              	goto	l3299
 12164  0050'                    u4190:
 12165  0050'                    l3309:
 12166  0050' 0806'              	movf	___awdiv@sign,w
 12167  0051' 1903               	btfsc	3,2
 12168  0052' 2800'              	goto	u4201
 12169  0053' 2800'              	goto	u4200
 12170  0054'                    u4201:
 12171  0054' 2800'              	goto	l3313
 12172  0055'                    u4200:
 12173  0055'                    l3311:
 12174  0055' 0987'              	comf	___awdiv@quotient,f
 12175  0056' 0988'              	comf	___awdiv@quotient+1,f
 12176  0057' 0A87'              	incf	___awdiv@quotient,f
 12177  0058' 1903               	skipnz
 12178  0059' 0A88'              	incf	___awdiv@quotient+1,f
 12179  005A'                    l3313:
 12180  005A' 0808'              	movf	___awdiv@quotient+1,w
 12181  005B' 0081'              	movwf	?___awdiv+1
 12182  005C' 0807'              	movf	___awdiv@quotient,w
 12183  005D' 0080'              	movwf	?___awdiv
 12184  005E'                    l565:
 12185  005E' 0008               	return
 12186  005F'                    __end_of___awdiv:
 12187                           
 12188                           	psect	text22
 12189  0000'                    __ptext22:	
 12190 ;; *************** function _dtoa *****************
 12191 ;; Defined at:
 12192 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  fp              1    wreg     PTR struct _IO_FILE
 12195 ;;		 -> sprintf@f(5), 
 12196 ;;  d               8   16[BANK0 ] long long 
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 12199 ;;		 -> sprintf@f(5), 
 12200 ;;  n               8   36[BANK0 ] long long 
 12201 ;;  i               2   44[BANK0 ] int 
 12202 ;;  s               2   34[BANK0 ] int 
 12203 ;;  w               2   32[BANK0 ] int 
 12204 ;;  p               2   30[BANK0 ] int 
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  2   16[BANK0 ] int 
 12207 ;; Registers used:
 12208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12214 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;Total ram usage:       30 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    4
 12221 ;; This function calls:
 12222 ;;		___aodiv
 12223 ;;		___aomod
 12224 ;;		_abs
 12225 ;;		_pad
 12226 ;; This function is called by:
 12227 ;;		_vfpfcnvrt
 12228 ;; This function uses a non-reentrant model
 12229 ;;
 12230                           
 12231                           
 12232                           ;psect for function _dtoa
 12233  0000'                    _dtoa:
 12234                           
 12235                           ;incstack = 0
 12236                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12237                           ;dtoa@fp stored from wreg
 12238  0000' 0020               	movlb	0	; select bank0
 12239  0001' 009D'              	movwf	dtoa@fp
 12240  0002'                    l3827:
 12241                           
 12242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12243  0002' 0810'              	movf	dtoa@d,w
 12244  0003' 00A4'              	movwf	dtoa@n
 12245  0004' 0811'              	movf	dtoa@d+1,w
 12246  0005' 00A5'              	movwf	dtoa@n+1
 12247  0006' 0812'              	movf	dtoa@d+2,w
 12248  0007' 00A6'              	movwf	dtoa@n+2
 12249  0008' 0813'              	movf	dtoa@d+3,w
 12250  0009' 00A7'              	movwf	dtoa@n+3
 12251  000A' 0814'              	movf	dtoa@d+4,w
 12252  000B' 00A8'              	movwf	dtoa@n+4
 12253  000C' 0815'              	movf	dtoa@d+5,w
 12254  000D' 00A9'              	movwf	dtoa@n+5
 12255  000E' 0816'              	movf	dtoa@d+6,w
 12256  000F' 00AA'              	movwf	dtoa@n+6
 12257  0010' 0817'              	movf	dtoa@d+7,w
 12258  0011' 00AB'              	movwf	dtoa@n+7
 12259  0012'                    l3829:
 12260                           
 12261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12262  0012' 3000'              	movlw	low dtoa@n
 12263  0013' 0086               	movwf	6
 12264  0014' 3000'              	movlw	high dtoa@n
 12265  0015' 0087               	movwf	7
 12266  0016' 3F47               	moviw [7]fsr1
 12267  0017' 0098'              	movwf	??_dtoa
 12268  0018' 1B98'              	btfsc	??_dtoa,7
 12269  0019' 2800'              	goto	u5361
 12270  001A' 2800'              	goto	u5360
 12271  001B'                    u5361:
 12272  001B' 3001               	movlw	1
 12273  001C' 2800'              	goto	u5370
 12274  001D'                    u5360:
 12275  001D' 3000               	movlw	0
 12276  001E'                    u5370:
 12277  001E' 0020               	movlb	0	; select bank0
 12278  001F' 0099'              	movwf	??_dtoa+1
 12279  0020' 019A'              	clrf	??_dtoa+2
 12280  0021' 0819'              	movf	??_dtoa+1,w
 12281  0022' 00A2'              	movwf	dtoa@s
 12282  0023' 081A'              	movf	??_dtoa+2,w
 12283  0024' 00A3'              	movwf	dtoa@s+1
 12284  0025'                    l3831:
 12285                           
 12286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12287  0025' 0822'              	movf	dtoa@s,w
 12288  0026' 0423'              	iorwf	dtoa@s+1,w
 12289  0027' 1903               	btfsc	3,2
 12290  0028' 2800'              	goto	u5381
 12291  0029' 2800'              	goto	u5380
 12292  002A'                    u5381:
 12293  002A' 2800'              	goto	l926
 12294  002B'                    u5380:
 12295  002B'                    l3833:
 12296                           
 12297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12298  002B' 09A4'              	comf	dtoa@n,f
 12299  002C' 09A5'              	comf	dtoa@n+1,f
 12300  002D' 09A6'              	comf	dtoa@n+2,f
 12301  002E' 09A7'              	comf	dtoa@n+3,f
 12302  002F' 09A8'              	comf	dtoa@n+4,f
 12303  0030' 09A9'              	comf	dtoa@n+5,f
 12304  0031' 09AA'              	comf	dtoa@n+6,f
 12305  0032' 09AB'              	comf	dtoa@n+7,f
 12306  0033' 0AA4'              	incf	dtoa@n,f
 12307  0034' 1D03               	skipz
 12308  0035' 2800'              	goto	u539lld
 12309  0036' 0AA5'              	incf	dtoa@n+1,f
 12310  0037' 1D03               	skipz
 12311  0038' 2800'              	goto	u539lld
 12312  0039' 0AA6'              	incf	dtoa@n+2,f
 12313  003A' 1D03               	skipz
 12314  003B' 2800'              	goto	u539lld
 12315  003C' 0AA7'              	incf	dtoa@n+3,f
 12316  003D' 1D03               	skipz
 12317  003E' 2800'              	goto	u539lld
 12318  003F' 0AA8'              	incf	dtoa@n+4,f
 12319  0040' 1D03               	skipz
 12320  0041' 2800'              	goto	u539lld
 12321  0042' 0AA9'              	incf	dtoa@n+5,f
 12322  0043' 1D03               	skipz
 12323  0044' 2800'              	goto	u539lld
 12324  0045' 0AAA'              	incf	dtoa@n+6,f
 12325  0046' 1D03               	skipz
 12326  0047' 2800'              	goto	u539lld
 12327  0048' 0AAB'              	incf	dtoa@n+7,f
 12328  0049'                    u539lld:
 12329  0049'                    l926:	
 12330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
 12331                           
 12332                           
 12333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12334  0049' 0022               	movlb	2	; select bank2
 12335  004A' 1B80'              	btfsc	(_prec+1)^(0+256),7
 12336  004B' 2800'              	goto	u5401
 12337  004C' 2800'              	goto	u5400
 12338  004D'                    u5401:
 12339  004D' 2800'              	goto	l927
 12340  004E'                    u5400:
 12341  004E'                    l3835:
 12342                           
 12343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12344  004E' 30FD               	movlw	253
 12345  004F' 0580'              	andwf	_flags^(0+256),f
 12346  0050' 30FF               	movlw	255
 12347  0051' 0580'              	andwf	(_flags+1)^(0+256),f
 12348  0052'                    l927:	
 12349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
 12350                           
 12351                           
 12352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12353  0052' 0800'              	movf	(_prec+1)^(0+256),w
 12354  0053' 3A80               	xorlw	128
 12355  0054' 0020               	movlb	0	; select bank0
 12356  0055' 0098'              	movwf	??_dtoa
 12357  0056' 3080               	movlw	128
 12358  0057' 0218'              	subwf	??_dtoa,w
 12359  0058' 1D03               	skipz
 12360  0059' 2800'              	goto	u5415
 12361  005A' 3001               	movlw	1
 12362  005B' 0022               	movlb	2	; select bank2
 12363  005C' 0200'              	subwf	_prec^(0+256),w
 12364  005D'                    u5415:
 12365  005D' 1803               	skipnc
 12366  005E' 2800'              	goto	u5411
 12367  005F' 2800'              	goto	u5410
 12368  0060'                    u5411:
 12369  0060' 2800'              	goto	l3839
 12370  0061'                    u5410:
 12371  0061'                    l3837:
 12372  0061' 3001               	movlw	1
 12373  0062' 0020               	movlb	0	; select bank0
 12374  0063' 009E'              	movwf	dtoa@p
 12375  0064' 3000               	movlw	0
 12376  0065' 009F'              	movwf	dtoa@p+1
 12377  0066' 2800'              	goto	l931
 12378  0067'                    l3839:
 12379  0067' 0022               	movlb	2	; select bank2
 12380  0068' 0800'              	movf	(_prec+1)^(0+256),w
 12381  0069' 0020               	movlb	0	; select bank0
 12382  006A' 009F'              	movwf	dtoa@p+1
 12383  006B' 0022               	movlb	2	; select bank2
 12384  006C' 0800'              	movf	_prec^(0+256),w
 12385  006D' 0020               	movlb	0	; select bank0
 12386  006E' 009E'              	movwf	dtoa@p
 12387  006F'                    l931:
 12388                           
 12389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12390  006F' 0023               	movlb	3	; select bank3
 12391  0070' 0800'              	movf	(_width+1)^(0+384),w
 12392  0071' 0020               	movlb	0	; select bank0
 12393  0072' 00A1'              	movwf	dtoa@w+1
 12394  0073' 0023               	movlb	3	; select bank3
 12395  0074' 0800'              	movf	_width^(0+384),w
 12396  0075' 0020               	movlb	0	; select bank0
 12397  0076' 00A0'              	movwf	dtoa@w
 12398  0077'                    l3841:
 12399                           
 12400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12401  0077' 0822'              	movf	dtoa@s,w
 12402  0078' 0423'              	iorwf	dtoa@s+1,w
 12403  0079' 1D03               	btfss	3,2
 12404  007A' 2800'              	goto	u5421
 12405  007B' 2800'              	goto	u5420
 12406  007C'                    u5421:
 12407  007C' 2800'              	goto	l3845
 12408  007D'                    u5420:
 12409  007D'                    l3843:
 12410  007D' 0022               	movlb	2	; select bank2
 12411  007E' 1D00'              	btfss	_flags^(0+256),2
 12412  007F' 2800'              	goto	u5431
 12413  0080' 2800'              	goto	u5430
 12414  0081'                    u5431:
 12415  0081' 2800'              	goto	l932
 12416  0082'                    u5430:
 12417  0082'                    l3845:
 12418                           
 12419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
 12420  0082' 30FF               	movlw	255
 12421  0083' 0020               	movlb	0	; select bank0
 12422  0084' 07A0'              	addwf	dtoa@w,f
 12423  0085' 30FF               	movlw	255
 12424  0086' 3DA1'              	addwfc	dtoa@w+1,f
 12425  0087'                    l932:	
 12426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
 12427                           
 12428                           
 12429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12430  0087' 304F               	movlw	79
 12431  0088' 0020               	movlb	0	; select bank0
 12432  0089' 00AC'              	movwf	dtoa@i
 12433  008A' 3000               	movlw	0
 12434  008B' 00AD'              	movwf	dtoa@i+1
 12435  008C'                    l3847:
 12436                           
 12437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12438  008C' 0024               	movlb	4	; select bank4
 12439  008D' 01CF'              	clrf	(_dbuf^(0+512)+79)
 12440                           
 12441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12442  008E' 2800'              	goto	l935
 12443  008F'                    l3849:
 12444                           
 12445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
 12446  008F' 30FF               	movlw	255
 12447  0090' 0020               	movlb	0	; select bank0
 12448  0091' 07AC'              	addwf	dtoa@i,f
 12449  0092' 30FF               	movlw	255
 12450  0093' 3DAD'              	addwfc	dtoa@i+1,f
 12451  0094'                    l3851:
 12452                           
 12453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12454  0094' 300A               	movlw	10
 12455  0095' 0080'              	movwf	___aomod@divisor
 12456  0096' 0181'              	clrf	___aomod@divisor+1
 12457  0097' 0182'              	clrf	___aomod@divisor+2
 12458  0098' 0183'              	clrf	___aomod@divisor+3
 12459  0099' 0184'              	clrf	___aomod@divisor+4
 12460  009A' 0185'              	clrf	___aomod@divisor+5
 12461  009B' 0186'              	clrf	___aomod@divisor+6
 12462  009C' 0187'              	clrf	___aomod@divisor+7
 12463  009D' 0824'              	movf	dtoa@n,w
 12464  009E' 0088'              	movwf	___aomod@dividend
 12465  009F' 0825'              	movf	dtoa@n+1,w
 12466  00A0' 0089'              	movwf	___aomod@dividend+1
 12467  00A1' 0826'              	movf	dtoa@n+2,w
 12468  00A2' 008A'              	movwf	___aomod@dividend+2
 12469  00A3' 0827'              	movf	dtoa@n+3,w
 12470  00A4' 008B'              	movwf	___aomod@dividend+3
 12471  00A5' 0828'              	movf	dtoa@n+4,w
 12472  00A6' 008C'              	movwf	___aomod@dividend+4
 12473  00A7' 0829'              	movf	dtoa@n+5,w
 12474  00A8' 008D'              	movwf	___aomod@dividend+5
 12475  00A9' 082A'              	movf	dtoa@n+6,w
 12476  00AA' 008E'              	movwf	___aomod@dividend+6
 12477  00AB' 082B'              	movf	dtoa@n+7,w
 12478  00AC' 008F'              	movwf	___aomod@dividend+7
 12479  00AD' 3180' 2000' 3180'  	fcall	___aomod
 12480  00B0' 0020               	movlb	0	; select bank0
 12481  00B1' 0801'              	movf	?___aomod+1,w
 12482  00B2' 0084'              	movwf	abs@a+1
 12483  00B3' 0800'              	movf	?___aomod,w
 12484  00B4' 0083'              	movwf	abs@a
 12485  00B5' 3180' 2000' 3180'  	fcall	_abs
 12486  00B8' 0803'              	movf	?_abs,w
 12487  00B9' 3E30               	addlw	48
 12488  00BA' 0020               	movlb	0	; select bank0
 12489  00BB' 0098'              	movwf	??_dtoa
 12490  00BC' 082C'              	movf	dtoa@i,w
 12491  00BD' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
 12492  00BE' 0086               	movwf	6
 12493  00BF' 3002               	movlw	2	; select bank4/5
 12494  00C0' 0087               	movwf	7
 12495  00C1' 0818'              	movf	??_dtoa,w
 12496  00C2' 0081               	movwf	1
 12497  00C3'                    l3853:
 12498                           
 12499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
 12500  00C3' 30FF               	movlw	255
 12501  00C4' 079E'              	addwf	dtoa@p,f
 12502  00C5' 30FF               	movlw	255
 12503  00C6' 3D9F'              	addwfc	dtoa@p+1,f
 12504  00C7'                    l3855:
 12505                           
 12506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
 12507  00C7' 30FF               	movlw	255
 12508  00C8' 07A0'              	addwf	dtoa@w,f
 12509  00C9' 30FF               	movlw	255
 12510  00CA' 3DA1'              	addwfc	dtoa@w+1,f
 12511  00CB'                    l3857:
 12512                           
 12513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12514  00CB' 300A               	movlw	10
 12515  00CC' 0080'              	movwf	___aodiv@divisor
 12516  00CD' 0181'              	clrf	___aodiv@divisor+1
 12517  00CE' 0182'              	clrf	___aodiv@divisor+2
 12518  00CF' 0183'              	clrf	___aodiv@divisor+3
 12519  00D0' 0184'              	clrf	___aodiv@divisor+4
 12520  00D1' 0185'              	clrf	___aodiv@divisor+5
 12521  00D2' 0186'              	clrf	___aodiv@divisor+6
 12522  00D3' 0187'              	clrf	___aodiv@divisor+7
 12523  00D4' 0824'              	movf	dtoa@n,w
 12524  00D5' 0088'              	movwf	___aodiv@dividend
 12525  00D6' 0825'              	movf	dtoa@n+1,w
 12526  00D7' 0089'              	movwf	___aodiv@dividend+1
 12527  00D8' 0826'              	movf	dtoa@n+2,w
 12528  00D9' 008A'              	movwf	___aodiv@dividend+2
 12529  00DA' 0827'              	movf	dtoa@n+3,w
 12530  00DB' 008B'              	movwf	___aodiv@dividend+3
 12531  00DC' 0828'              	movf	dtoa@n+4,w
 12532  00DD' 008C'              	movwf	___aodiv@dividend+4
 12533  00DE' 0829'              	movf	dtoa@n+5,w
 12534  00DF' 008D'              	movwf	___aodiv@dividend+5
 12535  00E0' 082A'              	movf	dtoa@n+6,w
 12536  00E1' 008E'              	movwf	___aodiv@dividend+6
 12537  00E2' 082B'              	movf	dtoa@n+7,w
 12538  00E3' 008F'              	movwf	___aodiv@dividend+7
 12539  00E4' 3180' 2000' 3180'  	fcall	___aodiv
 12540  00E7' 0020               	movlb	0	; select bank0
 12541  00E8' 0800'              	movf	?___aodiv,w
 12542  00E9' 00A4'              	movwf	dtoa@n
 12543  00EA' 0801'              	movf	?___aodiv+1,w
 12544  00EB' 00A5'              	movwf	dtoa@n+1
 12545  00EC' 0802'              	movf	?___aodiv+2,w
 12546  00ED' 00A6'              	movwf	dtoa@n+2
 12547  00EE' 0803'              	movf	?___aodiv+3,w
 12548  00EF' 00A7'              	movwf	dtoa@n+3
 12549  00F0' 0804'              	movf	?___aodiv+4,w
 12550  00F1' 00A8'              	movwf	dtoa@n+4
 12551  00F2' 0805'              	movf	?___aodiv+5,w
 12552  00F3' 00A9'              	movwf	dtoa@n+5
 12553  00F4' 0806'              	movf	?___aodiv+6,w
 12554  00F5' 00AA'              	movwf	dtoa@n+6
 12555  00F6' 0807'              	movf	?___aodiv+7,w
 12556  00F7' 00AB'              	movwf	dtoa@n+7
 12557  00F8'                    l935:	
 12558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
 12559                           
 12560                           
 12561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12562  00F8' 0020               	movlb	0	; select bank0
 12563  00F9' 082D'              	movf	dtoa@i+1,w
 12564  00FA' 3A80               	xorlw	128
 12565  00FB' 0098'              	movwf	??_dtoa
 12566  00FC' 3080               	movlw	128
 12567  00FD' 0218'              	subwf	??_dtoa,w
 12568  00FE' 1D03               	skipz
 12569  00FF' 2800'              	goto	u5445
 12570  0100' 3001               	movlw	1
 12571  0101' 022C'              	subwf	dtoa@i,w
 12572  0102'                    u5445:
 12573  0102' 1C03               	skipc
 12574  0103' 2800'              	goto	u5441
 12575  0104' 2800'              	goto	u5440
 12576  0105'                    u5441:
 12577  0105' 2800'              	goto	l3867
 12578  0106'                    u5440:
 12579  0106'                    l3859:
 12580  0106' 0020               	movlb	0	; select bank0
 12581  0107' 0824'              	movf	dtoa@n,w
 12582  0108' 0425'              	iorwf	dtoa@n+1,w
 12583  0109' 0426'              	iorwf	dtoa@n+2,w
 12584  010A' 0427'              	iorwf	dtoa@n+3,w
 12585  010B' 0428'              	iorwf	dtoa@n+4,w
 12586  010C' 0429'              	iorwf	dtoa@n+5,w
 12587  010D' 042A'              	iorwf	dtoa@n+6,w
 12588  010E' 042B'              	iorwf	dtoa@n+7,w
 12589  010F' 1D03               	skipz
 12590  0110' 2800'              	goto	u5451
 12591  0111' 2800'              	goto	u5450
 12592  0112'                    u5451:
 12593  0112' 2800'              	goto	l3849
 12594  0113'                    u5450:
 12595  0113'                    l3861:
 12596  0113' 081F'              	movf	dtoa@p+1,w
 12597  0114' 3A80               	xorlw	128
 12598  0115' 0098'              	movwf	??_dtoa
 12599  0116' 3080               	movlw	128
 12600  0117' 0218'              	subwf	??_dtoa,w
 12601  0118' 1D03               	skipz
 12602  0119' 2800'              	goto	u5465
 12603  011A' 3001               	movlw	1
 12604  011B' 021E'              	subwf	dtoa@p,w
 12605  011C'                    u5465:
 12606  011C' 1803               	skipnc
 12607  011D' 2800'              	goto	u5461
 12608  011E' 2800'              	goto	u5460
 12609  011F'                    u5461:
 12610  011F' 2800'              	goto	l3849
 12611  0120'                    u5460:
 12612  0120'                    l3863:
 12613  0120' 0020               	movlb	0	; select bank0
 12614  0121' 0821'              	movf	dtoa@w+1,w
 12615  0122' 3A80               	xorlw	128
 12616  0123' 0098'              	movwf	??_dtoa
 12617  0124' 3080               	movlw	128
 12618  0125' 0218'              	subwf	??_dtoa,w
 12619  0126' 1D03               	skipz
 12620  0127' 2800'              	goto	u5475
 12621  0128' 3001               	movlw	1
 12622  0129' 0220'              	subwf	dtoa@w,w
 12623  012A'                    u5475:
 12624  012A' 1C03               	skipc
 12625  012B' 2800'              	goto	u5471
 12626  012C' 2800'              	goto	u5470
 12627  012D'                    u5471:
 12628  012D' 2800'              	goto	l3867
 12629  012E'                    u5470:
 12630  012E'                    l3865:
 12631  012E' 0022               	movlb	2	; select bank2
 12632  012F' 1880'              	btfsc	_flags^(0+256),1
 12633  0130' 2800'              	goto	u5481
 12634  0131' 2800'              	goto	u5480
 12635  0132'                    u5481:
 12636  0132' 2800'              	goto	l3849
 12637  0133'                    u5480:
 12638  0133'                    l3867:
 12639                           
 12640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12641  0133' 0020               	movlb	0	; select bank0
 12642  0134' 0822'              	movf	dtoa@s,w
 12643  0135' 0423'              	iorwf	dtoa@s+1,w
 12644  0136' 1D03               	btfss	3,2
 12645  0137' 2800'              	goto	u5491
 12646  0138' 2800'              	goto	u5490
 12647  0139'                    u5491:
 12648  0139' 2800'              	goto	l3871
 12649  013A'                    u5490:
 12650  013A'                    l3869:
 12651  013A' 0022               	movlb	2	; select bank2
 12652  013B' 1D00'              	btfss	_flags^(0+256),2
 12653  013C' 2800'              	goto	u5501
 12654  013D' 2800'              	goto	u5500
 12655  013E'                    u5501:
 12656  013E' 2800'              	goto	l3881
 12657  013F'                    u5500:
 12658  013F'                    l3871:
 12659                           
 12660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
 12661  013F' 30FF               	movlw	255
 12662  0140' 0020               	movlb	0	; select bank0
 12663  0141' 07AC'              	addwf	dtoa@i,f
 12664  0142' 30FF               	movlw	255
 12665  0143' 3DAD'              	addwfc	dtoa@i+1,f
 12666  0144'                    l3873:
 12667                           
 12668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12669  0144' 0822'              	movf	dtoa@s,w
 12670  0145' 0423'              	iorwf	dtoa@s+1,w
 12671  0146' 1D03               	btfss	3,2
 12672  0147' 2800'              	goto	u5511
 12673  0148' 2800'              	goto	u5510
 12674  0149'                    u5511:
 12675  0149' 2800'              	goto	l3877
 12676  014A'                    u5510:
 12677  014A'                    l3875:
 12678  014A' 302B               	movlw	43
 12679  014B' 009B'              	movwf	_dtoa$985
 12680  014C' 3000               	movlw	0
 12681  014D' 009C'              	movwf	_dtoa$985+1
 12682  014E' 2800'              	goto	l3879
 12683  014F'                    l3877:
 12684  014F' 302D               	movlw	45
 12685  0150' 009B'              	movwf	_dtoa$985
 12686  0151' 3000               	movlw	0
 12687  0152' 009C'              	movwf	_dtoa$985+1
 12688  0153'                    l3879:
 12689  0153' 081B'              	movf	_dtoa$985,w
 12690  0154' 0098'              	movwf	??_dtoa
 12691  0155' 082C'              	movf	dtoa@i,w
 12692  0156' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
 12693  0157' 0086               	movwf	6
 12694  0158' 3002               	movlw	2	; select bank4/5
 12695  0159' 0087               	movwf	7
 12696  015A' 0818'              	movf	??_dtoa,w
 12697  015B' 0081               	movwf	1
 12698  015C'                    l3881:
 12699                           
 12700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12701  015C' 0020               	movlb	0	; select bank0
 12702  015D' 082C'              	movf	dtoa@i,w
 12703  015E' 3E00'              	addlw	(low (_dbuf| (0+512)))& (0+255)
 12704  015F' 0098'              	movwf	??_dtoa
 12705  0160' 0818'              	movf	??_dtoa,w
 12706  0161' 0084'              	movwf	pad@buf
 12707  0162' 0821'              	movf	dtoa@w+1,w
 12708  0163' 0086'              	movwf	pad@p+1
 12709  0164' 0820'              	movf	dtoa@w,w
 12710  0165' 0085'              	movwf	pad@p
 12711  0166' 081D'              	movf	dtoa@fp,w
 12712  0167' 3180' 2000' 3180'  	fcall	_pad
 12713  016A' 0020               	movlb	0	; select bank0
 12714  016B' 0805'              	movf	?_pad+1,w
 12715  016C' 0091'              	movwf	?_dtoa+1
 12716  016D' 0804'              	movf	?_pad,w
 12717  016E' 0090'              	movwf	?_dtoa
 12718  016F'                    l949:
 12719  016F' 0008               	return
 12720  0170'                    __end_of_dtoa:
 12721                           
 12722                           	psect	text23
 12723  0000'                    __ptext23:	
 12724 ;; *************** function _pad *****************
 12725 ;; Defined at:
 12726 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  fp              1    wreg     PTR struct _IO_FILE
 12729 ;;		 -> sprintf@f(5), 
 12730 ;;  buf             1    4[BANK0 ] PTR unsigned char 
 12731 ;;		 -> dbuf(80), 
 12732 ;;  p               2    5[BANK0 ] int 
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12735 ;;		 -> sprintf@f(5), 
 12736 ;;  w               2    9[BANK0 ] int 
 12737 ;;  i               2    7[BANK0 ] int 
 12738 ;; Return value:  Size  Location     Type
 12739 ;;                  2    4[BANK0 ] int 
 12740 ;; Registers used:
 12741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12742 ;; Tracked objects:
 12743 ;;		On entry : 0/0
 12744 ;;		On exit  : 0/0
 12745 ;;		Unchanged: 0/0
 12746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12747 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;Total ram usage:        9 bytes
 12752 ;; Hardware stack levels used:    1
 12753 ;; Hardware stack levels required when called:    3
 12754 ;; This function calls:
 12755 ;;		_fputc
 12756 ;;		_fputs
 12757 ;;		_strlen
 12758 ;; This function is called by:
 12759 ;;		_dtoa
 12760 ;;		_efgtoa
 12761 ;; This function uses a non-reentrant model
 12762 ;;
 12763                           
 12764                           
 12765                           ;psect for function _pad
 12766  0000'                    _pad:
 12767                           
 12768                           ;incstack = 0
 12769                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12770                           ;pad@fp stored from wreg
 12771  0000' 0020               	movlb	0	; select bank0
 12772  0001' 008B'              	movwf	pad@fp
 12773  0002'                    l3717:
 12774                           
 12775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12776  0002' 0022               	movlb	2	; select bank2
 12777  0003' 1C00'              	btfss	_flags^(0+256),0
 12778  0004' 2800'              	goto	u5041
 12779  0005' 2800'              	goto	u5040
 12780  0006'                    u5041:
 12781  0006' 2800'              	goto	l3721
 12782  0007'                    u5040:
 12783  0007'                    l3719:
 12784                           
 12785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12786  0007' 0020               	movlb	0	; select bank0
 12787  0008' 080B'              	movf	pad@fp,w
 12788  0009' 008C'              	movwf	??_pad
 12789  000A' 080C'              	movf	??_pad,w
 12790  000B' 0088'              	movwf	fputs@fp
 12791  000C' 0804'              	movf	pad@buf,w
 12792  000D' 3180' 2000' 3180'  	fcall	_fputs
 12793  0010'                    l3721:
 12794                           
 12795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12796  0010' 0020               	movlb	0	; select bank0
 12797  0011' 1B86'              	btfsc	pad@p+1,7
 12798  0012' 2800'              	goto	u5051
 12799  0013' 2800'              	goto	u5050
 12800  0014'                    u5051:
 12801  0014' 2800'              	goto	l3725
 12802  0015'                    u5050:
 12803  0015'                    l3723:
 12804  0015' 0806'              	movf	pad@p+1,w
 12805  0016' 008A'              	movwf	pad@w+1
 12806  0017' 0805'              	movf	pad@p,w
 12807  0018' 0089'              	movwf	pad@w
 12808  0019' 2800'              	goto	l918
 12809  001A'                    l3725:
 12810  001A' 0189'              	clrf	pad@w
 12811  001B' 018A'              	clrf	pad@w+1
 12812  001C'                    l918:
 12813                           
 12814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12815  001C' 0187'              	clrf	pad@i
 12816  001D' 0188'              	clrf	pad@i+1
 12817                           
 12818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12819  001E' 2800'              	goto	l3731
 12820  001F'                    l3727:
 12821                           
 12822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12823  001F' 3020               	movlw	32
 12824  0020' 0080'              	movwf	fputc@c
 12825  0021' 3000               	movlw	0
 12826  0022' 0081'              	movwf	fputc@c+1
 12827  0023' 0020               	movlb	0	; select bank0
 12828  0024' 080B'              	movf	pad@fp,w
 12829  0025' 008C'              	movwf	??_pad
 12830  0026' 080C'              	movf	??_pad,w
 12831  0027' 0082'              	movwf	fputc@fp
 12832  0028' 3180' 2000' 3180'  	fcall	_fputc
 12833  002B'                    l3729:
 12834                           
 12835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12836  002B' 3001               	movlw	1
 12837  002C' 0020               	movlb	0	; select bank0
 12838  002D' 0787'              	addwf	pad@i,f
 12839  002E' 3000               	movlw	0
 12840  002F' 3D88'              	addwfc	pad@i+1,f
 12841  0030'                    l3731:
 12842                           
 12843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12844  0030' 0808'              	movf	pad@i+1,w
 12845  0031' 3A80               	xorlw	128
 12846  0032' 008C'              	movwf	??_pad
 12847  0033' 080A'              	movf	pad@w+1,w
 12848  0034' 3A80               	xorlw	128
 12849  0035' 020C'              	subwf	??_pad,w
 12850  0036' 1D03               	skipz
 12851  0037' 2800'              	goto	u5065
 12852  0038' 0809'              	movf	pad@w,w
 12853  0039' 0207'              	subwf	pad@i,w
 12854  003A'                    u5065:
 12855  003A' 1C03               	skipc
 12856  003B' 2800'              	goto	u5061
 12857  003C' 2800'              	goto	u5060
 12858  003D'                    u5061:
 12859  003D' 2800'              	goto	l3727
 12860  003E'                    u5060:
 12861  003E'                    l921:
 12862                           
 12863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12864  003E' 0022               	movlb	2	; select bank2
 12865  003F' 1800'              	btfsc	_flags^(0+256),0
 12866  0040' 2800'              	goto	u5071
 12867  0041' 2800'              	goto	u5070
 12868  0042'                    u5071:
 12869  0042' 2800'              	goto	l3735
 12870  0043'                    u5070:
 12871  0043'                    l3733:
 12872                           
 12873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12874  0043' 0020               	movlb	0	; select bank0
 12875  0044' 080B'              	movf	pad@fp,w
 12876  0045' 008C'              	movwf	??_pad
 12877  0046' 080C'              	movf	??_pad,w
 12878  0047' 0088'              	movwf	fputs@fp
 12879  0048' 0804'              	movf	pad@buf,w
 12880  0049' 3180' 2000' 3180'  	fcall	_fputs
 12881  004C'                    l3735:
 12882                           
 12883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12884  004C' 0020               	movlb	0	; select bank0
 12885  004D' 0804'              	movf	pad@buf,w
 12886  004E' 3180' 2000' 3180'  	fcall	_strlen
 12887  0051' 0020               	movlb	0	; select bank0
 12888  0052' 0809'              	movf	pad@w,w
 12889  0053' 0700'              	addwf	?_strlen,w
 12890  0054' 0084'              	movwf	?_pad
 12891  0055' 080A'              	movf	pad@w+1,w
 12892  0056' 3D01'              	addwfc	?_strlen+1,w
 12893  0057' 0085'              	movwf	?_pad+1
 12894  0058'                    l923:
 12895  0058' 0008               	return
 12896  0059'                    __end_of_pad:
 12897                           
 12898                           	psect	text24
 12899  0000'                    __ptext24:	
 12900 ;; *************** function _strlen *****************
 12901 ;; Defined at:
 12902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;  s               1    wreg     PTR const unsigned char 
 12905 ;;		 -> dbuf(80), 
 12906 ;; Auto vars:     Size  Location     Type
 12907 ;;  s               1    4[COMMON] PTR const unsigned char 
 12908 ;;		 -> dbuf(80), 
 12909 ;;  a               1    3[COMMON] PTR const unsigned char 
 12910 ;;		 -> dbuf(80), 
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  2    0[COMMON] unsigned int 
 12913 ;; Registers used:
 12914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;Total ram usage:        5 bytes
 12925 ;; Hardware stack levels used:    1
 12926 ;; This function calls:
 12927 ;;		Nothing
 12928 ;; This function is called by:
 12929 ;;		_pad
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           
 12934                           ;psect for function _strlen
 12935  0000'                    _strlen:
 12936                           
 12937                           ;incstack = 0
 12938                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12939                           ;strlen@s stored from wreg
 12940  0000' 0084'              	movwf	strlen@s
 12941  0001'                    l3177:
 12942  0001' 0804'              	movf	strlen@s,w
 12943  0002' 0082'              	movwf	??_strlen
 12944  0003' 0802'              	movf	??_strlen,w
 12945  0004' 0083'              	movwf	strlen@a
 12946  0005' 2800'              	goto	l3181
 12947  0006'                    l3179:
 12948  0006' 3001               	movlw	1
 12949  0007' 0082'              	movwf	??_strlen
 12950  0008' 0802'              	movf	??_strlen,w
 12951  0009' 0784'              	addwf	strlen@s,f
 12952  000A'                    l3181:
 12953  000A' 0804'              	movf	strlen@s,w
 12954  000B' 0086               	movwf	6
 12955  000C' 3002               	movlw	2	; select bank4/5
 12956  000D' 0087               	movwf	7
 12957  000E' 0801               	movf	1,w
 12958  000F' 1D03               	btfss	3,2
 12959  0010' 2800'              	goto	u3831
 12960  0011' 2800'              	goto	u3830
 12961  0012'                    u3831:
 12962  0012' 2800'              	goto	l3179
 12963  0013'                    u3830:
 12964  0013'                    l3183:
 12965  0013' 0803'              	movf	strlen@a,w
 12966  0014' 0204'              	subwf	strlen@s,w
 12967  0015' 0080'              	movwf	?_strlen
 12968  0016' 0181'              	clrf	?_strlen+1
 12969  0017' 1B80'              	btfsc	?_strlen,7
 12970  0018' 0381'              	decf	?_strlen+1,f
 12971  0019'                    l1203:
 12972  0019' 0008               	return
 12973  001A'                    __end_of_strlen:
 12974                           
 12975                           	psect	text25
 12976  0000'                    __ptext25:	
 12977 ;; *************** function _fputs *****************
 12978 ;; Defined at:
 12979 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;  s               1    wreg     PTR const unsigned char 
 12982 ;;		 -> dbuf(80), 
 12983 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
 12984 ;;		 -> sprintf@f(5), 
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;  s               1    3[BANK0 ] PTR const unsigned char 
 12987 ;;		 -> dbuf(80), 
 12988 ;;  i               2    1[BANK0 ] int 
 12989 ;;  c               1    0[BANK0 ] unsigned char 
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  2    8[COMMON] int 
 12992 ;; Registers used:
 12993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12999 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13001 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13002 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;Total ram usage:        8 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; Hardware stack levels required when called:    2
 13006 ;; This function calls:
 13007 ;;		_fputc
 13008 ;; This function is called by:
 13009 ;;		_pad
 13010 ;; This function uses a non-reentrant model
 13011 ;;
 13012                           
 13013                           
 13014                           ;psect for function _fputs
 13015  0000'                    _fputs:
 13016                           
 13017                           ;incstack = 0
 13018                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13019                           ;fputs@s stored from wreg
 13020  0000' 0020               	movlb	0	; select bank0
 13021  0001' 0083'              	movwf	fputs@s
 13022  0002'                    l3169:
 13023  0002' 0181'              	clrf	fputs@i
 13024  0003' 0182'              	clrf	fputs@i+1
 13025  0004' 2800'              	goto	l3175
 13026  0005'                    l3171:
 13027  0005' 0800'              	movf	fputs@c,w
 13028  0006' 0089'              	movwf	??_fputs
 13029  0007' 018A'              	clrf	??_fputs+1
 13030  0008' 0809'              	movf	??_fputs,w
 13031  0009' 0080'              	movwf	fputc@c
 13032  000A' 080A'              	movf	??_fputs+1,w
 13033  000B' 0081'              	movwf	fputc@c+1
 13034  000C' 0808'              	movf	fputs@fp,w
 13035  000D' 008B'              	movwf	??_fputs+2
 13036  000E' 080B'              	movf	??_fputs+2,w
 13037  000F' 0082'              	movwf	fputc@fp
 13038  0010' 3180' 2000' 3180'  	fcall	_fputc
 13039  0013'                    l3173:
 13040  0013' 3001               	movlw	1
 13041  0014' 0020               	movlb	0	; select bank0
 13042  0015' 0781'              	addwf	fputs@i,f
 13043  0016' 3000               	movlw	0
 13044  0017' 3D82'              	addwfc	fputs@i+1,f
 13045  0018'                    l3175:
 13046  0018' 0801'              	movf	fputs@i,w
 13047  0019' 0703'              	addwf	fputs@s,w
 13048  001A' 0089'              	movwf	??_fputs
 13049  001B' 0809'              	movf	??_fputs,w
 13050  001C' 0086               	movwf	6
 13051  001D' 3002               	movlw	2	; select bank4/5
 13052  001E' 0087               	movwf	7
 13053  001F' 0801               	movf	1,w
 13054  0020' 008A'              	movwf	??_fputs+1
 13055  0021' 080A'              	movf	??_fputs+1,w
 13056  0022' 0080'              	movwf	fputs@c
 13057  0023' 0800'              	movf	fputs@c,w
 13058  0024' 1D03               	btfss	3,2
 13059  0025' 2800'              	goto	u3821
 13060  0026' 2800'              	goto	u3820
 13061  0027'                    u3821:
 13062  0027' 2800'              	goto	l3171
 13063  0028'                    u3820:
 13064  0028'                    l1188:
 13065  0028' 0008               	return
 13066  0029'                    __end_of_fputs:
 13067                           
 13068                           	psect	text26
 13069  0000'                    __ptext26:	
 13070 ;; *************** function _fputc *****************
 13071 ;; Defined at:
 13072 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  c               2    0[COMMON] int 
 13075 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
 13076 ;;		 -> sprintf@f(5), 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;		None
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  2    0[COMMON] int 
 13081 ;; Registers used:
 13082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;Total ram usage:        8 bytes
 13093 ;; Hardware stack levels used:    1
 13094 ;; Hardware stack levels required when called:    1
 13095 ;; This function calls:
 13096 ;;		_putch
 13097 ;; This function is called by:
 13098 ;;		_pad
 13099 ;;		_vfpfcnvrt
 13100 ;;		_fputs
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104                           
 13105                           ;psect for function _fputc
 13106  0000'                    _fputc:
 13107  0000'                    l2945:	
 13108                           ;incstack = 0
 13109                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13110                           
 13111  0000' 0802'              	movf	fputc@fp,w
 13112  0001' 1903               	btfsc	3,2
 13113  0002' 2800'              	goto	u3321
 13114  0003' 2800'              	goto	u3320
 13115  0004'                    u3321:
 13116  0004' 2800'              	goto	l2949
 13117  0005'                    u3320:
 13118  0005'                    l2947:
 13119  0005' 0802'              	movf	fputc@fp,w
 13120  0006' 1D03               	btfss	3,2
 13121  0007' 2800'              	goto	u3331
 13122  0008' 2800'              	goto	u3330
 13123  0009'                    u3331:
 13124  0009' 2800'              	goto	l2951
 13125  000A'                    u3330:
 13126  000A'                    l2949:
 13127  000A' 0800'              	movf	fputc@c,w
 13128  000B' 3180' 2000' 3180'  	fcall	_putch
 13129  000E' 2800'              	goto	l1180
 13130  000F'                    l2951:
 13131  000F' 0802'              	movf	fputc@fp,w
 13132  0010' 3E03               	addlw	3
 13133  0011' 0086               	movwf	6
 13134  0012' 3001               	movlw	1	; select bank2/3
 13135  0013' 0087               	movwf	7
 13136  0014' 0016               	moviw fsr1++
 13137  0015' 0401               	iorwf	1,w
 13138  0016' 1903               	btfsc	3,2
 13139  0017' 2800'              	goto	u3341
 13140  0018' 2800'              	goto	u3340
 13141  0019'                    u3341:
 13142  0019' 2800'              	goto	l2955
 13143  001A'                    u3340:
 13144  001A'                    l2953:
 13145  001A' 0802'              	movf	fputc@fp,w
 13146  001B' 3E03               	addlw	3
 13147  001C' 0086               	movwf	6
 13148  001D' 3001               	movlw	1	; select bank2/3
 13149  001E' 0087               	movwf	7
 13150  001F' 3F40               	moviw [0]fsr1
 13151  0020' 0083'              	movwf	??_fputc
 13152  0021' 3F41               	moviw [1]fsr1
 13153  0022' 0084'              	movwf	??_fputc+1
 13154  0023' 0A02'              	incf	fputc@fp,w
 13155  0024' 0086               	movwf	6
 13156  0025' 3001               	movlw	1	; select bank2/3
 13157  0026' 0087               	movwf	7
 13158  0027' 3F40               	moviw [0]fsr1
 13159  0028' 0085'              	movwf	??_fputc+2
 13160  0029' 3F41               	moviw [1]fsr1
 13161  002A' 0086'              	movwf	??_fputc+3
 13162  002B' 0806'              	movf	??_fputc+3,w
 13163  002C' 3A80               	xorlw	128
 13164  002D' 0087'              	movwf	??_fputc+4
 13165  002E' 0804'              	movf	??_fputc+1,w
 13166  002F' 3A80               	xorlw	128
 13167  0030' 0207'              	subwf	??_fputc+4,w
 13168  0031' 1D03               	skipz
 13169  0032' 2800'              	goto	u3355
 13170  0033' 0803'              	movf	??_fputc,w
 13171  0034' 0205'              	subwf	??_fputc+2,w
 13172  0035'                    u3355:
 13173  0035' 1803               	skipnc
 13174  0036' 2800'              	goto	u3351
 13175  0037' 2800'              	goto	u3350
 13176  0038'                    u3351:
 13177  0038' 2800'              	goto	l1180
 13178  0039'                    u3350:
 13179  0039'                    l2955:
 13180  0039' 0800'              	movf	fputc@c,w
 13181  003A' 0083'              	movwf	??_fputc
 13182  003B' 0802'              	movf	fputc@fp,w
 13183  003C' 0086               	movwf	6
 13184  003D' 3001               	movlw	1	; select bank2/3
 13185  003E' 0087               	movwf	7
 13186  003F' 0A02'              	incf	fputc@fp,w
 13187  0040' 0084               	movwf	4
 13188  0041' 3001               	movlw	1	; select bank2/3
 13189  0042' 0085               	movwf	5
 13190  0043' 0800               	movf	0,w
 13191  0044' 0701               	addwf	1,w
 13192  0045' 0084'              	movwf	??_fputc+1
 13193  0046' 0804'              	movf	??_fputc+1,w
 13194  0047' 0086               	movwf	6
 13195  0048' 3001               	movlw	1	; select bank2/3
 13196  0049' 0087               	movwf	7
 13197  004A' 0803'              	movf	??_fputc,w
 13198  004B' 0081               	movwf	1
 13199  004C'                    l2957:
 13200  004C' 0A02'              	incf	fputc@fp,w
 13201  004D' 0086               	movwf	6
 13202  004E' 3001               	movlw	1	; select bank2/3
 13203  004F' 0087               	movwf	7
 13204  0050' 3001               	movlw	1
 13205  0051' 0781               	addwf	1,f
 13206  0052' 3141               	addfsr 1,1
 13207  0053' 1803               	skipnc
 13208  0054' 0A81               	incf	1,f
 13209  0055'                    l1180:
 13210  0055' 0008               	return
 13211  0056'                    __end_of_fputc:
 13212                           
 13213                           	psect	text27
 13214  0000'                    __ptext27:	
 13215 ;; *************** function _putch *****************
 13216 ;; Defined at:
 13217 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
 13218 ;; Parameters:    Size  Location     Type
 13219 ;;  c               1    wreg     unsigned char 
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;  c               1    0[COMMON] unsigned char 
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  1    wreg      void 
 13224 ;; Registers used:
 13225 ;;		wreg
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;Total ram usage:        0 bytes
 13236 ;; Hardware stack levels used:    1
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_fputc
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           
 13245                           ;psect for function _putch
 13246  0000'                    _putch:
 13247  0000'                    l1191:	
 13248                           ;incstack = 0
 13249                           ; Regs used in _putch: [wreg]
 13250                           
 13251  0000' 0008               	return
 13252  0001'                    __end_of_putch:
 13253                           
 13254                           	psect	text28
 13255  0000'                    __ptext28:	
 13256 ;; *************** function _abs *****************
 13257 ;; Defined at:
 13258 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
 13259 ;; Parameters:    Size  Location     Type
 13260 ;;  a               2    3[COMMON] int 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;		None
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  2    3[COMMON] int 
 13265 ;; Registers used:
 13266 ;;		wreg, status,2, status,0
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;Total ram usage:        4 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; This function calls:
 13279 ;;		Nothing
 13280 ;; This function is called by:
 13281 ;;		_dtoa
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           
 13286                           ;psect for function _abs
 13287  0000'                    _abs:
 13288  0000'                    l3739:	
 13289                           ;incstack = 0
 13290                           ; Regs used in _abs: [wreg+status,2+status,0]
 13291                           
 13292  0000' 0804'              	movf	abs@a+1,w
 13293  0001' 3A80               	xorlw	128
 13294  0002' 0085'              	movwf	??_abs
 13295  0003' 3080               	movlw	128
 13296  0004' 0205'              	subwf	??_abs,w
 13297  0005' 1D03               	skipz
 13298  0006' 2800'              	goto	u5085
 13299  0007' 3001               	movlw	1
 13300  0008' 0203'              	subwf	abs@a,w
 13301  0009'                    u5085:
 13302  0009' 1803               	skipnc
 13303  000A' 2800'              	goto	u5081
 13304  000B' 2800'              	goto	u5080
 13305  000C'                    u5081:
 13306  000C' 2800'              	goto	l1101
 13307  000D'                    u5080:
 13308  000D'                    l3741:
 13309  000D' 0903'              	comf	abs@a,w
 13310  000E' 0085'              	movwf	??_abs
 13311  000F' 0904'              	comf	abs@a+1,w
 13312  0010' 0086'              	movwf	??_abs+1
 13313  0011' 0A85'              	incf	??_abs,f
 13314  0012' 1903               	skipnz
 13315  0013' 0A86'              	incf	??_abs+1,f
 13316  0014' 0805'              	movf	??_abs,w
 13317  0015' 0083'              	movwf	?_abs
 13318  0016' 0806'              	movf	??_abs+1,w
 13319  0017' 0084'              	movwf	?_abs+1
 13320  0018' 2800'              	goto	l1104
 13321  0019'                    l1101:
 13322  0019'                    l1104:
 13323  0019' 0008               	return
 13324  001A'                    __end_of_abs:
 13325                           
 13326                           	psect	text29
 13327  0000'                    __ptext29:	
 13328 ;; *************** function ___aomod *****************
 13329 ;; Defined at:
 13330 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  divisor         8    0[BANK0 ] long long 
 13333 ;;  dividend        8    8[BANK0 ] long long 
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;  sign            1    2[COMMON] unsigned char 
 13336 ;;  counter         1    1[COMMON] unsigned char 
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  8    0[BANK0 ] long long 
 13339 ;; Registers used:
 13340 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13346 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;Total ram usage:       19 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; This function calls:
 13353 ;;		Nothing
 13354 ;; This function is called by:
 13355 ;;		_dtoa
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           
 13360                           ;psect for function ___aomod
 13361  0000'                    ___aomod:
 13362  0000'                    l3243:	
 13363                           ;incstack = 0
 13364                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13365                           
 13366  0000' 0182'              	clrf	___aomod@sign
 13367  0001'                    l3245:
 13368  0001' 3000'              	movlw	low ___aomod@dividend
 13369  0002' 0086               	movwf	6
 13370  0003' 3000'              	movlw	high ___aomod@dividend
 13371  0004' 0087               	movwf	7
 13372  0005' 3F47               	moviw [7]fsr1
 13373  0006' 0080'              	movwf	??___aomod
 13374  0007' 1F80'              	btfss	??___aomod,7
 13375  0008' 2800'              	goto	u4011
 13376  0009' 2800'              	goto	u4010
 13377  000A'                    u4011:
 13378  000A' 2800'              	goto	l3249
 13379  000B'                    u4010:
 13380  000B'                    l3247:
 13381  000B' 0020               	movlb	0	; select bank0
 13382  000C' 0988'              	comf	___aomod@dividend,f
 13383  000D' 0989'              	comf	___aomod@dividend+1,f
 13384  000E' 098A'              	comf	___aomod@dividend+2,f
 13385  000F' 098B'              	comf	___aomod@dividend+3,f
 13386  0010' 098C'              	comf	___aomod@dividend+4,f
 13387  0011' 098D'              	comf	___aomod@dividend+5,f
 13388  0012' 098E'              	comf	___aomod@dividend+6,f
 13389  0013' 098F'              	comf	___aomod@dividend+7,f
 13390  0014' 0A88'              	incf	___aomod@dividend,f
 13391  0015' 1D03               	skipz
 13392  0016' 2800'              	goto	u402lld
 13393  0017' 0A89'              	incf	___aomod@dividend+1,f
 13394  0018' 1D03               	skipz
 13395  0019' 2800'              	goto	u402lld
 13396  001A' 0A8A'              	incf	___aomod@dividend+2,f
 13397  001B' 1D03               	skipz
 13398  001C' 2800'              	goto	u402lld
 13399  001D' 0A8B'              	incf	___aomod@dividend+3,f
 13400  001E' 1D03               	skipz
 13401  001F' 2800'              	goto	u402lld
 13402  0020' 0A8C'              	incf	___aomod@dividend+4,f
 13403  0021' 1D03               	skipz
 13404  0022' 2800'              	goto	u402lld
 13405  0023' 0A8D'              	incf	___aomod@dividend+5,f
 13406  0024' 1D03               	skipz
 13407  0025' 2800'              	goto	u402lld
 13408  0026' 0A8E'              	incf	___aomod@dividend+6,f
 13409  0027' 1D03               	skipz
 13410  0028' 2800'              	goto	u402lld
 13411  0029' 0A8F'              	incf	___aomod@dividend+7,f
 13412  002A'                    u402lld:
 13413  002A' 0182'              	clrf	___aomod@sign
 13414  002B' 0A82'              	incf	___aomod@sign,f
 13415  002C'                    l3249:
 13416  002C' 3000'              	movlw	low ___aomod@divisor
 13417  002D' 0086               	movwf	6
 13418  002E' 3000'              	movlw	high ___aomod@divisor
 13419  002F' 0087               	movwf	7
 13420  0030' 3F47               	moviw [7]fsr1
 13421  0031' 0080'              	movwf	??___aomod
 13422  0032' 1F80'              	btfss	??___aomod,7
 13423  0033' 2800'              	goto	u4031
 13424  0034' 2800'              	goto	u4030
 13425  0035'                    u4031:
 13426  0035' 2800'              	goto	l3253
 13427  0036'                    u4030:
 13428  0036'                    l3251:
 13429  0036' 0020               	movlb	0	; select bank0
 13430  0037' 0980'              	comf	___aomod@divisor,f
 13431  0038' 0981'              	comf	___aomod@divisor+1,f
 13432  0039' 0982'              	comf	___aomod@divisor+2,f
 13433  003A' 0983'              	comf	___aomod@divisor+3,f
 13434  003B' 0984'              	comf	___aomod@divisor+4,f
 13435  003C' 0985'              	comf	___aomod@divisor+5,f
 13436  003D' 0986'              	comf	___aomod@divisor+6,f
 13437  003E' 0987'              	comf	___aomod@divisor+7,f
 13438  003F' 0A80'              	incf	___aomod@divisor,f
 13439  0040' 1D03               	skipz
 13440  0041' 2800'              	goto	u404lld
 13441  0042' 0A81'              	incf	___aomod@divisor+1,f
 13442  0043' 1D03               	skipz
 13443  0044' 2800'              	goto	u404lld
 13444  0045' 0A82'              	incf	___aomod@divisor+2,f
 13445  0046' 1D03               	skipz
 13446  0047' 2800'              	goto	u404lld
 13447  0048' 0A83'              	incf	___aomod@divisor+3,f
 13448  0049' 1D03               	skipz
 13449  004A' 2800'              	goto	u404lld
 13450  004B' 0A84'              	incf	___aomod@divisor+4,f
 13451  004C' 1D03               	skipz
 13452  004D' 2800'              	goto	u404lld
 13453  004E' 0A85'              	incf	___aomod@divisor+5,f
 13454  004F' 1D03               	skipz
 13455  0050' 2800'              	goto	u404lld
 13456  0051' 0A86'              	incf	___aomod@divisor+6,f
 13457  0052' 1D03               	skipz
 13458  0053' 2800'              	goto	u404lld
 13459  0054' 0A87'              	incf	___aomod@divisor+7,f
 13460  0055'                    u404lld:
 13461  0055'                    l3253:
 13462  0055' 0020               	movlb	0	; select bank0
 13463  0056' 0800'              	movf	___aomod@divisor,w
 13464  0057' 0401'              	iorwf	___aomod@divisor+1,w
 13465  0058' 0402'              	iorwf	___aomod@divisor+2,w
 13466  0059' 0403'              	iorwf	___aomod@divisor+3,w
 13467  005A' 0404'              	iorwf	___aomod@divisor+4,w
 13468  005B' 0405'              	iorwf	___aomod@divisor+5,w
 13469  005C' 0406'              	iorwf	___aomod@divisor+6,w
 13470  005D' 0407'              	iorwf	___aomod@divisor+7,w
 13471  005E' 1903               	skipnz
 13472  005F' 2800'              	goto	u4051
 13473  0060' 2800'              	goto	u4050
 13474  0061'                    u4051:
 13475  0061' 2800'              	goto	l3269
 13476  0062'                    u4050:
 13477  0062'                    l3255:
 13478  0062' 0181'              	clrf	___aomod@counter
 13479  0063' 0A81'              	incf	___aomod@counter,f
 13480  0064' 2800'              	goto	l3261
 13481  0065'                    l3257:
 13482  0065' 3580'              	lslf	___aomod@divisor,f
 13483  0066' 0D81'              	rlf	___aomod@divisor+1,f
 13484  0067' 0D82'              	rlf	___aomod@divisor+2,f
 13485  0068' 0D83'              	rlf	___aomod@divisor+3,f
 13486  0069' 0D84'              	rlf	___aomod@divisor+4,f
 13487  006A' 0D85'              	rlf	___aomod@divisor+5,f
 13488  006B' 0D86'              	rlf	___aomod@divisor+6,f
 13489  006C' 0D87'              	rlf	___aomod@divisor+7,f
 13490  006D'                    l3259:
 13491  006D' 3001               	movlw	1
 13492  006E' 0080'              	movwf	??___aomod
 13493  006F' 0800'              	movf	??___aomod,w
 13494  0070' 0781'              	addwf	___aomod@counter,f
 13495  0071'                    l3261:
 13496  0071' 1F87'              	btfss	___aomod@divisor+7,7
 13497  0072' 2800'              	goto	u4061
 13498  0073' 2800'              	goto	u4060
 13499  0074'                    u4061:
 13500  0074' 2800'              	goto	l3257
 13501  0075'                    u4060:
 13502  0075'                    l3263:
 13503  0075' 0807'              	movf	___aomod@divisor+7,w
 13504  0076' 020F'              	subwf	___aomod@dividend+7,w
 13505  0077' 1D03               	skipz
 13506  0078' 2800'              	goto	u4075
 13507  0079' 0806'              	movf	___aomod@divisor+6,w
 13508  007A' 020E'              	subwf	___aomod@dividend+6,w
 13509  007B' 1D03               	skipz
 13510  007C' 2800'              	goto	u4075
 13511  007D' 0805'              	movf	___aomod@divisor+5,w
 13512  007E' 020D'              	subwf	___aomod@dividend+5,w
 13513  007F' 1D03               	skipz
 13514  0080' 2800'              	goto	u4075
 13515  0081' 0804'              	movf	___aomod@divisor+4,w
 13516  0082' 020C'              	subwf	___aomod@dividend+4,w
 13517  0083' 1D03               	skipz
 13518  0084' 2800'              	goto	u4075
 13519  0085' 0803'              	movf	___aomod@divisor+3,w
 13520  0086' 020B'              	subwf	___aomod@dividend+3,w
 13521  0087' 1D03               	skipz
 13522  0088' 2800'              	goto	u4075
 13523  0089' 0802'              	movf	___aomod@divisor+2,w
 13524  008A' 020A'              	subwf	___aomod@dividend+2,w
 13525  008B' 1D03               	skipz
 13526  008C' 2800'              	goto	u4075
 13527  008D' 0801'              	movf	___aomod@divisor+1,w
 13528  008E' 0209'              	subwf	___aomod@dividend+1,w
 13529  008F' 1D03               	skipz
 13530  0090' 2800'              	goto	u4075
 13531  0091' 0800'              	movf	___aomod@divisor,w
 13532  0092' 0208'              	subwf	___aomod@dividend,w
 13533  0093'                    u4075:
 13534  0093' 1C03               	skipc
 13535  0094' 2800'              	goto	u4071
 13536  0095' 2800'              	goto	u4070
 13537  0096'                    u4071:
 13538  0096' 2800'              	goto	l3267
 13539  0097'                    u4070:
 13540  0097'                    l3265:
 13541  0097' 0800'              	movf	___aomod@divisor,w
 13542  0098' 0288'              	subwf	___aomod@dividend,f
 13543  0099' 0801'              	movf	___aomod@divisor+1,w
 13544  009A' 3B89'              	subwfb	___aomod@dividend+1,f
 13545  009B' 0802'              	movf	___aomod@divisor+2,w
 13546  009C' 3B8A'              	subwfb	___aomod@dividend+2,f
 13547  009D' 0803'              	movf	___aomod@divisor+3,w
 13548  009E' 3B8B'              	subwfb	___aomod@dividend+3,f
 13549  009F' 0804'              	movf	___aomod@divisor+4,w
 13550  00A0' 3B8C'              	subwfb	___aomod@dividend+4,f
 13551  00A1' 0805'              	movf	___aomod@divisor+5,w
 13552  00A2' 3B8D'              	subwfb	___aomod@dividend+5,f
 13553  00A3' 0806'              	movf	___aomod@divisor+6,w
 13554  00A4' 3B8E'              	subwfb	___aomod@dividend+6,f
 13555  00A5' 0807'              	movf	___aomod@divisor+7,w
 13556  00A6' 3B8F'              	subwfb	___aomod@dividend+7,f
 13557  00A7'                    l3267:
 13558  00A7' 3687'              	lsrf	___aomod@divisor+7,f
 13559  00A8' 0C86'              	rrf	___aomod@divisor+6,f
 13560  00A9' 0C85'              	rrf	___aomod@divisor+5,f
 13561  00AA' 0C84'              	rrf	___aomod@divisor+4,f
 13562  00AB' 0C83'              	rrf	___aomod@divisor+3,f
 13563  00AC' 0C82'              	rrf	___aomod@divisor+2,f
 13564  00AD' 0C81'              	rrf	___aomod@divisor+1,f
 13565  00AE' 0C80'              	rrf	___aomod@divisor,f
 13566  00AF' 3001               	movlw	1
 13567  00B0' 0281'              	subwf	___aomod@counter,f
 13568  00B1' 1D03               	btfss	3,2
 13569  00B2' 2800'              	goto	u4081
 13570  00B3' 2800'              	goto	u4080
 13571  00B4'                    u4081:
 13572  00B4' 2800'              	goto	l3263
 13573  00B5'                    u4080:
 13574  00B5'                    l3269:
 13575  00B5' 0802'              	movf	___aomod@sign,w
 13576  00B6' 1903               	btfsc	3,2
 13577  00B7' 2800'              	goto	u4091
 13578  00B8' 2800'              	goto	u4090
 13579  00B9'                    u4091:
 13580  00B9' 2800'              	goto	l525
 13581  00BA'                    u4090:
 13582  00BA'                    l3271:
 13583  00BA' 0988'              	comf	___aomod@dividend,f
 13584  00BB' 0989'              	comf	___aomod@dividend+1,f
 13585  00BC' 098A'              	comf	___aomod@dividend+2,f
 13586  00BD' 098B'              	comf	___aomod@dividend+3,f
 13587  00BE' 098C'              	comf	___aomod@dividend+4,f
 13588  00BF' 098D'              	comf	___aomod@dividend+5,f
 13589  00C0' 098E'              	comf	___aomod@dividend+6,f
 13590  00C1' 098F'              	comf	___aomod@dividend+7,f
 13591  00C2' 0A88'              	incf	___aomod@dividend,f
 13592  00C3' 1D03               	skipz
 13593  00C4' 2800'              	goto	u410lld
 13594  00C5' 0A89'              	incf	___aomod@dividend+1,f
 13595  00C6' 1D03               	skipz
 13596  00C7' 2800'              	goto	u410lld
 13597  00C8' 0A8A'              	incf	___aomod@dividend+2,f
 13598  00C9' 1D03               	skipz
 13599  00CA' 2800'              	goto	u410lld
 13600  00CB' 0A8B'              	incf	___aomod@dividend+3,f
 13601  00CC' 1D03               	skipz
 13602  00CD' 2800'              	goto	u410lld
 13603  00CE' 0A8C'              	incf	___aomod@dividend+4,f
 13604  00CF' 1D03               	skipz
 13605  00D0' 2800'              	goto	u410lld
 13606  00D1' 0A8D'              	incf	___aomod@dividend+5,f
 13607  00D2' 1D03               	skipz
 13608  00D3' 2800'              	goto	u410lld
 13609  00D4' 0A8E'              	incf	___aomod@dividend+6,f
 13610  00D5' 1D03               	skipz
 13611  00D6' 2800'              	goto	u410lld
 13612  00D7' 0A8F'              	incf	___aomod@dividend+7,f
 13613  00D8'                    u410lld:
 13614  00D8'                    l525:
 13615  00D8' 0020               	movlb	0	; select bank0
 13616  00D9' 0808'              	movf	___aomod@dividend,w
 13617  00DA' 0080'              	movwf	?___aomod
 13618  00DB' 0809'              	movf	___aomod@dividend+1,w
 13619  00DC' 0081'              	movwf	?___aomod+1
 13620  00DD' 080A'              	movf	___aomod@dividend+2,w
 13621  00DE' 0082'              	movwf	?___aomod+2
 13622  00DF' 080B'              	movf	___aomod@dividend+3,w
 13623  00E0' 0083'              	movwf	?___aomod+3
 13624  00E1' 080C'              	movf	___aomod@dividend+4,w
 13625  00E2' 0084'              	movwf	?___aomod+4
 13626  00E3' 080D'              	movf	___aomod@dividend+5,w
 13627  00E4' 0085'              	movwf	?___aomod+5
 13628  00E5' 080E'              	movf	___aomod@dividend+6,w
 13629  00E6' 0086'              	movwf	?___aomod+6
 13630  00E7' 080F'              	movf	___aomod@dividend+7,w
 13631  00E8' 0087'              	movwf	?___aomod+7
 13632  00E9'                    l526:
 13633  00E9' 0008               	return
 13634  00EA'                    __end_of___aomod:
 13635                           
 13636                           	psect	text30
 13637  0000'                    __ptext30:	
 13638 ;; *************** function ___aodiv *****************
 13639 ;; Defined at:
 13640 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
 13641 ;; Parameters:    Size  Location     Type
 13642 ;;  divisor         8    0[BANK0 ] long long 
 13643 ;;  dividend        8    8[BANK0 ] long long 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  quotient        8    3[COMMON] long long 
 13646 ;;  sign            1    2[COMMON] unsigned char 
 13647 ;;  counter         1    1[COMMON] unsigned char 
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  8    0[BANK0 ] long long 
 13650 ;; Registers used:
 13651 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13657 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;Total ram usage:       27 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_dtoa
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           
 13671                           ;psect for function ___aodiv
 13672  0000'                    ___aodiv:
 13673  0000'                    l3205:	
 13674                           ;incstack = 0
 13675                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13676                           
 13677  0000' 0182'              	clrf	___aodiv@sign
 13678  0001'                    l3207:
 13679  0001' 3000'              	movlw	low ___aodiv@divisor
 13680  0002' 0086               	movwf	6
 13681  0003' 3000'              	movlw	high ___aodiv@divisor
 13682  0004' 0087               	movwf	7
 13683  0005' 3F47               	moviw [7]fsr1
 13684  0006' 0080'              	movwf	??___aodiv
 13685  0007' 1F80'              	btfss	??___aodiv,7
 13686  0008' 2800'              	goto	u3901
 13687  0009' 2800'              	goto	u3900
 13688  000A'                    u3901:
 13689  000A' 2800'              	goto	l3211
 13690  000B'                    u3900:
 13691  000B'                    l3209:
 13692  000B' 0020               	movlb	0	; select bank0
 13693  000C' 0980'              	comf	___aodiv@divisor,f
 13694  000D' 0981'              	comf	___aodiv@divisor+1,f
 13695  000E' 0982'              	comf	___aodiv@divisor+2,f
 13696  000F' 0983'              	comf	___aodiv@divisor+3,f
 13697  0010' 0984'              	comf	___aodiv@divisor+4,f
 13698  0011' 0985'              	comf	___aodiv@divisor+5,f
 13699  0012' 0986'              	comf	___aodiv@divisor+6,f
 13700  0013' 0987'              	comf	___aodiv@divisor+7,f
 13701  0014' 0A80'              	incf	___aodiv@divisor,f
 13702  0015' 1D03               	skipz
 13703  0016' 2800'              	goto	u391lld
 13704  0017' 0A81'              	incf	___aodiv@divisor+1,f
 13705  0018' 1D03               	skipz
 13706  0019' 2800'              	goto	u391lld
 13707  001A' 0A82'              	incf	___aodiv@divisor+2,f
 13708  001B' 1D03               	skipz
 13709  001C' 2800'              	goto	u391lld
 13710  001D' 0A83'              	incf	___aodiv@divisor+3,f
 13711  001E' 1D03               	skipz
 13712  001F' 2800'              	goto	u391lld
 13713  0020' 0A84'              	incf	___aodiv@divisor+4,f
 13714  0021' 1D03               	skipz
 13715  0022' 2800'              	goto	u391lld
 13716  0023' 0A85'              	incf	___aodiv@divisor+5,f
 13717  0024' 1D03               	skipz
 13718  0025' 2800'              	goto	u391lld
 13719  0026' 0A86'              	incf	___aodiv@divisor+6,f
 13720  0027' 1D03               	skipz
 13721  0028' 2800'              	goto	u391lld
 13722  0029' 0A87'              	incf	___aodiv@divisor+7,f
 13723  002A'                    u391lld:
 13724  002A' 0182'              	clrf	___aodiv@sign
 13725  002B' 0A82'              	incf	___aodiv@sign,f
 13726  002C'                    l3211:
 13727  002C' 3000'              	movlw	low ___aodiv@dividend
 13728  002D' 0086               	movwf	6
 13729  002E' 3000'              	movlw	high ___aodiv@dividend
 13730  002F' 0087               	movwf	7
 13731  0030' 3F47               	moviw [7]fsr1
 13732  0031' 0080'              	movwf	??___aodiv
 13733  0032' 1F80'              	btfss	??___aodiv,7
 13734  0033' 2800'              	goto	u3921
 13735  0034' 2800'              	goto	u3920
 13736  0035'                    u3921:
 13737  0035' 2800'              	goto	l3217
 13738  0036'                    u3920:
 13739  0036'                    l3213:
 13740  0036' 0020               	movlb	0	; select bank0
 13741  0037' 0988'              	comf	___aodiv@dividend,f
 13742  0038' 0989'              	comf	___aodiv@dividend+1,f
 13743  0039' 098A'              	comf	___aodiv@dividend+2,f
 13744  003A' 098B'              	comf	___aodiv@dividend+3,f
 13745  003B' 098C'              	comf	___aodiv@dividend+4,f
 13746  003C' 098D'              	comf	___aodiv@dividend+5,f
 13747  003D' 098E'              	comf	___aodiv@dividend+6,f
 13748  003E' 098F'              	comf	___aodiv@dividend+7,f
 13749  003F' 0A88'              	incf	___aodiv@dividend,f
 13750  0040' 1D03               	skipz
 13751  0041' 2800'              	goto	u393lld
 13752  0042' 0A89'              	incf	___aodiv@dividend+1,f
 13753  0043' 1D03               	skipz
 13754  0044' 2800'              	goto	u393lld
 13755  0045' 0A8A'              	incf	___aodiv@dividend+2,f
 13756  0046' 1D03               	skipz
 13757  0047' 2800'              	goto	u393lld
 13758  0048' 0A8B'              	incf	___aodiv@dividend+3,f
 13759  0049' 1D03               	skipz
 13760  004A' 2800'              	goto	u393lld
 13761  004B' 0A8C'              	incf	___aodiv@dividend+4,f
 13762  004C' 1D03               	skipz
 13763  004D' 2800'              	goto	u393lld
 13764  004E' 0A8D'              	incf	___aodiv@dividend+5,f
 13765  004F' 1D03               	skipz
 13766  0050' 2800'              	goto	u393lld
 13767  0051' 0A8E'              	incf	___aodiv@dividend+6,f
 13768  0052' 1D03               	skipz
 13769  0053' 2800'              	goto	u393lld
 13770  0054' 0A8F'              	incf	___aodiv@dividend+7,f
 13771  0055'                    u393lld:
 13772  0055'                    l3215:
 13773  0055' 3001               	movlw	1
 13774  0056' 0080'              	movwf	??___aodiv
 13775  0057' 0800'              	movf	??___aodiv,w
 13776  0058' 0682'              	xorwf	___aodiv@sign,f
 13777  0059'                    l3217:
 13778  0059' 3000'              	movlw	low ___aodiv@quotient
 13779  005A' 0086               	movwf	6
 13780  005B' 3000'              	movlw	high ___aodiv@quotient
 13781  005C' 0087               	movwf	7
 13782  005D' 3008               	movlw	8
 13783  005E' 0080'              	movwf	??___aodiv
 13784  005F' 3000               	movlw	0
 13785  0060'                    u3940:
 13786  0060' 001E               	movwi fsr1++
 13787  0061' 0B80'              	decfsz	??___aodiv,f
 13788  0062' 2800'              	goto	u3940
 13789  0063'                    l3219:
 13790  0063' 0020               	movlb	0	; select bank0
 13791  0064' 0800'              	movf	___aodiv@divisor,w
 13792  0065' 0401'              	iorwf	___aodiv@divisor+1,w
 13793  0066' 0402'              	iorwf	___aodiv@divisor+2,w
 13794  0067' 0403'              	iorwf	___aodiv@divisor+3,w
 13795  0068' 0404'              	iorwf	___aodiv@divisor+4,w
 13796  0069' 0405'              	iorwf	___aodiv@divisor+5,w
 13797  006A' 0406'              	iorwf	___aodiv@divisor+6,w
 13798  006B' 0407'              	iorwf	___aodiv@divisor+7,w
 13799  006C' 1903               	skipnz
 13800  006D' 2800'              	goto	u3951
 13801  006E' 2800'              	goto	u3950
 13802  006F'                    u3951:
 13803  006F' 2800'              	goto	l3239
 13804  0070'                    u3950:
 13805  0070'                    l3221:
 13806  0070' 0181'              	clrf	___aodiv@counter
 13807  0071' 0A81'              	incf	___aodiv@counter,f
 13808  0072' 2800'              	goto	l3227
 13809  0073'                    l3223:
 13810  0073' 3580'              	lslf	___aodiv@divisor,f
 13811  0074' 0D81'              	rlf	___aodiv@divisor+1,f
 13812  0075' 0D82'              	rlf	___aodiv@divisor+2,f
 13813  0076' 0D83'              	rlf	___aodiv@divisor+3,f
 13814  0077' 0D84'              	rlf	___aodiv@divisor+4,f
 13815  0078' 0D85'              	rlf	___aodiv@divisor+5,f
 13816  0079' 0D86'              	rlf	___aodiv@divisor+6,f
 13817  007A' 0D87'              	rlf	___aodiv@divisor+7,f
 13818  007B'                    l3225:
 13819  007B' 3001               	movlw	1
 13820  007C' 0080'              	movwf	??___aodiv
 13821  007D' 0800'              	movf	??___aodiv,w
 13822  007E' 0781'              	addwf	___aodiv@counter,f
 13823  007F'                    l3227:
 13824  007F' 1F87'              	btfss	___aodiv@divisor+7,7
 13825  0080' 2800'              	goto	u3961
 13826  0081' 2800'              	goto	u3960
 13827  0082'                    u3961:
 13828  0082' 2800'              	goto	l3223
 13829  0083'                    u3960:
 13830  0083'                    l3229:
 13831  0083' 3583'              	lslf	___aodiv@quotient,f
 13832  0084' 0D84'              	rlf	___aodiv@quotient+1,f
 13833  0085' 0D85'              	rlf	___aodiv@quotient+2,f
 13834  0086' 0D86'              	rlf	___aodiv@quotient+3,f
 13835  0087' 0D87'              	rlf	___aodiv@quotient+4,f
 13836  0088' 0D88'              	rlf	___aodiv@quotient+5,f
 13837  0089' 0D89'              	rlf	___aodiv@quotient+6,f
 13838  008A' 0D8A'              	rlf	___aodiv@quotient+7,f
 13839  008B'                    l3231:
 13840  008B' 0807'              	movf	___aodiv@divisor+7,w
 13841  008C' 020F'              	subwf	___aodiv@dividend+7,w
 13842  008D' 1D03               	skipz
 13843  008E' 2800'              	goto	u3975
 13844  008F' 0806'              	movf	___aodiv@divisor+6,w
 13845  0090' 020E'              	subwf	___aodiv@dividend+6,w
 13846  0091' 1D03               	skipz
 13847  0092' 2800'              	goto	u3975
 13848  0093' 0805'              	movf	___aodiv@divisor+5,w
 13849  0094' 020D'              	subwf	___aodiv@dividend+5,w
 13850  0095' 1D03               	skipz
 13851  0096' 2800'              	goto	u3975
 13852  0097' 0804'              	movf	___aodiv@divisor+4,w
 13853  0098' 020C'              	subwf	___aodiv@dividend+4,w
 13854  0099' 1D03               	skipz
 13855  009A' 2800'              	goto	u3975
 13856  009B' 0803'              	movf	___aodiv@divisor+3,w
 13857  009C' 020B'              	subwf	___aodiv@dividend+3,w
 13858  009D' 1D03               	skipz
 13859  009E' 2800'              	goto	u3975
 13860  009F' 0802'              	movf	___aodiv@divisor+2,w
 13861  00A0' 020A'              	subwf	___aodiv@dividend+2,w
 13862  00A1' 1D03               	skipz
 13863  00A2' 2800'              	goto	u3975
 13864  00A3' 0801'              	movf	___aodiv@divisor+1,w
 13865  00A4' 0209'              	subwf	___aodiv@dividend+1,w
 13866  00A5' 1D03               	skipz
 13867  00A6' 2800'              	goto	u3975
 13868  00A7' 0800'              	movf	___aodiv@divisor,w
 13869  00A8' 0208'              	subwf	___aodiv@dividend,w
 13870  00A9'                    u3975:
 13871  00A9' 1C03               	skipc
 13872  00AA' 2800'              	goto	u3971
 13873  00AB' 2800'              	goto	u3970
 13874  00AC'                    u3971:
 13875  00AC' 2800'              	goto	l3237
 13876  00AD'                    u3970:
 13877  00AD'                    l3233:
 13878  00AD' 0800'              	movf	___aodiv@divisor,w
 13879  00AE' 0288'              	subwf	___aodiv@dividend,f
 13880  00AF' 0801'              	movf	___aodiv@divisor+1,w
 13881  00B0' 3B89'              	subwfb	___aodiv@dividend+1,f
 13882  00B1' 0802'              	movf	___aodiv@divisor+2,w
 13883  00B2' 3B8A'              	subwfb	___aodiv@dividend+2,f
 13884  00B3' 0803'              	movf	___aodiv@divisor+3,w
 13885  00B4' 3B8B'              	subwfb	___aodiv@dividend+3,f
 13886  00B5' 0804'              	movf	___aodiv@divisor+4,w
 13887  00B6' 3B8C'              	subwfb	___aodiv@dividend+4,f
 13888  00B7' 0805'              	movf	___aodiv@divisor+5,w
 13889  00B8' 3B8D'              	subwfb	___aodiv@dividend+5,f
 13890  00B9' 0806'              	movf	___aodiv@divisor+6,w
 13891  00BA' 3B8E'              	subwfb	___aodiv@dividend+6,f
 13892  00BB' 0807'              	movf	___aodiv@divisor+7,w
 13893  00BC' 3B8F'              	subwfb	___aodiv@dividend+7,f
 13894  00BD'                    l3235:
 13895  00BD' 1403'              	bsf	___aodiv@quotient,0
 13896  00BE'                    l3237:
 13897  00BE' 3687'              	lsrf	___aodiv@divisor+7,f
 13898  00BF' 0C86'              	rrf	___aodiv@divisor+6,f
 13899  00C0' 0C85'              	rrf	___aodiv@divisor+5,f
 13900  00C1' 0C84'              	rrf	___aodiv@divisor+4,f
 13901  00C2' 0C83'              	rrf	___aodiv@divisor+3,f
 13902  00C3' 0C82'              	rrf	___aodiv@divisor+2,f
 13903  00C4' 0C81'              	rrf	___aodiv@divisor+1,f
 13904  00C5' 0C80'              	rrf	___aodiv@divisor,f
 13905  00C6' 3001               	movlw	1
 13906  00C7' 0281'              	subwf	___aodiv@counter,f
 13907  00C8' 1D03               	btfss	3,2
 13908  00C9' 2800'              	goto	u3981
 13909  00CA' 2800'              	goto	u3980
 13910  00CB'                    u3981:
 13911  00CB' 2800'              	goto	l3229
 13912  00CC'                    u3980:
 13913  00CC'                    l3239:
 13914  00CC' 0802'              	movf	___aodiv@sign,w
 13915  00CD' 1903               	btfsc	3,2
 13916  00CE' 2800'              	goto	u3991
 13917  00CF' 2800'              	goto	u3990
 13918  00D0'                    u3991:
 13919  00D0' 2800'              	goto	l512
 13920  00D1'                    u3990:
 13921  00D1'                    l3241:
 13922  00D1' 0983'              	comf	___aodiv@quotient,f
 13923  00D2' 0984'              	comf	___aodiv@quotient+1,f
 13924  00D3' 0985'              	comf	___aodiv@quotient+2,f
 13925  00D4' 0986'              	comf	___aodiv@quotient+3,f
 13926  00D5' 0987'              	comf	___aodiv@quotient+4,f
 13927  00D6' 0988'              	comf	___aodiv@quotient+5,f
 13928  00D7' 0989'              	comf	___aodiv@quotient+6,f
 13929  00D8' 098A'              	comf	___aodiv@quotient+7,f
 13930  00D9' 0A83'              	incf	___aodiv@quotient,f
 13931  00DA' 1D03               	skipz
 13932  00DB' 2800'              	goto	u400lld
 13933  00DC' 0A84'              	incf	___aodiv@quotient+1,f
 13934  00DD' 1D03               	skipz
 13935  00DE' 2800'              	goto	u400lld
 13936  00DF' 0A85'              	incf	___aodiv@quotient+2,f
 13937  00E0' 1D03               	skipz
 13938  00E1' 2800'              	goto	u400lld
 13939  00E2' 0A86'              	incf	___aodiv@quotient+3,f
 13940  00E3' 1D03               	skipz
 13941  00E4' 2800'              	goto	u400lld
 13942  00E5' 0A87'              	incf	___aodiv@quotient+4,f
 13943  00E6' 1D03               	skipz
 13944  00E7' 2800'              	goto	u400lld
 13945  00E8' 0A88'              	incf	___aodiv@quotient+5,f
 13946  00E9' 1D03               	skipz
 13947  00EA' 2800'              	goto	u400lld
 13948  00EB' 0A89'              	incf	___aodiv@quotient+6,f
 13949  00EC' 1D03               	skipz
 13950  00ED' 2800'              	goto	u400lld
 13951  00EE' 0A8A'              	incf	___aodiv@quotient+7,f
 13952  00EF'                    u400lld:
 13953  00EF'                    l512:
 13954  00EF' 0803'              	movf	___aodiv@quotient,w
 13955  00F0' 0020               	movlb	0	; select bank0
 13956  00F1' 0080'              	movwf	?___aodiv
 13957  00F2' 0804'              	movf	___aodiv@quotient+1,w
 13958  00F3' 0081'              	movwf	?___aodiv+1
 13959  00F4' 0805'              	movf	___aodiv@quotient+2,w
 13960  00F5' 0082'              	movwf	?___aodiv+2
 13961  00F6' 0806'              	movf	___aodiv@quotient+3,w
 13962  00F7' 0083'              	movwf	?___aodiv+3
 13963  00F8' 0807'              	movf	___aodiv@quotient+4,w
 13964  00F9' 0084'              	movwf	?___aodiv+4
 13965  00FA' 0808'              	movf	___aodiv@quotient+5,w
 13966  00FB' 0085'              	movwf	?___aodiv+5
 13967  00FC' 0809'              	movf	___aodiv@quotient+6,w
 13968  00FD' 0086'              	movwf	?___aodiv+6
 13969  00FE' 080A'              	movf	___aodiv@quotient+7,w
 13970  00FF' 0087'              	movwf	?___aodiv+7
 13971  0100'                    l513:
 13972  0100' 0008               	return
 13973  0101'                    __end_of___aodiv:
 13974                           
 13975                           	psect	text31
 13976  0000'                    __ptext31:	
 13977 ;; *************** function _atoi *****************
 13978 ;; Defined at:
 13979 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;  s               2    6[COMMON] PTR const unsigned char 
 13982 ;;		 -> STR_1(12), 
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;  n               2    7[BANK0 ] int 
 13985 ;;  neg             2    0[BANK0 ] int 
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  2    6[COMMON] int 
 13988 ;; Registers used:
 13989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;Total ram usage:       15 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:    1
 14002 ;; This function calls:
 14003 ;;		___wmul
 14004 ;;		_isdigit
 14005 ;;		_isspace
 14006 ;; This function is called by:
 14007 ;;		_vfpfcnvrt
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           
 14012                           ;psect for function _atoi
 14013  0000'                    _atoi:
 14014  0000'                    l4185:	
 14015                           ;incstack = 0
 14016                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14017                           
 14018  0000' 0020               	movlb	0	; select bank0
 14019  0001' 0187'              	clrf	atoi@n
 14020  0002' 0188'              	clrf	atoi@n+1
 14021  0003' 0180'              	clrf	atoi@neg
 14022  0004' 0181'              	clrf	atoi@neg+1
 14023  0005' 2800'              	goto	l4189
 14024  0006'                    l4187:
 14025  0006' 3001               	movlw	1
 14026  0007' 0786'              	addwf	atoi@s,f
 14027  0008' 3000               	movlw	0
 14028  0009' 3D87'              	addwfc	atoi@s+1,f
 14029  000A'                    l4189:
 14030  000A' 0186'              	clrf	_atoi$1077
 14031  000B' 0A86'              	incf	_atoi$1077,f
 14032  000C'                    l4191:
 14033  000C' 0806'              	movf	atoi@s,w
 14034  000D' 0084               	movwf	4
 14035  000E' 0807'              	movf	atoi@s+1,w
 14036  000F' 0085               	movwf	5
 14037  0010' 0012               	moviw fsr0++
 14038  0011' 3A20               	xorlw	32
 14039  0012' 1903               	btfsc	3,2
 14040  0013' 2800'              	goto	u6061
 14041  0014' 2800'              	goto	u6060
 14042  0015'                    u6061:
 14043  0015' 2800'              	goto	l4197
 14044  0016'                    u6060:
 14045  0016'                    l4193:
 14046  0016' 0806'              	movf	atoi@s,w
 14047  0017' 0084               	movwf	4
 14048  0018' 0807'              	movf	atoi@s+1,w
 14049  0019' 0085               	movwf	5
 14050  001A' 0800               	movf	0,w	;code access
 14051  001B' 3EF7               	addlw	247
 14052  001C' 0088'              	movwf	??_atoi
 14053  001D' 30FF               	movlw	255
 14054  001E' 1803               	skipnc
 14055  001F' 3000               	movlw	0
 14056  0020' 0089'              	movwf	??_atoi+1
 14057  0021' 3000               	movlw	0
 14058  0022' 0209'              	subwf	??_atoi+1,w
 14059  0023' 3005               	movlw	5
 14060  0024' 1903               	skipnz
 14061  0025' 0208'              	subwf	??_atoi,w
 14062  0026' 1C03               	skipc
 14063  0027' 2800'              	goto	u6071
 14064  0028' 2800'              	goto	u6070
 14065  0029'                    u6071:
 14066  0029' 2800'              	goto	l4197
 14067  002A'                    u6070:
 14068  002A'                    l4195:
 14069  002A' 0186'              	clrf	_atoi$1077
 14070  002B'                    l4197:
 14071  002B' 0806'              	movf	_atoi$1077,w
 14072  002C' 0088'              	movwf	??_atoi
 14073  002D' 0189'              	clrf	??_atoi+1
 14074  002E' 0808'              	movf	??_atoi,w
 14075  002F' 0082'              	movwf	_atoi$1076
 14076  0030' 0809'              	movf	??_atoi+1,w
 14077  0031' 0083'              	movwf	_atoi$1076+1
 14078  0032'                    l4201:
 14079  0032' 0802'              	movf	_atoi$1076,w
 14080  0033' 0403'              	iorwf	_atoi$1076+1,w
 14081  0034' 1D03               	btfss	3,2
 14082  0035' 2800'              	goto	u6081
 14083  0036' 2800'              	goto	u6080
 14084  0037'                    u6081:
 14085  0037' 2800'              	goto	l4187
 14086  0038'                    u6080:
 14087  0038' 2800'              	goto	l4205
 14088  0039'                    l4203:
 14089  0039' 3001               	movlw	1
 14090  003A' 0080'              	movwf	atoi@neg
 14091  003B' 3000               	movlw	0
 14092  003C' 0081'              	movwf	atoi@neg+1
 14093  003D'                    l1122:
 14094  003D' 3001               	movlw	1
 14095  003E' 0786'              	addwf	atoi@s,f
 14096  003F' 3000               	movlw	0
 14097  0040' 3D87'              	addwfc	atoi@s+1,f
 14098  0041' 2800'              	goto	l4211
 14099  0042'                    l4205:
 14100  0042' 0806'              	movf	atoi@s,w
 14101  0043' 0084               	movwf	4
 14102  0044' 0807'              	movf	atoi@s+1,w
 14103  0045' 0085               	movwf	5
 14104  0046' 0800               	movf	0,w	;code access
 14105  0047' 0088'              	movwf	??_atoi
 14106  0048' 0189'              	clrf	??_atoi+1
 14107                           
 14108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14109                           ; Switch size 1, requested type "simple"
 14110                           ; Number of cases is 1, Range of values is 0 to 0
 14111                           ; switch strategies available:
 14112                           ; Name         Instructions Cycles
 14113                           ; simple_byte            4     3 (average)
 14114                           ; direct_byte            8     6 (fixed)
 14115                           ; jumptable            260     6 (fixed)
 14116                           ;	Chosen strategy is simple_byte
 14117  0049' 0809'              	movf	??_atoi+1,w
 14118  004A' 3A00               	xorlw	0	; case 0
 14119  004B' 1903               	skipnz
 14120  004C' 2800'              	goto	l4627
 14121  004D' 2800'              	goto	l4211
 14122  004E'                    l4627:
 14123                           
 14124                           ; Switch size 1, requested type "simple"
 14125                           ; Number of cases is 2, Range of values is 43 to 45
 14126                           ; switch strategies available:
 14127                           ; Name         Instructions Cycles
 14128                           ; simple_byte            7     4 (average)
 14129                           ; direct_byte           15     9 (fixed)
 14130                           ; jumptable            263     9 (fixed)
 14131                           ;	Chosen strategy is simple_byte
 14132  004E' 0808'              	movf	??_atoi,w
 14133  004F' 3A2B               	xorlw	43	; case 43
 14134  0050' 1903               	skipnz
 14135  0051' 2800'              	goto	l1122
 14136  0052' 3A06               	xorlw	6	; case 45
 14137  0053' 1903               	skipnz
 14138  0054' 2800'              	goto	l4203
 14139  0055' 2800'              	goto	l4211
 14140  0056'                    l4207:
 14141  0056' 0806'              	movf	atoi@s,w
 14142  0057' 0084               	movwf	4
 14143  0058' 0807'              	movf	atoi@s+1,w
 14144  0059' 0085               	movwf	5
 14145  005A' 0800               	movf	0,w	;code access
 14146  005B' 0088'              	movwf	??_atoi
 14147  005C' 0808'              	movf	atoi@n+1,w
 14148  005D' 0081'              	movwf	___wmul@multiplier+1
 14149  005E' 0807'              	movf	atoi@n,w
 14150  005F' 0080'              	movwf	___wmul@multiplier
 14151  0060' 300A               	movlw	10
 14152  0061' 0082'              	movwf	___wmul@multiplicand
 14153  0062' 3000               	movlw	0
 14154  0063' 0083'              	movwf	___wmul@multiplicand+1
 14155  0064' 3180' 2000' 3180'  	fcall	___wmul
 14156  0067' 0801'              	movf	?___wmul+1,w
 14157  0068' 008A'              	movwf	??_atoi+2
 14158  0069' 0808'              	movf	??_atoi,w
 14159  006A' 0200'              	subwf	?___wmul,w
 14160  006B' 0089'              	movwf	??_atoi+1
 14161  006C' 1C03               	skipc
 14162  006D' 038A'              	decf	??_atoi+2,f
 14163  006E' 0809'              	movf	??_atoi+1,w
 14164  006F' 3E30               	addlw	48
 14165  0070' 0020               	movlb	0	; select bank0
 14166  0071' 0087'              	movwf	atoi@n
 14167  0072' 3000               	movlw	0
 14168  0073' 3D0A'              	addwfc	??_atoi+2,w
 14169  0074' 0088'              	movwf	atoi@n+1
 14170  0075' 2800'              	goto	l1122
 14171  0076'                    l4211:
 14172  0076' 0806'              	movf	atoi@s,w
 14173  0077' 0084               	movwf	4
 14174  0078' 0807'              	movf	atoi@s+1,w
 14175  0079' 0085               	movwf	5
 14176  007A' 0800               	movf	0,w	;code access
 14177  007B' 3ED0               	addlw	208
 14178  007C' 0088'              	movwf	??_atoi
 14179  007D' 30FF               	movlw	255
 14180  007E' 1803               	skipnc
 14181  007F' 3000               	movlw	0
 14182  0080' 0089'              	movwf	??_atoi+1
 14183  0081' 3000               	movlw	0
 14184  0082' 0209'              	subwf	??_atoi+1,w
 14185  0083' 300A               	movlw	10
 14186  0084' 1903               	skipnz
 14187  0085' 0208'              	subwf	??_atoi,w
 14188  0086' 1C03               	skipc
 14189  0087' 2800'              	goto	u6091
 14190  0088' 2800'              	goto	u6090
 14191  0089'                    u6091:
 14192  0089' 3001               	movlw	1
 14193  008A' 2800'              	goto	u6100
 14194  008B'                    u6090:
 14195  008B' 3000               	movlw	0
 14196  008C'                    u6100:
 14197  008C' 008A'              	movwf	??_atoi+2
 14198  008D' 018B'              	clrf	??_atoi+3
 14199  008E' 080A'              	movf	??_atoi+2,w
 14200  008F' 0084'              	movwf	_atoi$1078
 14201  0090' 080B'              	movf	??_atoi+3,w
 14202  0091' 0085'              	movwf	_atoi$1078+1
 14203  0092'                    l4215:
 14204  0092' 0804'              	movf	_atoi$1078,w
 14205  0093' 0405'              	iorwf	_atoi$1078+1,w
 14206  0094' 1D03               	btfss	3,2
 14207  0095' 2800'              	goto	u6111
 14208  0096' 2800'              	goto	u6110
 14209  0097'                    u6111:
 14210  0097' 2800'              	goto	l4207
 14211  0098'                    u6110:
 14212  0098'                    l4217:
 14213  0098' 0800'              	movf	atoi@neg,w
 14214  0099' 0401'              	iorwf	atoi@neg+1,w
 14215  009A' 1D03               	btfss	3,2
 14216  009B' 2800'              	goto	u6121
 14217  009C' 2800'              	goto	u6120
 14218  009D'                    u6121:
 14219  009D' 2800'              	goto	l4221
 14220  009E'                    u6120:
 14221  009E'                    l4219:
 14222  009E' 0907'              	comf	atoi@n,w
 14223  009F' 0088'              	movwf	??_atoi
 14224  00A0' 0908'              	comf	atoi@n+1,w
 14225  00A1' 0089'              	movwf	??_atoi+1
 14226  00A2' 0A88'              	incf	??_atoi,f
 14227  00A3' 1903               	skipnz
 14228  00A4' 0A89'              	incf	??_atoi+1,f
 14229  00A5' 0808'              	movf	??_atoi,w
 14230  00A6' 0086'              	movwf	?_atoi
 14231  00A7' 0809'              	movf	??_atoi+1,w
 14232  00A8' 0087'              	movwf	?_atoi+1
 14233  00A9' 2800'              	goto	l1135
 14234  00AA'                    l4221:
 14235  00AA' 0808'              	movf	atoi@n+1,w
 14236  00AB' 0087'              	movwf	?_atoi+1
 14237  00AC' 0807'              	movf	atoi@n,w
 14238  00AD' 0086'              	movwf	?_atoi
 14239  00AE'                    l1135:
 14240  00AE' 0008               	return
 14241  00AF'                    __end_of_atoi:
 14242                           
 14243                           	psect	text32
 14244  0000'                    __ptext32:	
 14245 ;; *************** function _isspace *****************
 14246 ;; Defined at:
 14247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;  c               2    0[COMMON] int 
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;		None
 14252 ;; Return value:  Size  Location     Type
 14253 ;;                  2    0[COMMON] int 
 14254 ;; Registers used:
 14255 ;;		wreg, status,2, status,0
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14264 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14265 ;;Total ram usage:        5 bytes
 14266 ;; Hardware stack levels used:    1
 14267 ;; This function calls:
 14268 ;;		Nothing
 14269 ;; This function is called by:
 14270 ;;		_atoi
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           
 14275                           ;psect for function _isspace
 14276  0000'                    _isspace:
 14277  0000'                    l3815:	
 14278                           ;incstack = 0
 14279                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14280                           
 14281  0000' 0184'              	clrf	_isspace$1107
 14282  0001' 0A84'              	incf	_isspace$1107,f
 14283  0002'                    l3817:
 14284  0002' 3020               	movlw	32
 14285  0003' 0600'              	xorwf	isspace@c,w
 14286  0004' 0401'              	iorwf	isspace@c+1,w
 14287  0005' 1903               	btfsc	3,2
 14288  0006' 2800'              	goto	u5341
 14289  0007' 2800'              	goto	u5340
 14290  0008'                    u5341:
 14291  0008' 2800'              	goto	l3823
 14292  0009'                    u5340:
 14293  0009'                    l3819:
 14294  0009' 0800'              	movf	isspace@c,w
 14295  000A' 3EF7               	addlw	247
 14296  000B' 0082'              	movwf	??_isspace
 14297  000C' 30FF               	movlw	255
 14298  000D' 3D01'              	addwfc	isspace@c+1,w
 14299  000E' 0083'              	movwf	??_isspace+1
 14300  000F' 3000               	movlw	0
 14301  0010' 0203'              	subwf	??_isspace+1,w
 14302  0011' 3005               	movlw	5
 14303  0012' 1903               	skipnz
 14304  0013' 0202'              	subwf	??_isspace,w
 14305  0014' 1C03               	skipc
 14306  0015' 2800'              	goto	u5351
 14307  0016' 2800'              	goto	u5350
 14308  0017'                    u5351:
 14309  0017' 2800'              	goto	l3823
 14310  0018'                    u5350:
 14311  0018'                    l3821:
 14312  0018' 0184'              	clrf	_isspace$1107
 14313  0019'                    l3823:
 14314  0019' 0804'              	movf	_isspace$1107,w
 14315  001A' 0082'              	movwf	??_isspace
 14316  001B' 0183'              	clrf	??_isspace+1
 14317  001C' 0802'              	movf	??_isspace,w
 14318  001D' 0080'              	movwf	?_isspace
 14319  001E' 0803'              	movf	??_isspace+1,w
 14320  001F' 0081'              	movwf	?_isspace+1
 14321  0020'                    l1159:
 14322  0020' 0008               	return
 14323  0021'                    __end_of_isspace:
 14324                           
 14325                           	psect	text33
 14326  0000'                    __ptext33:	
 14327 ;; *************** function _isdigit *****************
 14328 ;; Defined at:
 14329 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;  c               2    0[COMMON] int 
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;		None
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  2    0[COMMON] int 
 14336 ;; Registers used:
 14337 ;;		wreg, status,2, status,0
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;Total ram usage:        6 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; This function calls:
 14350 ;;		Nothing
 14351 ;; This function is called by:
 14352 ;;		_vfpfcnvrt
 14353 ;;		_atoi
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357                           
 14358                           ;psect for function _isdigit
 14359  0000'                    _isdigit:
 14360  0000'                    l3811:	
 14361                           ;incstack = 0
 14362                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14363                           
 14364  0000' 0800'              	movf	isdigit@c,w
 14365  0001' 3ED0               	addlw	208
 14366  0002' 0082'              	movwf	??_isdigit
 14367  0003' 30FF               	movlw	255
 14368  0004' 3D01'              	addwfc	isdigit@c+1,w
 14369  0005' 0083'              	movwf	??_isdigit+1
 14370  0006' 3000               	movlw	0
 14371  0007' 0203'              	subwf	??_isdigit+1,w
 14372  0008' 300A               	movlw	10
 14373  0009' 1903               	skipnz
 14374  000A' 0202'              	subwf	??_isdigit,w
 14375  000B' 1C03               	skipc
 14376  000C' 2800'              	goto	u5321
 14377  000D' 2800'              	goto	u5320
 14378  000E'                    u5321:
 14379  000E' 3001               	movlw	1
 14380  000F' 2800'              	goto	u5330
 14381  0010'                    u5320:
 14382  0010' 3000               	movlw	0
 14383  0011'                    u5330:
 14384  0011' 0084'              	movwf	??_isdigit+2
 14385  0012' 0185'              	clrf	??_isdigit+3
 14386  0013' 0804'              	movf	??_isdigit+2,w
 14387  0014' 0080'              	movwf	?_isdigit
 14388  0015' 0805'              	movf	??_isdigit+3,w
 14389  0016' 0081'              	movwf	?_isdigit+1
 14390  0017'                    l1151:
 14391  0017' 0008               	return
 14392  0018'                    __end_of_isdigit:
 14393                           
 14394                           	psect	text34
 14395  0000'                    __ptext34:	
 14396 ;; *************** function ___wmul *****************
 14397 ;; Defined at:
 14398 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  multiplier      2    0[COMMON] unsigned int 
 14401 ;;  multiplicand    2    2[COMMON] unsigned int 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;  product         2    4[COMMON] unsigned int 
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  2    0[COMMON] unsigned int 
 14406 ;; Registers used:
 14407 ;;		wreg, status,2, status,0
 14408 ;; Tracked objects:
 14409 ;;		On entry : 0/0
 14410 ;;		On exit  : 0/0
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;Total ram usage:        6 bytes
 14418 ;; Hardware stack levels used:    1
 14419 ;; This function calls:
 14420 ;;		Nothing
 14421 ;; This function is called by:
 14422 ;;		_atoi
 14423 ;; This function uses a non-reentrant model
 14424 ;;
 14425                           
 14426                           
 14427                           ;psect for function ___wmul
 14428  0000'                    ___wmul:
 14429  0000'                    l3191:	
 14430                           ;incstack = 0
 14431                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14432                           
 14433  0000' 0184'              	clrf	___wmul@product
 14434  0001' 0185'              	clrf	___wmul@product+1
 14435  0002'                    l3193:
 14436  0002' 1C00'              	btfss	___wmul@multiplier,0
 14437  0003' 2800'              	goto	u3861
 14438  0004' 2800'              	goto	u3860
 14439  0005'                    u3861:
 14440  0005' 2800'              	goto	l412
 14441  0006'                    u3860:
 14442  0006'                    l3195:
 14443  0006' 0802'              	movf	___wmul@multiplicand,w
 14444  0007' 0784'              	addwf	___wmul@product,f
 14445  0008' 0803'              	movf	___wmul@multiplicand+1,w
 14446  0009' 3D85'              	addwfc	___wmul@product+1,f
 14447  000A'                    l412:
 14448  000A' 3001               	movlw	1
 14449  000B'                    u3875:
 14450  000B' 3582'              	lslf	___wmul@multiplicand,f
 14451  000C' 0D83'              	rlf	___wmul@multiplicand+1,f
 14452  000D' 0B89               	decfsz	9,f
 14453  000E' 2800'              	goto	u3875
 14454  000F'                    l3197:
 14455  000F' 3001               	movlw	1
 14456  0010'                    u3885:
 14457  0010' 3681'              	lsrf	___wmul@multiplier+1,f
 14458  0011' 0C80'              	rrf	___wmul@multiplier,f
 14459  0012' 0B89               	decfsz	9,f
 14460  0013' 2800'              	goto	u3885
 14461  0014'                    l3199:
 14462  0014' 0800'              	movf	___wmul@multiplier,w
 14463  0015' 0401'              	iorwf	___wmul@multiplier+1,w
 14464  0016' 1D03               	btfss	3,2
 14465  0017' 2800'              	goto	u3891
 14466  0018' 2800'              	goto	u3890
 14467  0019'                    u3891:
 14468  0019' 2800'              	goto	l3193
 14469  001A'                    u3890:
 14470  001A'                    l3201:
 14471  001A' 0805'              	movf	___wmul@product+1,w
 14472  001B' 0081'              	movwf	?___wmul+1
 14473  001C' 0804'              	movf	___wmul@product,w
 14474  001D' 0080'              	movwf	?___wmul
 14475  001E'                    l414:
 14476  001E' 0008               	return
 14477  001F'                    __end_of___wmul:
 14478                           
 14479                           	psect	text35
 14480  0000'                    __ptext35:	
 14481 ;; *************** function ___xxtofl *****************
 14482 ;; Defined at:
 14483 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;  sign            1    wreg     unsigned char 
 14486 ;;  val             4    0[COMMON] long 
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;  sign            1    8[COMMON] unsigned char 
 14489 ;;  arg             4   10[COMMON] unsigned long 
 14490 ;;  exp             1    9[COMMON] unsigned char 
 14491 ;; Return value:  Size  Location     Type
 14492 ;;                  4    0[COMMON] unsigned char 
 14493 ;; Registers used:
 14494 ;;		wreg, status,2, status,0
 14495 ;; Tracked objects:
 14496 ;;		On entry : 0/0
 14497 ;;		On exit  : 0/0
 14498 ;;		Unchanged: 0/0
 14499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;Total ram usage:       14 bytes
 14505 ;; Hardware stack levels used:    1
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_main
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           
 14514                           ;psect for function ___xxtofl
 14515  0000'                    ___xxtofl:
 14516                           
 14517                           ;incstack = 0
 14518                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14519                           ;___xxtofl@sign stored from wreg
 14520  0000' 0088'              	movwf	___xxtofl@sign
 14521  0001'                    l4507:
 14522  0001' 0808'              	movf	___xxtofl@sign,w
 14523  0002' 1903               	btfsc	3,2
 14524  0003' 2800'              	goto	u6421
 14525  0004' 2800'              	goto	u6420
 14526  0005'                    u6421:
 14527  0005' 2800'              	goto	l4513
 14528  0006'                    u6420:
 14529  0006'                    l4509:
 14530  0006' 1F83'              	btfss	___xxtofl@val+3,7
 14531  0007' 2800'              	goto	u6431
 14532  0008' 2800'              	goto	u6430
 14533  0009'                    u6431:
 14534  0009' 2800'              	goto	l4513
 14535  000A'                    u6430:
 14536  000A'                    l4511:
 14537  000A' 0900'              	comf	___xxtofl@val,w
 14538  000B' 008A'              	movwf	___xxtofl@arg
 14539  000C' 0901'              	comf	___xxtofl@val+1,w
 14540  000D' 008B'              	movwf	___xxtofl@arg+1
 14541  000E' 0902'              	comf	___xxtofl@val+2,w
 14542  000F' 008C'              	movwf	___xxtofl@arg+2
 14543  0010' 0903'              	comf	___xxtofl@val+3,w
 14544  0011' 008D'              	movwf	___xxtofl@arg+3
 14545  0012' 0A8A'              	incf	___xxtofl@arg,f
 14546  0013' 1903               	skipnz
 14547  0014' 0A8B'              	incf	___xxtofl@arg+1,f
 14548  0015' 1903               	skipnz
 14549  0016' 0A8C'              	incf	___xxtofl@arg+2,f
 14550  0017' 1903               	skipnz
 14551  0018' 0A8D'              	incf	___xxtofl@arg+3,f
 14552  0019' 2800'              	goto	l853
 14553  001A'                    l4513:
 14554  001A' 0803'              	movf	___xxtofl@val+3,w
 14555  001B' 008D'              	movwf	___xxtofl@arg+3
 14556  001C' 0802'              	movf	___xxtofl@val+2,w
 14557  001D' 008C'              	movwf	___xxtofl@arg+2
 14558  001E' 0801'              	movf	___xxtofl@val+1,w
 14559  001F' 008B'              	movwf	___xxtofl@arg+1
 14560  0020' 0800'              	movf	___xxtofl@val,w
 14561  0021' 008A'              	movwf	___xxtofl@arg
 14562  0022'                    l853:
 14563  0022' 0803'              	movf	___xxtofl@val+3,w
 14564  0023' 0402'              	iorwf	___xxtofl@val+2,w
 14565  0024' 0401'              	iorwf	___xxtofl@val+1,w
 14566  0025' 0400'              	iorwf	___xxtofl@val,w
 14567  0026' 1D03               	skipz
 14568  0027' 2800'              	goto	u6441
 14569  0028' 2800'              	goto	u6440
 14570  0029'                    u6441:
 14571  0029' 2800'              	goto	l4519
 14572  002A'                    u6440:
 14573  002A'                    l4515:
 14574  002A' 3000               	movlw	0
 14575  002B' 0083'              	movwf	?___xxtofl+3
 14576  002C' 3000               	movlw	0
 14577  002D' 0082'              	movwf	?___xxtofl+2
 14578  002E' 3000               	movlw	0
 14579  002F' 0081'              	movwf	?___xxtofl+1
 14580  0030' 3000               	movlw	0
 14581  0031' 0080'              	movwf	?___xxtofl
 14582  0032' 2800'              	goto	l855
 14583  0033'                    l4519:
 14584  0033' 3096               	movlw	150
 14585  0034' 0084'              	movwf	??___xxtofl
 14586  0035' 0804'              	movf	??___xxtofl,w
 14587  0036' 0089'              	movwf	___xxtofl@exp
 14588  0037' 2800'              	goto	l4523
 14589  0038'                    l4521:
 14590  0038' 3001               	movlw	1
 14591  0039' 0084'              	movwf	??___xxtofl
 14592  003A' 0804'              	movf	??___xxtofl,w
 14593  003B' 0789'              	addwf	___xxtofl@exp,f
 14594  003C' 3001               	movlw	1
 14595  003D'                    u6455:
 14596  003D' 368D'              	lsrf	___xxtofl@arg+3,f
 14597  003E' 0C8C'              	rrf	___xxtofl@arg+2,f
 14598  003F' 0C8B'              	rrf	___xxtofl@arg+1,f
 14599  0040' 0C8A'              	rrf	___xxtofl@arg,f
 14600  0041' 0B89               	decfsz	9,f
 14601  0042' 2800'              	goto	u6455
 14602  0043'                    l4523:
 14603  0043' 30FE               	movlw	254
 14604  0044' 050D'              	andwf	___xxtofl@arg+3,w
 14605  0045' 1D03               	btfss	3,2
 14606  0046' 2800'              	goto	u6461
 14607  0047' 2800'              	goto	u6460
 14608  0048'                    u6461:
 14609  0048' 2800'              	goto	l4521
 14610  0049'                    u6460:
 14611  0049' 2800'              	goto	l859
 14612  004A'                    l4525:
 14613  004A' 3001               	movlw	1
 14614  004B' 0084'              	movwf	??___xxtofl
 14615  004C' 0804'              	movf	??___xxtofl,w
 14616  004D' 0789'              	addwf	___xxtofl@exp,f
 14617  004E'                    l4527:
 14618  004E' 3001               	movlw	1
 14619  004F' 078A'              	addwf	___xxtofl@arg,f
 14620  0050' 3000               	movlw	0
 14621  0051' 3D8B'              	addwfc	___xxtofl@arg+1,f
 14622  0052' 3000               	movlw	0
 14623  0053' 3D8C'              	addwfc	___xxtofl@arg+2,f
 14624  0054' 3000               	movlw	0
 14625  0055' 3D8D'              	addwfc	___xxtofl@arg+3,f
 14626  0056'                    l4529:
 14627  0056' 3001               	movlw	1
 14628  0057'                    u6475:
 14629  0057' 368D'              	lsrf	___xxtofl@arg+3,f
 14630  0058' 0C8C'              	rrf	___xxtofl@arg+2,f
 14631  0059' 0C8B'              	rrf	___xxtofl@arg+1,f
 14632  005A' 0C8A'              	rrf	___xxtofl@arg,f
 14633  005B' 0B89               	decfsz	9,f
 14634  005C' 2800'              	goto	u6475
 14635  005D'                    l859:
 14636  005D' 30FF               	movlw	255
 14637  005E' 050D'              	andwf	___xxtofl@arg+3,w
 14638  005F' 1D03               	btfss	3,2
 14639  0060' 2800'              	goto	u6481
 14640  0061' 2800'              	goto	u6480
 14641  0062'                    u6481:
 14642  0062' 2800'              	goto	l4525
 14643  0063'                    u6480:
 14644  0063' 2800'              	goto	l4533
 14645  0064'                    l4531:
 14646  0064' 3001               	movlw	1
 14647  0065' 0289'              	subwf	___xxtofl@exp,f
 14648  0066' 3001               	movlw	1
 14649  0067'                    u6495:
 14650  0067' 358A'              	lslf	___xxtofl@arg,f
 14651  0068' 0D8B'              	rlf	___xxtofl@arg+1,f
 14652  0069' 0D8C'              	rlf	___xxtofl@arg+2,f
 14653  006A' 0D8D'              	rlf	___xxtofl@arg+3,f
 14654  006B' 0B89               	decfsz	9,f
 14655  006C' 2800'              	goto	u6495
 14656  006D'                    l4533:
 14657  006D' 1B8C'              	btfsc	___xxtofl@arg+2,7
 14658  006E' 2800'              	goto	u6501
 14659  006F' 2800'              	goto	u6500
 14660  0070'                    u6501:
 14661  0070' 2800'              	goto	l866
 14662  0071'                    u6500:
 14663  0071'                    l4535:
 14664  0071' 3002               	movlw	2
 14665  0072' 0209'              	subwf	___xxtofl@exp,w
 14666  0073' 1803               	skipnc
 14667  0074' 2800'              	goto	u6511
 14668  0075' 2800'              	goto	u6510
 14669  0076'                    u6511:
 14670  0076' 2800'              	goto	l4531
 14671  0077'                    u6510:
 14672  0077'                    l866:
 14673  0077' 1809'              	btfsc	___xxtofl@exp,0
 14674  0078' 2800'              	goto	u6521
 14675  0079' 2800'              	goto	u6520
 14676  007A'                    u6521:
 14677  007A' 2800'              	goto	l867
 14678  007B'                    u6520:
 14679  007B'                    l4537:
 14680  007B' 30FF               	movlw	255
 14681  007C' 058A'              	andwf	___xxtofl@arg,f
 14682  007D' 30FF               	movlw	255
 14683  007E' 058B'              	andwf	___xxtofl@arg+1,f
 14684  007F' 307F               	movlw	127
 14685  0080' 058C'              	andwf	___xxtofl@arg+2,f
 14686  0081' 30FF               	movlw	255
 14687  0082' 058D'              	andwf	___xxtofl@arg+3,f
 14688  0083'                    l867:
 14689  0083' 1003               	clrc
 14690  0084' 0C89'              	rrf	___xxtofl@exp,f
 14691  0085'                    l4539:
 14692  0085' 0809'              	movf	___xxtofl@exp,w
 14693  0086' 0084'              	movwf	??___xxtofl
 14694  0087' 0185'              	clrf	??___xxtofl+1
 14695  0088' 0186'              	clrf	??___xxtofl+2
 14696  0089' 0187'              	clrf	??___xxtofl+3
 14697  008A' 3018               	movlw	24
 14698  008B'                    u6535:
 14699  008B' 3584'              	lslf	??___xxtofl,f
 14700  008C' 0D85'              	rlf	??___xxtofl+1,f
 14701  008D' 0D86'              	rlf	??___xxtofl+2,f
 14702  008E' 0D87'              	rlf	??___xxtofl+3,f
 14703  008F'                    u6530:
 14704  008F' 0B89               	decfsz	9,f
 14705  0090' 2800'              	goto	u6535
 14706  0091' 0804'              	movf	??___xxtofl,w
 14707  0092' 048A'              	iorwf	___xxtofl@arg,f
 14708  0093' 0805'              	movf	??___xxtofl+1,w
 14709  0094' 048B'              	iorwf	___xxtofl@arg+1,f
 14710  0095' 0806'              	movf	??___xxtofl+2,w
 14711  0096' 048C'              	iorwf	___xxtofl@arg+2,f
 14712  0097' 0807'              	movf	??___xxtofl+3,w
 14713  0098' 048D'              	iorwf	___xxtofl@arg+3,f
 14714  0099'                    l4541:
 14715  0099' 0808'              	movf	___xxtofl@sign,w
 14716  009A' 1903               	btfsc	3,2
 14717  009B' 2800'              	goto	u6541
 14718  009C' 2800'              	goto	u6540
 14719  009D'                    u6541:
 14720  009D' 2800'              	goto	l4547
 14721  009E'                    u6540:
 14722  009E'                    l4543:
 14723  009E' 1F83'              	btfss	___xxtofl@val+3,7
 14724  009F' 2800'              	goto	u6551
 14725  00A0' 2800'              	goto	u6550
 14726  00A1'                    u6551:
 14727  00A1' 2800'              	goto	l4547
 14728  00A2'                    u6550:
 14729  00A2'                    l4545:
 14730  00A2' 178D'              	bsf	___xxtofl@arg+3,7
 14731  00A3'                    l4547:
 14732  00A3' 080D'              	movf	___xxtofl@arg+3,w
 14733  00A4' 0083'              	movwf	?___xxtofl+3
 14734  00A5' 080C'              	movf	___xxtofl@arg+2,w
 14735  00A6' 0082'              	movwf	?___xxtofl+2
 14736  00A7' 080B'              	movf	___xxtofl@arg+1,w
 14737  00A8' 0081'              	movwf	?___xxtofl+1
 14738  00A9' 080A'              	movf	___xxtofl@arg,w
 14739  00AA' 0080'              	movwf	?___xxtofl
 14740  00AB'                    l855:
 14741  00AB' 0008               	return
 14742  00AC'                    __end_of___xxtofl:
 14743                           
 14744                           	psect	text36
 14745  0000'                    __ptext36:	
 14746 ;; *************** function _SYSTEM_Initialize *****************
 14747 ;; Defined at:
 14748 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;		None
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;		None
 14753 ;; Return value:  Size  Location     Type
 14754 ;;                  1    wreg      void 
 14755 ;; Registers used:
 14756 ;;		wreg, status,2, status,0, pclath, cstack
 14757 ;; Tracked objects:
 14758 ;;		On entry : 0/0
 14759 ;;		On exit  : 0/0
 14760 ;;		Unchanged: 0/0
 14761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14766 ;;Total ram usage:        0 bytes
 14767 ;; Hardware stack levels used:    1
 14768 ;; Hardware stack levels required when called:    2
 14769 ;; This function calls:
 14770 ;;		_ADC_Initialize
 14771 ;;		_EUSART_Initialize
 14772 ;;		_FVR_Initialize
 14773 ;;		_OSCILLATOR_Initialize
 14774 ;;		_PIN_MANAGER_Initialize
 14775 ;;		_PMD_Initialize
 14776 ;;		_WDT_Initialize
 14777 ;; This function is called by:
 14778 ;;		_main
 14779 ;; This function uses a non-reentrant model
 14780 ;;
 14781                           
 14782                           
 14783                           ;psect for function _SYSTEM_Initialize
 14784  0000'                    _SYSTEM_Initialize:
 14785  0000'                    l4461:	
 14786                           ;incstack = 0
 14787                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14788                           
 14789                           
 14790                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14791  0000' 3180' 2000' 3180'  	fcall	_PMD_Initialize
 14792  0003'                    l4463:
 14793                           
 14794                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14795  0003' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
 14796  0006'                    l4465:
 14797                           
 14798                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14799  0006' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
 14800  0009'                    l4467:
 14801                           
 14802                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 14803  0009' 3180' 2000' 3180'  	fcall	_WDT_Initialize
 14804  000C'                    l4469:
 14805                           
 14806                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
 14807  000C' 3180' 2000' 3180'  	fcall	_FVR_Initialize
 14808  000F'                    l4471:
 14809                           
 14810                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 14811  000F' 3180' 2000' 3180'  	fcall	_ADC_Initialize
 14812  0012'                    l4473:
 14813                           
 14814                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
 14815  0012' 3180' 2000' 3180'  	fcall	_EUSART_Initialize
 14816  0015'                    l41:
 14817  0015' 0008               	return
 14818  0016'                    __end_of_SYSTEM_Initialize:
 14819                           
 14820                           	psect	text37
 14821  0000'                    __ptext37:	
 14822 ;; *************** function _WDT_Initialize *****************
 14823 ;; Defined at:
 14824 ;;		line 76 in file "mcc_generated_files/mcc.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;		None
 14827 ;; Auto vars:     Size  Location     Type
 14828 ;;		None
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  1    wreg      void 
 14831 ;; Registers used:
 14832 ;;		wreg
 14833 ;; Tracked objects:
 14834 ;;		On entry : 0/0
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;Total ram usage:        0 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; This function calls:
 14845 ;;		Nothing
 14846 ;; This function is called by:
 14847 ;;		_SYSTEM_Initialize
 14848 ;; This function uses a non-reentrant model
 14849 ;;
 14850                           
 14851                           
 14852                           ;psect for function _WDT_Initialize
 14853  0000'                    _WDT_Initialize:
 14854  0000'                    l4423:	
 14855                           ;incstack = 0
 14856                           ; Regs used in _WDT_Initialize: [wreg]
 14857                           
 14858                           
 14859                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
 14860  0000' 3016               	movlw	22
 14861  0001' 0021               	movlb	1	; select bank1
 14862  0002' 0097               	movwf	23	;volatile
 14863  0003'                    l47:
 14864  0003' 0008               	return
 14865  0004'                    __end_of_WDT_Initialize:
 14866                           
 14867                           	psect	text38
 14868  0000'                    __ptext38:	
 14869 ;; *************** function _PMD_Initialize *****************
 14870 ;; Defined at:
 14871 ;;		line 82 in file "mcc_generated_files/mcc.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;		None
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;		None
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  1    wreg      void 
 14878 ;; Registers used:
 14879 ;;		status,2
 14880 ;; Tracked objects:
 14881 ;;		On entry : 0/0
 14882 ;;		On exit  : 0/0
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14889 ;;Total ram usage:        0 bytes
 14890 ;; Hardware stack levels used:    1
 14891 ;; This function calls:
 14892 ;;		Nothing
 14893 ;; This function is called by:
 14894 ;;		_SYSTEM_Initialize
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           
 14899                           ;psect for function _PMD_Initialize
 14900  0000'                    _PMD_Initialize:
 14901  0000'                    l4391:	
 14902                           ;incstack = 0
 14903                           ; Regs used in _PMD_Initialize: [status,2]
 14904                           
 14905                           
 14906                           ;mcc_generated_files/mcc.c: 85:     PMD0 = 0x00;
 14907  0000' 0032               	movlb	18	; select bank18
 14908  0001' 0191               	clrf	17	;volatile
 14909                           
 14910                           ;mcc_generated_files/mcc.c: 87:     PMD1 = 0x00;
 14911  0002' 0192               	clrf	18	;volatile
 14912                           
 14913                           ;mcc_generated_files/mcc.c: 89:     PMD2 = 0x00;
 14914  0003' 0193               	clrf	19	;volatile
 14915                           
 14916                           ;mcc_generated_files/mcc.c: 91:     PMD3 = 0x00;
 14917  0004' 0194               	clrf	20	;volatile
 14918                           
 14919                           ;mcc_generated_files/mcc.c: 93:     PMD4 = 0x00;
 14920  0005' 0195               	clrf	21	;volatile
 14921                           
 14922                           ;mcc_generated_files/mcc.c: 95:     PMD5 = 0x00;
 14923  0006' 0196               	clrf	22	;volatile
 14924  0007'                    l50:
 14925  0007' 0008               	return
 14926  0008'                    __end_of_PMD_Initialize:
 14927                           
 14928                           	psect	text39
 14929  0000'                    __ptext39:	
 14930 ;; *************** function _PIN_MANAGER_Initialize *****************
 14931 ;; Defined at:
 14932 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;		None
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, status,2
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14950 ;;Total ram usage:        0 bytes
 14951 ;; Hardware stack levels used:    1
 14952 ;; This function calls:
 14953 ;;		Nothing
 14954 ;; This function is called by:
 14955 ;;		_SYSTEM_Initialize
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           
 14960                           ;psect for function _PIN_MANAGER_Initialize
 14961  0000'                    _PIN_MANAGER_Initialize:
 14962  0000'                    l4393:	
 14963                           ;incstack = 0
 14964                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14965                           
 14966                           
 14967                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 14968  0000' 0022               	movlb	2	; select bank2
 14969  0001' 018C               	clrf	12	;volatile
 14970                           
 14971                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
 14972  0002' 018E               	clrf	14	;volatile
 14973  0003'                    l4395:
 14974                           
 14975                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x07;
 14976  0003' 3007               	movlw	7
 14977  0004' 0021               	movlb	1	; select bank1
 14978  0005' 008C               	movwf	12	;volatile
 14979  0006'                    l4397:
 14980                           
 14981                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x28;
 14982  0006' 3028               	movlw	40
 14983  0007' 008E               	movwf	14	;volatile
 14984  0008'                    l4399:
 14985                           
 14986                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x10;
 14987  0008' 3010               	movlw	16
 14988  0009' 0023               	movlb	3	; select bank3
 14989  000A' 008E               	movwf	14	;volatile
 14990  000B'                    l4401:
 14991                           
 14992                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
 14993  000B' 3007               	movlw	7
 14994  000C' 008C               	movwf	12	;volatile
 14995                           
 14996                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
 14997  000D' 0024               	movlb	4	; select bank4
 14998  000E' 018C               	clrf	12	;volatile
 14999                           
 15000                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
 15001  000F' 018E               	clrf	14	;volatile
 15002                           
 15003                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
 15004  0010' 0025               	movlb	5	; select bank5
 15005  0011' 018C               	clrf	12	;volatile
 15006                           
 15007                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
 15008  0012' 018E               	clrf	14	;volatile
 15009  0013'                    l4403:
 15010                           
 15011                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
 15012  0013' 3037               	movlw	55
 15013  0014' 0026               	movlb	6	; select bank6
 15014  0015' 008C               	movwf	12	;volatile
 15015  0016'                    l4405:
 15016                           
 15017                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
 15018  0016' 303F               	movlw	63
 15019  0017' 008E               	movwf	14	;volatile
 15020  0018'                    l4407:
 15021                           
 15022                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
 15023  0018' 303F               	movlw	63
 15024  0019' 0027               	movlb	7	; select bank7
 15025  001A' 008C               	movwf	12	;volatile
 15026  001B'                    l4409:
 15027                           
 15028                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
 15029  001B' 303F               	movlw	63
 15030  001C' 008E               	movwf	14	;volatile
 15031  001D'                    l4411:
 15032                           
 15033                           ;mcc_generated_files/pin_manager.c: 106:     RXPPS = 0x15;
 15034  001D' 3015               	movlw	21
 15035  001E' 003C               	movlb	28	; select bank28
 15036  001F' 00A4               	movwf	36	;volatile
 15037  0020'                    l4413:
 15038                           
 15039                           ;mcc_generated_files/pin_manager.c: 107:     RC4PPS = 0x14;
 15040  0020' 3014               	movlw	20
 15041  0021' 003D               	movlb	29	; select bank29
 15042  0022' 00A4               	movwf	36	;volatile
 15043  0023'                    l85:
 15044  0023' 0008               	return
 15045  0024'                    __end_of_PIN_MANAGER_Initialize:
 15046                           
 15047                           	psect	text40
 15048  0000'                    __ptext40:	
 15049 ;; *************** function _OSCILLATOR_Initialize *****************
 15050 ;; Defined at:
 15051 ;;		line 62 in file "mcc_generated_files/mcc.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;		None
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;		None
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  1    wreg      void 
 15058 ;; Registers used:
 15059 ;;		wreg, status,2
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15069 ;;Total ram usage:        0 bytes
 15070 ;; Hardware stack levels used:    1
 15071 ;; This function calls:
 15072 ;;		Nothing
 15073 ;; This function is called by:
 15074 ;;		_SYSTEM_Initialize
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078                           
 15079                           ;psect for function _OSCILLATOR_Initialize
 15080  0000'                    _OSCILLATOR_Initialize:
 15081  0000'                    l4415:	
 15082                           ;incstack = 0
 15083                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15084                           
 15085                           
 15086                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 15087  0000' 3060               	movlw	96
 15088  0001' 0032               	movlb	18	; select bank18
 15089  0002' 0099               	movwf	25	;volatile
 15090  0003'                    l4417:
 15091                           
 15092                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 15093  0003' 019B               	clrf	27	;volatile
 15094  0004'                    l4419:
 15095                           
 15096                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 15097  0004' 019D               	clrf	29	;volatile
 15098                           
 15099                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x03;
 15100  0005' 3003               	movlw	3
 15101  0006' 009F               	movwf	31	;volatile
 15102  0007'                    l4421:
 15103                           
 15104                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 15105  0007' 019E               	clrf	30	;volatile
 15106  0008'                    l44:
 15107  0008' 0008               	return
 15108  0009'                    __end_of_OSCILLATOR_Initialize:
 15109                           
 15110                           	psect	text41
 15111  0000'                    __ptext41:	
 15112 ;; *************** function _FVR_Initialize *****************
 15113 ;; Defined at:
 15114 ;;		line 58 in file "mcc_generated_files/fvr.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		wreg
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15132 ;;Total ram usage:        0 bytes
 15133 ;; Hardware stack levels used:    1
 15134 ;; This function calls:
 15135 ;;		Nothing
 15136 ;; This function is called by:
 15137 ;;		_SYSTEM_Initialize
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           
 15142                           ;psect for function _FVR_Initialize
 15143  0000'                    _FVR_Initialize:
 15144  0000'                    l4425:	
 15145                           ;incstack = 0
 15146                           ; Regs used in _FVR_Initialize: [wreg]
 15147                           
 15148                           
 15149                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
 15150  0000' 3082               	movlw	130
 15151  0001' 0022               	movlb	2	; select bank2
 15152  0002' 0097               	movwf	23	;volatile
 15153  0003'                    l223:
 15154  0003' 0008               	return
 15155  0004'                    __end_of_FVR_Initialize:
 15156                           
 15157                           	psect	text42
 15158  0000'                    __ptext42:	
 15159 ;; *************** function _EUSART_Initialize *****************
 15160 ;; Defined at:
 15161 ;;		line 66 in file "mcc_generated_files/eusart.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;		None
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;		None
 15166 ;; Return value:  Size  Location     Type
 15167 ;;                  1    wreg      void 
 15168 ;; Registers used:
 15169 ;;		wreg, status,2, status,0, pclath, cstack
 15170 ;; Tracked objects:
 15171 ;;		On entry : 0/0
 15172 ;;		On exit  : 0/0
 15173 ;;		Unchanged: 0/0
 15174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;Total ram usage:        0 bytes
 15180 ;; Hardware stack levels used:    1
 15181 ;; Hardware stack levels required when called:    1
 15182 ;; This function calls:
 15183 ;;		_EUSART_SetErrorHandler
 15184 ;;		_EUSART_SetFramingErrorHandler
 15185 ;;		_EUSART_SetOverrunErrorHandler
 15186 ;; This function is called by:
 15187 ;;		_SYSTEM_Initialize
 15188 ;; This function uses a non-reentrant model
 15189 ;;
 15190                           
 15191                           
 15192                           ;psect for function _EUSART_Initialize
 15193  0000'                    _EUSART_Initialize:
 15194  0000'                    l4437:	
 15195                           ;incstack = 0
 15196                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15197                           
 15198                           
 15199                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
 15200  0000' 3008               	movlw	8
 15201  0001' 0023               	movlb	3	; select bank3
 15202  0002' 009F               	movwf	31	;volatile
 15203                           
 15204                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
 15205  0003' 3090               	movlw	144
 15206  0004' 009D               	movwf	29	;volatile
 15207                           
 15208                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
 15209  0005' 3024               	movlw	36
 15210  0006' 009E               	movwf	30	;volatile
 15211                           
 15212                           ;mcc_generated_files/eusart.c: 80:     SP1BRGL = 0x67;
 15213  0007' 3067               	movlw	103
 15214  0008' 009B               	movwf	27	;volatile
 15215  0009'                    l4439:
 15216                           
 15217                           ;mcc_generated_files/eusart.c: 83:     SP1BRGH = 0x00;
 15218  0009' 019C               	clrf	28	;volatile
 15219  000A'                    l4441:
 15220                           
 15221                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
 15222  000A' 3000               	movlw	0
 15223  000B' 0080'              	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 15224  000C' 3000               	movlw	0
 15225  000D' 0081'              	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 15226  000E' 3180' 2000' 3180'  	fcall	_EUSART_SetFramingErrorHandler
 15227  0011'                    l4443:
 15228                           
 15229                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
 15230  0011' 3000               	movlw	0
 15231  0012' 0080'              	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 15232  0013' 3000               	movlw	0
 15233  0014' 0081'              	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 15234  0015' 3180' 2000' 3180'  	fcall	_EUSART_SetOverrunErrorHandler
 15235  0018'                    l4445:
 15236                           
 15237                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
 15238  0018' 3000               	movlw	0
 15239  0019' 0080'              	movwf	EUSART_SetErrorHandler@interruptHandler
 15240  001A' 3000               	movlw	0
 15241  001B' 0081'              	movwf	EUSART_SetErrorHandler@interruptHandler+1
 15242  001C' 3180' 2000' 3180'  	fcall	_EUSART_SetErrorHandler
 15243  001F'                    l4447:
 15244                           
 15245                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
 15246  001F' 0023               	movlb	3	; select bank3
 15247  0020' 0180'              	clrf	_eusartRxLastError^(0+384)	;volatile
 15248  0021'                    l171:
 15249  0021' 0008               	return
 15250  0022'                    __end_of_EUSART_Initialize:
 15251                           
 15252                           	psect	text43
 15253  0000'                    __ptext43:	
 15254 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 15255 ;; Defined at:
 15256 ;;		line 161 in file "mcc_generated_files/eusart.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 15259 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 15260 ;; Auto vars:     Size  Location     Type
 15261 ;;		None
 15262 ;; Return value:  Size  Location     Type
 15263 ;;                  1    wreg      void 
 15264 ;; Registers used:
 15265 ;;		wreg
 15266 ;; Tracked objects:
 15267 ;;		On entry : 0/0
 15268 ;;		On exit  : 0/0
 15269 ;;		Unchanged: 0/0
 15270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15275 ;;Total ram usage:        2 bytes
 15276 ;; Hardware stack levels used:    1
 15277 ;; This function calls:
 15278 ;;		Nothing
 15279 ;; This function is called by:
 15280 ;;		_EUSART_Initialize
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284                           
 15285                           ;psect for function _EUSART_SetOverrunErrorHandler
 15286  0000'                    _EUSART_SetOverrunErrorHandler:
 15287  0000'                    l4259:	
 15288                           ;incstack = 0
 15289                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 15290                           
 15291                           
 15292                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
 15293  0000' 0801'              	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 15294  0001' 0023               	movlb	3	; select bank3
 15295  0002' 0080'              	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
 15296  0003' 0800'              	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 15297  0004' 0080'              	movwf	_EUSART_OverrunErrorHandler^(0+384)
 15298  0005'                    l213:
 15299  0005' 0008               	return
 15300  0006'                    __end_of_EUSART_SetOverrunErrorHandler:
 15301                           
 15302                           	psect	text44
 15303  0000'                    __ptext44:	
 15304 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 15305 ;; Defined at:
 15306 ;;		line 157 in file "mcc_generated_files/eusart.c"
 15307 ;; Parameters:    Size  Location     Type
 15308 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 15309 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 15310 ;; Auto vars:     Size  Location     Type
 15311 ;;		None
 15312 ;; Return value:  Size  Location     Type
 15313 ;;                  1    wreg      void 
 15314 ;; Registers used:
 15315 ;;		wreg
 15316 ;; Tracked objects:
 15317 ;;		On entry : 0/0
 15318 ;;		On exit  : 0/0
 15319 ;;		Unchanged: 0/0
 15320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;Total ram usage:        2 bytes
 15326 ;; Hardware stack levels used:    1
 15327 ;; This function calls:
 15328 ;;		Nothing
 15329 ;; This function is called by:
 15330 ;;		_EUSART_Initialize
 15331 ;; This function uses a non-reentrant model
 15332 ;;
 15333                           
 15334                           
 15335                           ;psect for function _EUSART_SetFramingErrorHandler
 15336  0000'                    _EUSART_SetFramingErrorHandler:
 15337  0000'                    l4257:	
 15338                           ;incstack = 0
 15339                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 15340                           
 15341                           
 15342                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
 15343  0000' 0801'              	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 15344  0001' 0023               	movlb	3	; select bank3
 15345  0002' 0080'              	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
 15346  0003' 0800'              	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 15347  0004' 0080'              	movwf	_EUSART_FramingErrorHandler^(0+384)
 15348  0005'                    l210:
 15349  0005' 0008               	return
 15350  0006'                    __end_of_EUSART_SetFramingErrorHandler:
 15351                           
 15352                           	psect	text45
 15353  0000'                    __ptext45:	
 15354 ;; *************** function _EUSART_SetErrorHandler *****************
 15355 ;; Defined at:
 15356 ;;		line 165 in file "mcc_generated_files/eusart.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 15359 ;;		 -> EUSART_DefaultErrorHandler(1), 
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;		None
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  1    wreg      void 
 15364 ;; Registers used:
 15365 ;;		wreg
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15375 ;;Total ram usage:        2 bytes
 15376 ;; Hardware stack levels used:    1
 15377 ;; This function calls:
 15378 ;;		Nothing
 15379 ;; This function is called by:
 15380 ;;		_EUSART_Initialize
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           
 15385                           ;psect for function _EUSART_SetErrorHandler
 15386  0000'                    _EUSART_SetErrorHandler:
 15387  0000'                    l4261:	
 15388                           ;incstack = 0
 15389                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 15390                           
 15391                           
 15392                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
 15393  0000' 0801'              	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 15394  0001' 0023               	movlb	3	; select bank3
 15395  0002' 0080'              	movwf	(_EUSART_ErrorHandler+1)^(0+384)
 15396  0003' 0800'              	movf	EUSART_SetErrorHandler@interruptHandler,w
 15397  0004' 0080'              	movwf	_EUSART_ErrorHandler^(0+384)
 15398  0005'                    l216:
 15399  0005' 0008               	return
 15400  0006'                    __end_of_EUSART_SetErrorHandler:
 15401                           
 15402                           	psect	text46
 15403  0000'                    __ptext46:	
 15404 ;; *************** function _ADC_Initialize *****************
 15405 ;; Defined at:
 15406 ;;		line 67 in file "mcc_generated_files/adc.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;		None
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;		None
 15411 ;; Return value:  Size  Location     Type
 15412 ;;                  1    wreg      void 
 15413 ;; Registers used:
 15414 ;;		wreg, status,2
 15415 ;; Tracked objects:
 15416 ;;		On entry : 0/0
 15417 ;;		On exit  : 0/0
 15418 ;;		Unchanged: 0/0
 15419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15424 ;;Total ram usage:        0 bytes
 15425 ;; Hardware stack levels used:    1
 15426 ;; This function calls:
 15427 ;;		Nothing
 15428 ;; This function is called by:
 15429 ;;		_SYSTEM_Initialize
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433                           
 15434                           ;psect for function _ADC_Initialize
 15435  0000'                    _ADC_Initialize:
 15436  0000'                    l4427:	
 15437                           ;incstack = 0
 15438                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 15439                           
 15440                           
 15441                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x80;
 15442  0000' 3080               	movlw	128
 15443  0001' 0021               	movlb	1	; select bank1
 15444  0002' 009E               	movwf	30	;volatile
 15445  0003'                    l4429:
 15446                           
 15447                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x00;
 15448  0003' 019F               	clrf	31	;volatile
 15449  0004'                    l4431:
 15450                           
 15451                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 15452  0004' 019B               	clrf	27	;volatile
 15453  0005'                    l4433:
 15454                           
 15455                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 15456  0005' 019C               	clrf	28	;volatile
 15457  0006'                    l4435:
 15458                           
 15459                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x09;
 15460  0006' 3009               	movlw	9
 15461  0007' 009D               	movwf	29	;volatile
 15462  0008'                    l107:
 15463  0008' 0008               	return
 15464  0009'                    __end_of_ADC_Initialize:
 15465                           
 15466                           	psect	text47
 15467  0000'                    __ptext47:	
 15468 ;; *************** function _EUSART_Write *****************
 15469 ;; Defined at:
 15470 ;;		line 132 in file "mcc_generated_files/eusart.c"
 15471 ;; Parameters:    Size  Location     Type
 15472 ;;  txData          1    wreg     unsigned char 
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;  txData          1    0[COMMON] unsigned char 
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  1    wreg      void 
 15477 ;; Registers used:
 15478 ;;		wreg
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;Total ram usage:        1 bytes
 15489 ;; Hardware stack levels used:    1
 15490 ;; This function calls:
 15491 ;;		Nothing
 15492 ;; This function is called by:
 15493 ;;		_main
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           
 15498                           ;psect for function _EUSART_Write
 15499  0000'                    _EUSART_Write:
 15500                           
 15501                           ;incstack = 0
 15502                           ; Regs used in _EUSART_Write: [wreg]
 15503                           ;EUSART_Write@txData stored from wreg
 15504  0000' 0080'              	movwf	EUSART_Write@txData
 15505  0001'                    l4491:
 15506  0001'                    l195:	
 15507                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 15508                           
 15509                           
 15510                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 15511  0001' 0020               	movlb	0	; select bank0
 15512  0002' 1E11               	btfss	17,4	;volatile
 15513  0003' 2800'              	goto	u6411
 15514  0004' 2800'              	goto	u6410
 15515  0005'                    u6411:
 15516  0005' 2800'              	goto	l195
 15517  0006'                    u6410:
 15518  0006'                    l4493:
 15519                           
 15520                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
 15521  0006' 0800'              	movf	EUSART_Write@txData,w
 15522  0007' 0023               	movlb	3	; select bank3
 15523  0008' 009A               	movwf	26	;volatile
 15524  0009'                    l198:
 15525  0009' 0008               	return
 15526  000A'                    __end_of_EUSART_Write:
 15527                           
 15528                           	psect	text48
 15529  0000'                    __ptext48:	
 15530 ;; *************** function _ADC_SelectChannel *****************
 15531 ;; Defined at:
 15532 ;;		line 88 in file "mcc_generated_files/adc.c"
 15533 ;; Parameters:    Size  Location     Type
 15534 ;;  channel         1    wreg     enum E6327
 15535 ;; Auto vars:     Size  Location     Type
 15536 ;;  channel         1    1[COMMON] enum E6327
 15537 ;; Return value:  Size  Location     Type
 15538 ;;                  1    wreg      void 
 15539 ;; Registers used:
 15540 ;;		wreg, status,2, status,0
 15541 ;; Tracked objects:
 15542 ;;		On entry : 0/0
 15543 ;;		On exit  : 0/0
 15544 ;;		Unchanged: 0/0
 15545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15550 ;;Total ram usage:        2 bytes
 15551 ;; Hardware stack levels used:    1
 15552 ;; This function calls:
 15553 ;;		Nothing
 15554 ;; This function is called by:
 15555 ;;		_main
 15556 ;; This function uses a non-reentrant model
 15557 ;;
 15558                           
 15559                           
 15560                           ;psect for function _ADC_SelectChannel
 15561  0000'                    _ADC_SelectChannel:
 15562                           
 15563                           ;incstack = 0
 15564                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15565                           ;ADC_SelectChannel@channel stored from wreg
 15566  0000' 0081'              	movwf	ADC_SelectChannel@channel
 15567  0001'                    l4475:
 15568                           
 15569                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
 15570  0001' 0801'              	movf	ADC_SelectChannel@channel,w
 15571  0002' 0080'              	movwf	??_ADC_SelectChannel
 15572  0003' 0D80'              	rlf	??_ADC_SelectChannel,f
 15573  0004' 0D80'              	rlf	??_ADC_SelectChannel,f
 15574  0005' 0021               	movlb	1	; select bank1
 15575  0006' 081D               	movf	29,w	;volatile
 15576  0007' 0600'              	xorwf	??_ADC_SelectChannel,w
 15577  0008' 3903               	andlw	-253
 15578  0009' 0600'              	xorwf	??_ADC_SelectChannel,w
 15579  000A' 009D               	movwf	29	;volatile
 15580  000B'                    l4477:
 15581                           
 15582                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
 15583  000B' 141D               	bsf	29,0	;volatile
 15584  000C'                    l110:
 15585  000C' 0008               	return
 15586  000D'                    __end_of_ADC_SelectChannel:
 15587                           
 15588                           	psect	text49
 15589  0000'                    __ptext49:	
 15590 ;; *************** function _ADC_GetConversion *****************
 15591 ;; Defined at:
 15592 ;;		line 115 in file "mcc_generated_files/adc.c"
 15593 ;; Parameters:    Size  Location     Type
 15594 ;;  channel         1    wreg     enum E6327
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;  channel         1    3[COMMON] enum E6327
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  2    0[COMMON] unsigned short 
 15599 ;; Registers used:
 15600 ;;		wreg, status,2, status,0
 15601 ;; Tracked objects:
 15602 ;;		On entry : 0/0
 15603 ;;		On exit  : 0/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;Total ram usage:        4 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; This function calls:
 15613 ;;		Nothing
 15614 ;; This function is called by:
 15615 ;;		_main
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           
 15620                           ;psect for function _ADC_GetConversion
 15621  0000'                    _ADC_GetConversion:
 15622                           
 15623                           ;incstack = 0
 15624                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 15625                           ;ADC_GetConversion@channel stored from wreg
 15626  0000' 0083'              	movwf	ADC_GetConversion@channel
 15627  0001'                    l4479:
 15628                           
 15629                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
 15630  0001' 0803'              	movf	ADC_GetConversion@channel,w
 15631  0002' 0082'              	movwf	??_ADC_GetConversion
 15632  0003' 0D82'              	rlf	??_ADC_GetConversion,f
 15633  0004' 0D82'              	rlf	??_ADC_GetConversion,f
 15634  0005' 0021               	movlb	1	; select bank1
 15635  0006' 081D               	movf	29,w	;volatile
 15636  0007' 0602'              	xorwf	??_ADC_GetConversion,w
 15637  0008' 3903               	andlw	-253
 15638  0009' 0602'              	xorwf	??_ADC_GetConversion,w
 15639  000A' 009D               	movwf	29	;volatile
 15640  000B'                    l4481:
 15641                           
 15642                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
 15643  000B' 141D               	bsf	29,0	;volatile
 15644  000C'                    l4483:
 15645                           
 15646                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(4000000/4000000.0)));
 15647  000C' 3200               	nop2	;2 cycle nop
 15648  000D' 3200               	nop2	;2 cycle nop
 15649  000E' 0000               	nop
 15650  000F'                    l4485:
 15651                           
 15652                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.ADGO = 1;
 15653  000F' 0021               	movlb	1	; select bank1
 15654  0010' 149D               	bsf	29,1	;volatile
 15655  0011'                    l122:	
 15656                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
 15657                           
 15658                           
 15659                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.ADGO)
 15660  0011' 189D               	btfsc	29,1	;volatile
 15661  0012' 2800'              	goto	u6401
 15662  0013' 2800'              	goto	u6400
 15663  0014'                    u6401:
 15664  0014' 2800'              	goto	l122
 15665  0015'                    u6400:
 15666  0015'                    l4487:
 15667                           
 15668                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15669  0015' 081C               	movf	28,w	;volatile
 15670  0016' 0081'              	movwf	?_ADC_GetConversion+1
 15671  0017' 081B               	movf	27,w	;volatile
 15672  0018' 0080'              	movwf	?_ADC_GetConversion
 15673  0019'                    l125:
 15674  0019' 0008               	return
 15675  001A'                    __end_of_ADC_GetConversion:
 15676  007E                     btemp	set	126	;btemp
 15677  007E                     wtemp0	set	126
 15678  231C                     
 15679                           	psect	config
 15680                           
 15681                           ;Config register CONFIG1 @ 0x8007
 15682                           ;	FEXTOSC External Oscillator mode Selection bits
 15683                           ;	FEXTOSC = OFF, Oscillator not enabled
 15684                           ;	Power-up default value for COSC bits
 15685                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 15686                           ;	Clock Out Enable bit
 15687                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 15688                           ;	Clock Switch Enable bit
 15689                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15690                           ;	Fail-Safe Clock Monitor Enable
 15691                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15692  8007                     	org	32775
 15693  8007  3FEC               	dw	16364
 15694                           
 15695                           ;Config register CONFIG2 @ 0x8008
 15696                           ;	Master Clear Enable bit
 15697                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 15698                           ;	Power-up Timer Enable bit
 15699                           ;	PWRTE = OFF, PWRT disabled
 15700                           ;	Watchdog Timer Enable bits
 15701                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 15702                           ;	Low-power BOR enable bit
 15703                           ;	LPBOREN = OFF, ULPBOR disabled
 15704                           ;	Brown-out Reset Enable bits
 15705                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 15706                           ;	Brown-out Reset Voltage selection bit
 15707                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 15708                           ;	PPSLOCK bit One-Way Set Enable bit
 15709                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 15710                           ;	Stack Overflow/Underflow Reset Enable bit
 15711                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15712                           ;	Debugger enable bit
 15713                           ;	DEBUG = OFF, Background debugger disabled
 15714  8008                     	org	32776
 15715  8008  3FF3               	dw	16371
 15716                           
 15717                           ;Config register CONFIG3 @ 0x8009
 15718                           ;	User NVM self-write protection bits
 15719                           ;	WRT = OFF, Write protection off
 15720                           ;	Low Voltage Programming Enable bit
 15721                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 15722  8009                     	org	32777
 15723  8009  3FFF               	dw	16383
 15724                           
 15725                           ;Config register CONFIG4 @ 0x800A
 15726                           ;	User NVM Program Memory Code Protection bit
 15727                           ;	CP = OFF, User NVM code protection disabled
 15728                           ;	Data NVM Memory Code Protection bit
 15729                           ;	CPD = OFF, Data NVM code protection disabled
 15730  800A                     	org	32778
 15731  800A  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    206
    Data        0
    BSS         99
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     76      80
    BANK3            80      0      21
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            76      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK2[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK2[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    S869_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK2[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK2[20]), 

    main@p	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK2[20]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___fltol
    _main->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->___fltol
    _efgtoa->_tolower
    _tolower->_isupper
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _efgtoa->___flge
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___flsub
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   43466
                                             43 BANK2     33    33      0
                  _ADC_GetConversion
                  _ADC_SelectChannel
                       _EUSART_Write
    _INTERRUPT_GlobalInterruptEnable
_INTERRUPT_PeripheralInterruptEnable
                  _SYSTEM_Initialize
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   33509
                                             79 BANK1      1     1      0
                                             26 BANK2     17     9      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   33191
                                             74 BANK1      5     2      3
                                             23 BANK2      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    45      2   32850
                                             66 BANK1      8     6      2
                                              0 BANK2     23    23      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   22467
                                              0 BANK1     66    61      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             42 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     457
                                             12 COMMON     2     2      0
                                             42 BANK0      9     5      4
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2789
                                              8 BANK0      8     0      8
                          __Umul8_16 (ARG)
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3481
                                             42 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             68 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2185
                                             16 BANK0     26    18      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4698
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3092
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1237
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_PeripheralInterruptEnable                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_GlobalInterruptEnable                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_SelectChannel
   _EUSART_Write
   _INTERRUPT_GlobalInterruptEnable
   _INTERRUPT_PeripheralInterruptEnable
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _WDT_Initialize
   ___fldiv
     ___flsub (ARG)
       __Umul8_16 (ARG)
       ___fladd (ARG)
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
       ___flsub (ARG)
         __Umul8_16 (ARG)
         ___fladd (ARG)
     ___flsub (ARG)
       __Umul8_16 (ARG)
       ___fladd (ARG)
   ___flsub
     __Umul8_16 (ARG)
     ___fladd (ARG)
   ___fltol
     ___fldiv (ARG)
       ___flsub (ARG)
         __Umul8_16 (ARG)
         ___fladd (ARG)
     ___flsub (ARG)
       __Umul8_16 (ARG)
       ___fladd (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flsub (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___flsub (ARG)
                   __Umul8_16 (ARG)
                   ___fladd (ARG)
               ___flsub (ARG)
                 __Umul8_16 (ARG)
                 ___fladd (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___flsub (ARG)
                 __Umul8_16 (ARG)
                 ___fladd (ARG)
             ___flsub (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
           ___flneg
           ___flsub
             __Umul8_16 (ARG)
             ___fladd (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flsub (ARG)
                 __Umul8_16 (ARG)
                 ___fladd (ARG)
             ___flsub (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flsub (ARG)
                 __Umul8_16 (ARG)
                 ___fladd (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4C      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      15      11       26.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     163      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               4C      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     163      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 06 20:04:38 2022

                                 ___fldiv@aexp 0029                                   ___fldiv@bexp 0028  
                                 ___fldiv@sign 0021                                             l41 0015  
                                           l50 0007                                             l44 0008  
                                           l47 0003                                             l85 0023  
                                 ___awdiv@sign 0006                         __end_of_FVR_Initialize 0004  
                          ___wmul@multiplicand 0002                            __Umul8_16@word_mpld 0006  
                                          l110 000C                                            l122 0011  
                                          l210 0005                                            l107 0008  
                                          l125 0019                                            l213 0005  
                                          l223 0003                                            l216 0005  
                                          l171 0021                                            l251 0009  
                                          l412 000A                                            l414 001E  
                                          l512 00EF                                            l513 0100  
                                          l602 000A                                            l195 0001  
                                          l525 00D8                                            l613 005F  
                                          l198 0009                                            l526 00E9  
                                          l606 0074                                            l616 0074  
                                          l713 005E                                            l565 005E  
                                          l581 001C                                            l821 024A  
                                          l717 0100                                            l582 0038  
                                          l590 001D                                            l830 0022  
                                          l734 0195                                            l726 023E  
                                          l815 01D2                                            l719 00DB  
                                          l744 01D9                                            l921 003E  
                                          l593 0071                                            l809 0256  
                                          l578 0052                                            l738 01B7  
                                          l923 0058                                            l931 006F  
                                          l771 01B3                                            l587 004D  
                                          l755 0234                                            l747 0211  
                                          l932 0087                                            l828 0012  
                                          l756 023E                                            l853 0022  
                                          l918 001C                                            l926 0049  
                                          l790 0181                                            l598 008A  
                                          l855 00AB                                            l935 00F8  
                                          l927 0052                                            l791 019B  
                                          l759 001F                                            l793 01AA  
                                          l785 0135                                            l769 0057  
                                          l866 0077                                            l867 0083  
                                          l859 005D                                            l875 002B  
                                          l949 016F                                            l982 0268  
                                          l983 024A                                            l967 0768  
                                          l993 02A1                                            _abs 0000  
                                          _pad 0000                 ?_EUSART_SetFramingErrorHandler 0000  
                      __size_of_PMD_Initialize 0008                                   ___awmod@sign 0006  
                                          wreg 0009                                   ___flmul@aexp 003C  
                                 ___flmul@bexp 003D                                   ___flmul@sign 0037  
                                 ___flmul@temp 0042                                   ___flmul@prod 003E  
                                 ___fltol@exp1 000D                                           l1101 0019  
                                         l1013 04F8                                           l1104 0019  
                                         l1008 04E2                                           l1122 003D  
                                         l1203 0019                                           ?_abs 0003  
                                         l1140 0041                                           l1141 00EA  
                                         l1222 0024                                           l1151 0017  
                                         l1135 00AE                                           l1207 005A  
                                         l1071 037E                                           l3001 0054  
                                         l1145 00E2                                           l1217 0024  
                                         l3011 0070                                           l3003 0056  
                                         l1180 0055                                           l3101 01AB  
                                         l3021 0084                                           l3013 0074  
                                         l3005 0064                                           l1165 0017  
                                         l1086 0036                                           l1159 0020  
                                         l1191 0000                                           l3111 01C0  
                                         l3103 01B2                                           l3031 0098  
                                         l3023 0088                                           l3015 0078  
                                         l3007 0068                                           l1096 007E  
                                         l3201 001A                                           l3121 01D0  
                                         l3113 01C5                                           l3105 01B6  
                                         l3041 00A9                                           l3033 009C  
                                         l3025 008C                                           l3017 007C  
                                         l3009 006C                                           l4001 02AB  
                                         l3211 002C                                           l3131 01EB  
                                         l3123 01D6                                           l3107 01BB  
                                         l3115 01C7                                           l3051 00EC  
                                         l3043 00C0                                           l3035 00A0  
                                         l3027 0090                                           l3019 0080  
                                         l4011 02C3                                           l4003 02B1  
                                         l1188 0028                                           l3221 0070  
                                         l3213 0036                                           l3205 0000  
                                         l3301 0040                                           l3141 0223  
                                         l3133 01EF                                           l3109 01BE  
                                         l3117 01CB                                           l3061 0109  
                                         l3053 00ED                                           l3045 00DF  
                                         l3037 00A4                                           l3029 0094  
                                         l1197 0020                                           l4101 060F  
                                         l4021 02D9                                           l4013 02CB  
                                         l4005 02B5                                           l3231 008B  
                                         l3223 0073                                           l3215 0055  
                                         l3207 0001                                           l3311 0055  
                                         l3303 0044                                           l3151 0239  
                                         l3143 0228                                           l3135 020D  
                                         l3127 01DE                                           l3119 01CC  
                                         l3071 0122                                           l3055 00F6  
                                         l3047 00E6                                           l3039 00A8  
                                         l4111 065F                                           l4103 063B  
                                         l4031 03CF                                           l4023 02E1  
                                         l4015 02CD                                           l4007 02B9  
                                         l4201 0032                                           l3241 00D1  
                                         l3233 00AD                                           l3225 007B  
                                         l3217 0059                                           l3209 000B  
                                         l3313 005A                                           l3305 0045  
                                         l3321 0005                                           l3161 000E  
                                         l3153 023D                                           l3145 0229  
                                         l3137 0216                                           l3129 01E3  
                                         l3081 0139                                           l3073 0129  
                                         l3065 0112                                           l3049 00E8  
                                         l3057 00FA                                           l3401 0015  
                                         l4121 0680                                           l4113 0666  
                                         l4105 063F                                           l4041 0450  
                                         l4033 0421                                           l4025 02EA  
                                         l4017 02D3                                           l4009 02BF  
                                         l4211 0076                                           l4203 0039  
                                         l3235 00BD                                           l3227 007F  
                                         l3219 0063                                           l3251 0036  
                                         l3243 0000                                           l3171 0005  
                                         l3307 004A                                           l3331 001B  
                                         l3323 000A                                           l3163 0019  
                                         l3155 0001                                           l3147 022D  
                                         l3139 021B                                           l3091 0184  
                                         l3075 012B                                           l3067 011A  
                                         l3059 0104                                           l3083 013E  
                                         l3411 0037                                           l3403 0028  
                                         l4131 0696                                           l4123 0686  
                                         l4115 066B                                           l4107 0643  
                                         l4051 04DE                                           l4043 046D  
                                         l4035 042B                                           l4027 03BD  
                                         l4019 02D7                                           l4221 00AA  
                                         l4205 0042                                           l3237 00BE  
                                         l3229 0083                                           l3261 0071  
                                         l3253 0055                                           l3245 0001  
                                         l3173 0013                                           l3181 000A  
                                         l3309 0050                                           l3341 0035  
                                         l3333 001E                                           l3325 000C  
                                         l3317 0000                                           l3501 00B0  
                                         l3165 001E                                           l3157 0003  
                                         l3149 022F                                           l3085 0155  
                                         l3093 018D                                           l3077 012F  
                                         l3069 011E                                           l3405 0029  
                                         l4141 06BF                                           l4133 069A  
                                         l4125 068A                                           l4117 0675  
                                         l4109 0651                                           l4061 0558  
                                         l4053 04EB                                           l4045 04A7  
                                         l4037 0443                                           l4029 03C1  
                                         l4301 00DB                                           l3191 0000  
                                         l4215 0092                                           l4207 0056  
                                         l3239 00CC                                           l3271 00BA  
                                         l3263 0075                                           l3255 0062  
                                         l3247 000B                                           l3175 0018  
                                         l3183 0013                                           l3351 004E  
                                         l3343 0039                                           l3335 0023  
                                         l3327 0010                                           l3319 0001  
                                         l3503 00B5                                           l3511 00CF  
                                         l3159 000A                                           l3095 019D  
                                         l3087 0179                                           l3079 0130  
                                         l3431 0000                                           l3407 0031  
                                         l4151 06EA                                           l4143 06CF  
                                         l4135 069F                                           l4127 0690  
                                         l4119 0679                                           l4063 055D  
                                         l4071 0573                                           l4055 04F1  
                                         l4047 04AC                                           l4039 0448  
                                         l4231 0001                                           l4303 00E4  
                                         l4401 000B                                           l3193 0002  
                                         l4217 0098                                           l3265 0097  
                                         l3257 0065                                           l3249 002C  
                                         l3169 0002                                           l3177 0001  
                                         l3281 000C                                           l3273 0000  
                                         l3345 003E                                           l3337 0027  
                                         l3329 0015                                           l3521 00F4  
                                         l3513 00E1                                           l3505 00C3  
                                         l3441 000A                                           l3361 004A  
                                         l3601 0038                                           l3097 01A2  
                                         l3089 017F                                           l3433 0003  
                                         l3425 0056                                           l3417 003F  
                                         l3409 0033                                           l4161 0707  
                                         l4153 06EF                                           l4145 06D3  
                                         l4137 06A4                                           l4129 0692  
                                         l4081 058F                                           l4073 057A  
                                         l4065 0564                                           l4057 04F6  
                                         l4049 04D8                                           l4241 001C  
                                         l4233 0009                                           l4321 017F  
                                         l4313 0137                                           l4305 00F4  
                                         l4411 001D                                           l4403 0013  
                                         l3195 0006                                           l4219 009E  
                                         l3267 00A7                                           l3259 006D  
                                         l3179 0006                                           l3291 0021  
                                         l3283 0010                                           l3275 0001  
                                         l3339 002B                                           l3347 0044  
                                         l3531 010A                                           l3523 00FC  
                                         l3515 00E2                                           l3507 00C7  
                                         l3451 0021                                           l3443 000E  
                                         l3363 004C                                           l3355 0000  
                                         l3371 0031                                           l3611 004D  
                                         l3603 0039                                           l3427 0064  
                                         l3419 004F                                           l3187 0000  
                                         l4171 072D                                           l4163 070B  
                                         l4155 06F5                                           l4139 06A9  
                                         l4147 06D7                                           l4083 0594  
                                         l4075 057E                                           l4091 05A9  
                                         l4067 056A                                           l4059 04FF  
                                         l4251 003C                                           l4243 0020  
                                         l4235 0015                                           l4331 01D2  
                                         l4323 0184                                           l4307 0105  
                                         l4315 013D                                           l4261 0000  
                                         l4421 0007                                           l4413 0020  
                                         l4405 0016                                           l3197 000F  
                                         l3269 00B5                                           l3293 0024  
                                         l3285 0015                                           l3277 0005  
                                         l3349 0049                                           l3541 011E  
                                         l3533 0111                                           l3525 00FE  
                                         l3517 00EA                                           l3509 00C8  
                                         l3461 0035                                           l3453 0022  
                                         l3445 000F                                           l3437 0000  
                                         l3357 0014                                           l3381 0087  
                                         l3373 0039                                           l3701 0229  
                                         l3621 0068                                           l3613 0055  
                                         l3605 003E                                           l3429 0069  
                                         l4173 0732                                           l4165 070F  
                                         l4157 06FA                                           l4149 06DD  
                                         l4181 074D                                           l4093 05AF  
                                         l4085 059D                                           l4077 0587  
                                         l4069 056E                                           l4253 004C  
                                         l4245 0024                                           l4341 0236  
                                         l4333 01F0                                           l4325 01A4  
                                         l4317 015A                                           l4309 010F  
                                         l4501 0012                                           l4431 0004  
                                         l4415 0000                                           l4407 0018  
                                         l4423 0000                                           l4511 000A  
                                         l3199 0014                                           l4191 000C  
                                         l3295 0029                                           l3287 0019  
                                         l3279 000A                                           l3551 0147  
                                         l3543 0132                                           l3527 0105  
                                         l3535 0115                                           l3519 00EE  
                                         l3471 004C                                           l3463 0039  
                                         l3447 0014                                           l3455 0024  
                                         l3439 0006                                           l3359 0030  
                                         l3383 0089                                           l3375 003D  
                                         l3367 0000                                           l3711 0246  
                                         l3703 0232                                           l3631 00C3  
                                         l3623 0075                                           l3615 005A  
                                         l3607 0043                                           l3391 000A  
                                         l4175 0736                                           l4159 06FE  
                                         l4095 05B9                                           l4087 05A1  
                                         l4079 058B                                           l4247 002D  
                                         l4239 0018                                           l4351 0285  
                                         l4343 0240                                           l4327 01B7  
                                         l4319 015F                                           l4271 0028  
                                         l4263 0002                                           l4503 0021  
                                         l4433 0005                                           l4257 0000  
                                         l4441 000A                                           l4425 0000  
                                         l4417 0003                                           l4409 001B  
                                         l4521 0038                                           l4513 001A  
                                         l4193 0016                                           l4185 0000  
                                         l3721 0010                                           l3297 002D  
                                         l3289 001B                                           l3561 018F  
                                         l3553 014B                                           l3537 0119  
                                         l3529 0109                                           l3481 006F  
                                         l3473 004D                                           l3465 003A  
                                         l3457 002C                                           l3449 0019  
                                         l3377 0055                                           l3369 0015  
                                         l3713 024E                                           l3705 0234  
                                         l3641 00F8                                           l3633 00D0  
                                         l3625 0082                                           l3617 005F  
                                         l3609 004B                                           l3801 00A3  
                                         l4177 073F                                           l4169 0727  
                                         l4097 05BD                                           l4089 05A5  
                                         l4249 0036                                           l4361 02F1  
                                         l4345 0253                                           l4337 021D  
                                         l4329 01C9                                           l4281 0059  
                                         l4273 003B                                           l4265 0015  
                                         l4435 0006                                           l4427 0000  
                                         l4259 0000                                           l4443 0011  
                                         l4419 0004                                           l4531 0064  
                                         l4523 0043                                           l4515 002A  
                                         l4507 0001                                           l3811 0000  
                                         l4195 002A                                           l4187 0006  
                                         l3731 0030                                           l3723 0015  
                                         l3299 0031                                           l3571 01A6  
                                         l3563 0192                                           l3555 0163  
                                         l3547 013A                                           l3539 011A  
                                         l3491 0086                                           l3467 003F  
                                         l3475 004F                                           l3459 0031  
                                         l3379 0059                                           l3707 0241  
                                         l3651 013B                                           l3643 0105  
                                         l3635 00DD                                           l3627 009C  
                                         l3387 0000                                           l3395 0000  
                                         l3803 00BA                                           l4179 0743  
                                         l4099 05C1                                           l4371 0338  
                                         l4363 02FB                                           l4355 02C2  
                                         l4339 0224                                           l4291 00A3  
                                         l4275 0044                                           l4283 0060  
                                         l4267 001E                                           l4451 000A  
                                         l4429 0003                                           l4445 0018  
                                         l4437 0000                                           l4461 0000  
                                         l4541 0099                                           l4533 006D  
                                         l4525 004A                                           l4509 0006  
                                         l3821 0018                                           l4197 002B  
                                         l4189 000A                                           l3741 000D  
                                         l3733 0043                                           l3725 001A  
                                         l3717 0002                                           l3565 019A  
                                         l3549 013F                                           l3557 0167  
                                         l3493 0096                                           l3477 005F  
                                         l3485 0078                                           l3469 0044  
                                         l3709 0245                                           l3661 018F  
                                         l3653 0148                                           l3645 010C  
                                         l3637 00E4                                           l3629 00A9  
                                         l3581 000A                                           l3389 0008  
                                         l3397 000C                                           l3805 00C3  
                                         l3901 0054                                           l4373 0345  
                                         l4357 02C8                                           l4349 0273  
                                         l4285 0071                                           l4293 00A9  
                                         l4277 0053                                           l4269 0024  
                                         l4453 000E                                           ?_pad 0004  
                                         l4447 001F                                           l4439 0009  
                                         l4391 0000                                           l4471 000F  
                                         l4463 0003                                           l4543 009E  
                                         l4535 0071                                           l4527 004E  
                                         l4519 0033                                           l3823 0019  
                                         l3815 0000                                           l2951 000F  
                                         l3735 004C                                           l3727 001F  
                                         l3719 0007                                           l3831 0025  
                                         l3567 01A0                                           l3559 0174  
                                         l3495 009E                                           l3487 007D  
                                         l3479 006B                                           l3671 01AE  
                                         l3663 019B                                           l3655 015C  
                                         l3647 0120                                           l3639 00F1  
                                         l3591 0021                                           l3583 000E  
                                         l3751 004A                                           l3743 0000  
                                         l3807 00DA                                           l3911 006E  
                                         l3903 0059                                           l4359 02DD  
                                         l4367 031C                                           l4295 00BC  
                                         l4287 007B                                           l4279 0057  
                                         l4383 0357                                           l4455 0024  
                                         l4481 000B                                           l4393 0000  
                                         l4473 0012                                           l4465 0006  
                                         l4545 00A2                                           l4537 007B  
                                         l4529 0056                                           l3817 0002  
                                         l2953 001A                                           l2945 0000  
                                         l3729 002B                                           l3841 0077  
                                         l3833 002B                                           l3569 01A4  
                                         l3497 00A6                                           l3681 01CF  
                                         l3665 01A2                                           l3673 01B2  
                                         l3657 0171                                           l3649 0127  
                                         l3593 0023                                           l3585 000F  
                                         l3577 0000                                           l2961 0000  
                                         l3753 004F                                           l3745 0018  
                                         l3921 00A2                                           l3913 0073  
                                         l3905 0060                                           l4385 0373  
                                         l4369 032F                                           l4377 034B  
                                         l4297 00BF                                           l4457 002E  
                                         l4449 0002                                           l4483 000C  
                                         l4475 0001                                           l4491 0001  
                                         l4395 0003                                           l4467 0009  
                                         l4547 00A3                                           l4539 0085  
                                         l3819 0009                                           l4627 004E  
                                         l3739 0000                                           l2955 0039  
                                         l2947 0005                                           l3851 0094  
                                         l3843 007D                                           l3835 004E  
                                         l3827 0002                                           l3499 00AE  
                                         l3691 01E8                                           l3675 01B6  
                                         l3667 01A6                                           l3659 0188  
                                         l3595 002B                                           l3587 0014  
                                         l3579 0006                                           l2971 0014  
                                         l2963 0006                                           l3763 007A  
                                         l3747 002D                                           l3771 0000  
                                         l3923 00A8                                           l3907 0065  
                                         l3915 0077                                           l4379 0354  
                                         l4299 00C9                                           l4571 0011  
                                         l4563 0000                                           l4485 000F  
                                         l4477 000B                                           l4493 0006  
                                         l4397 0006                                           l4469 000C  
                                         l2957 004C                                           l2949 000A  
                                         l3861 0113                                           l3853 00C3  
                                         l3845 0082                                           l3837 0061  
                                         l3829 0012                                           l3693 0200  
                                         l3685 01D7                                           l3677 01B7  
                                         l3669 01A7                                           l3597 0030  
                                         l3589 0019                                           l2981 002C  
                                         l2973 0019                                           l2965 000A  
                                         l3749 0033                                           l3757 0054  
                                         l3781 0000                                           l3941 010C  
                                         l3925 00B2                                           l3917 0089  
                                         l3933 00DB                                           l3909 0069  
                                         l4581 00F3                                           l4573 001D  
                                         l4565 0003                                           l4487 0015  
                                         l4479 0001                                           l4399 0008  
                                         l3871 013F                                           l3863 0120  
                                         l3855 00C7                                           l3847 008C  
                                         l3839 0067                                           l3687 01DC  
                                         l3695 0204                                           l3679 01BB  
                                         l3599 0034                                           l2991 0040  
                                         l2983 0031                                           l2975 0021  
                                         l2967 000E                                           l3759 005A  
                                         l3791 005E                                           l3783 0018  
                                         l3767 0001                                           l3775 0017  
                                         l3943 0116                                           l3935 00ED  
                                         l3951 013F                                           l3927 00BB  
                                         l4495 0002                                           l4591 0130  
                                         l4583 00FC                                           l4575 0021  
                                         l4567 0006                                           l3873 0144  
                                         l3881 015C                                           l3865 012E  
                                         l3857 00CB                                           l3849 008F  
                                         l3697 0211                                           l3689 01E4  
                                         l2993 0041                                           l2985 0037  
                                         l2977 0022                                           l2969 000F  
                                         l3785 0033                                           l3769 0009  
                                         l3777 001D                                           l3961 018E  
                                         l3953 0148                                           l3945 011F  
                                         l3929 00C0                                           l4497 000E  
                                         l4593 0135                                           l4585 0100  
                                         l4577 00EC                                           l4569 000D  
                                         l3875 014A                                           l3859 0106  
                                         l3867 0133                                           l3699 021B  
                                         l2995 0046                                           l2987 0038  
                                         l2979 0024                                           l3795 0073  
                                         l3787 0040                                           l3963 0192  
                                         l3971 0225                                           l3955 014A  
                                         l3947 0124                                           l3939 0106  
                                         l3891 002A                                           l4499 0010  
                                         l4595 013E                                           l4587 0122  
                                         l4579 00F0                                           l3877 014F  
                                         l3869 013A                                           l2997 004B  
                                         l2989 003C                                           l3797 008A  
                                         l3789 0046                                           l3981 0259  
                                         l3973 0235                                           l3965 01CE  
                                         l3893 002F                                           l3885 0002  
                                         l4589 0128                                           l3879 0153  
                                         l2999 0053                                           l3799 0092  
                                         l3991 0274                                           l3983 025F  
                                         l3975 0239                                           l3967 01FA  
                                         l3959 0162                                           l3895 0043  
                                         l3887 0004                                           l3993 0281  
                                         l3977 023F                                           l3969 01FE  
                                         l3897 0046                                           l3889 000C  
                                         l3995 0296                                           l3979 0246  
                                         l3899 004E                                           l3997 029C  
                                         l3989 026E                                           l3999 02A5  
                                         STR_1 0000                                           STR_2 0000  
                                         STR_3 0000                                           STR_6 0000  
                                         STR_7 0000                                           _LATA 010C  
                                         _LATC 010E                                           u4010 000B  
                                         u4011 000A                                           u4030 0036  
                                         u4110 0005                                           u4031 0035  
                                         u4111 0004                                           u3320 0005  
                                         u4200 0055                                           u4120 0010  
                                         u5000 01F6                                           u3400 0040  
                                         u3321 0004                                           u4201 0054  
                                         u4121 000F                                           u3401 003F  
                                         u4050 0062                                           u3330 000A  
                                         u4130 0021                                           u4210 0005  
                                         u5010 0211                                           u3410 0046  
                                         u4051 0061                                           u3331 0009  
                                         u4131 0020                                           u4211 0004  
                                         u5011 0210                                           u3411 0045  
                                         u4060 0075                                           u3340 001A  
                                         u4220 0010                                           u4300 0014  
                                         u5020 0229                                           u3420 004B  
                                         u5100 0033                                           u4061 0074  
                                         u3341 0019                                           u4221 000F  
                                         u4301 0013                                           u5021 0228  
                                         u5005 01F2                                           u3421 004A  
                                         u5101 0032                                           u4070 0097  
                                         u3350 0039                                           u4150 0031  
                                         u4230 001B                                           u4310 0030  
                                         u5030 0245                                           u3510 0100  
                                         u3430 0064                                           u5110 0040  
                                         u4071 0096                                           u3351 0038  
                                         u4151 0030                                           u4231 001A  
                                         u4311 002F                                           u5031 0244  
                                         u5015 020D                                           u3511 00FF  
                                         u3431 0063                                           u4080 00B5  
                                         u5040 0007                                           u4320 004A  
                                         u3600 019D                                           u3520 0104  
                                         u3440 0068                                           u3360 000E  
                                         u4400 0022                                           u5120 004A  
                                         u5200 001D                                           u6000 06DD  
                                         u4081 00B4                                           u5041 0006  
                                         u4145 0025                                           u4321 0049  
                                         u5025 0225                                           u3601 019C  
                                         u3521 0103                                           u3505 00F0  
                                         u3441 0067                                           u3361 000D  
                                         u5121 0049                                           u5201 001C  
                                         u6001 06DC                                           u4090 00BA  
                                         u5050 0015                                           u4170 0040  
                                         u4250 002B                                           u4330 0015  
                                         u3610 01A2                                           u3530 0109  
                                         u3450 00C0                                           u3370 0014  
                                         u4410 0037                                           u5130 005A  
                                         u5210 0025                                           u6010 06EA  
                                         u4091 00B9                                           u4075 0093  
                                         u3355 0035                                           u5051 0014  
                                         u4171 003F                                           u4251 002A  
                                         u4331 0014                                           u3611 01A1  
                                         u3531 0108                                           u3451 00BF  
                                         u3371 0013                                           u4411 0036  
                                         u5131 0059                                           u5115 003C  
                                         u6011 06E9                                           u6100 008C  
                                         u5060 003E                                           u4260 0035  
                                         u4500 0014                                           u4340 0031  
                                         u3700 01E3                                           u3540 011E  
                                         u3460 00C9                                           u3380 0019  
                                         u4420 003E                                           u5140 0067  
                                         u5300 00D0                                           u5220 0040  
                                         u6020 06F5                                           u5061 003D  
                                         u4165 0032                                           u4261 0034  
                                         u4245 001F                                           u4501 0013  
                                         u4325 0046                                           u4341 0030  
                                         u3701 01E2                                           u3541 011D  
                                         u3461 00C7                                           u3381 0018  
                                         u4421 003D                                           u4405 001E  
                                         u5221 003F                                           u6021 06F4  
                                         u6110 0098                                           u5070 0043  
                                         u4190 0050                                           u4510 0019  
                                         u4350 003D                                           u3710 01EF  
                                         u3630 01B6                                           u3550 0122  
                                         u3470 00CA                                           u3390 0037  
                                         u5150 0072                                           u5310 00DA  
                                         u5230 0046                                           u6030 0720  
                                         u6111 0097                                           u5071 0042  
                                         u4191 004F                                           u4175 003C  
                                         u4511 0018                                           u4351 003C  
                                         u3711 01EE                                           u3631 01B5  
                                         u3551 0121                                           u3455 00BC  
                                         u3391 0036                                           u5151 0070  
                                         u5311 00D9                                           u5231 0045  
                                         u5215 0021                                           u6031 071E  
                                         u6015 06E6                                           u5320 0010  
                                         u6120 009E                                           u5080 000D  
                                         u5400 004E                                           u4280 0044  
                                         u4600 00C7                                           u4520 0039  
                                         u4360 0059                                           u3720 01FE  
                                         u3640 01BB                                           u3560 012F  
                                         u3480 00DF                                           u4440 004E  
                                         u5160 0073                                           u5240 0054  
                                         u6040 0721                                           u6200 0057  
                                         u5321 000E                                           u6121 009D  
                                         u5081 000C                                           u5065 003A  
                                         u5401 004D                                           u4185 0046  
                                         u4281 0043                                           u4265 0031  
                                         u4601 00C6                                           u4521 0038  
                                         u4361 0058                                           u3641 01BA  
                                         u3625 01AC                                           u3561 012E  
                                         u3481 00DE                                           u4441 004D  
                                         u5145 0063                                           u5305 00CC  
                                         u5225 003C                                           u6201 0056  
                                         u5330 0011                                           u5410 0061  
                                         u4290 0049                                           u4530 003F  
                                         u4370 0087                                           u3810 001E  
                                         u3730 020D                                           u3650 01C5  
                                         u3490 00EC                                           u4450 0055  
                                         u5090 0025                                           u5250 0072  
                                         u5170 0020                                           u6050 072D  
                                         u6130 0015                                           u6210 0099  
                                         u5411 0060                                           u4291 0048  
                                         u4275 003A                                           u4531 003E  
                                         u4371 0086                                           u3811 001D  
                                         u3731 020C                                           u3651 01C4  
                                         u3491 00EB                                           u4451 0054  
                                         u4435 0040                                           u5251 0071  
                                         u5171 001F                                           u6051 072C  
                                         u6131 0014                                           u6211 0097  
                                         u5340 0009                                           u6060 0016  
                                         u3900 000B                                           u3820 0028  
                                         u5500 013F                                           u5420 007D  
                                         u4700 0132                                           u4620 00E1  
                                         u4540 0044                                           u4380 0008  
                                         u3740 0216                                           u3660 01CB  
                                         u3580 0155                                           u5260 0080  
                                         u5180 0010                                           u6140 002D  
                                         u6300 0184                                           u6220 009A  
                                         _PMD0 0911                                           u5341 0008  
                                         u6061 0015                                           u3901 000A  
                                         u5085 0009                                           u3821 0027  
                                         u5501 013E                                           u5421 007C  
                                         u4701 0131                                           u4621 00E0  
                                         u4541 0043                                           u3805 0013  
                                         u4381 0007                                           u3741 0215  
                                         u3725 01FA                                           u3661 01CA  
                                         u3581 0154                                           u5245 0050  
                                         u5181 000E                                           u6141 002C  
                                         u6301 0183                                           _PMD1 0912  
                                         u5350 0018                                           u6070 002A  
                                         u3830 0013                                           u5510 014A  
                                         u5430 0082                                           u4710 0139  
                                         u4630 00F4                                           u4550 005F  
                                         u3750 021B                                           u3670 01D0  
                                         u3590 0184                                           u4470 0064  
                                         u4390 000C                                           u5270 008A  
                                         u5190 0011                                           u6150 0036  
                                         u6310 01B7                                           u6230 00A9  
                                         _PMD2 0913                                           u5351 0017  
                                         u6071 0029                                           u3831 0012  
                                         u5511 0149                                           u5431 0081  
                                         u5415 005D                                           u4711 0138  
                                         u4631 00F3                                           u4615 00C9  
                                         u4551 005E                                           u4375 0083  
                                         u3751 021A                                           u3671 01CF  
                                         u3591 0183                                           u3583 0151  
                                         u3575 0133                                           u4471 0063  
                                         u4391 000B                                           u5095 0021  
                                         u5271 0089                                           u6151 0035  
                                         u6311 01B6                                           u6231 00A8  
                                         _PMD3 0914                                           u6400 0015  
                                         u6080 0038                                           u3920 0036  
                                         u5440 0106                                           u5360 001D  
                                         u4720 013F                                           u4640 00FC  
                                         u4560 007D                                           u4800 0019  
                                         u3760 0228                                           u3680 01D6  
                                         u4480 0069                                           u5280 00B0  
                                         u3840 0010                                           u5600 00ED  
                                         u5520 002A                                           u6160 003C  
                                         u6320 01C9                                           u6240 00BC  
                                         _PMD4 0915                                           u6401 0014  
                                         u6081 0037                                           u3921 0035  
                                         u5441 0105                                           u5361 001B  
                                         u4721 013E                                           u4641 00FB  
                                         u4625 00DD                                           u4561 007C  
                                         u4801 0018                                           u3761 0227  
                                         u3681 01D5                                           u4481 0068  
                                         u4465 0057                                           u5265 007C  
                                         u3841 000E                                           u5601 00EC  
                                         u5521 0029                                           u6161 003B  
                                         u6321 01C8                                           u6241 00BB  
                                         _PMD5 0916                                           u6410 0006  
                                         u6090 008B                                           u5450 0113  
                                         u5370 001E                                           u4730 014B  
                                         u4570 00B5                                           u4490 000E  
                                         u4810 0038                                           u3770 022D  
                                         u3690 01DD                                           u5290 00BA  
                                         u3850 0011                                           u5610 00FF  
                                         u5530 0054                                           u6170 004C  
                                         u6330 0224                                           u6250 00DB  
                                         u6411 0005                                           u6091 0089  
                                         u5451 0112                                           u4731 014A  
                                         u4571 00B4                                           u4491 000D  
                                         u4811 0037                                           u3771 022C  
                                         u3691 01DC                                           u5291 00B9  
                                         u5611 00FD                                           u5531 0053  
                                         u6171 004B                                           u6331 0223  
                                         u6251 00DA                                           u6500 0071  
                                         u6420 0006                                           u3860 0006  
                                         u3940 0060                                           u5460 0120  
                                         u5380 002B                                           u4740 0159  
                                         u4660 0109                                           u4820 003E  
                                         u3780 023D                                           u5700 026D  
                                         u5620 0100                                           u5540 0059  
                                         u6340 0285                                           u6260 012D  
                                         u6180 0015                                           u6501 0070  
                                         u6421 0005                                           u3861 0005  
                                         u5461 011F                                           u5445 0102  
                                         u5381 002A                                           u4661 0108  
                                         u4821 003D                                           u3781 023C  
                                         u5285 00AC                                           u5701 026C  
                                         u5541 0058                                           u6341 0284  
                                         u6261 012B                                           u6181 0014  
                                         u6510 0077                                           u6430 000A  
                                         u3950 0070                                           u5470 012E  
                                         u4750 0174                                           u3790 000E  
                                         u4830 0043                                           u5710 0274  
                                         u5630 010C                                           u5550 0060  
                                         u6350 02B8                                           u6270 012E  
                                         u6190 003B                                           u6511 0076  
                                         u6431 0009                                           u3951 006F  
                                         u5471 012D                                           u4751 0173  
                                         u4655 00FF                                           u3791 000D  
                                         u4831 0042                                           u5711 0273  
                                         u5631 010B                                           u5551 005F  
                                         u6351 02B6                                           u6191 003A  
                                         u6520 007B                                           u6440 002A  
                                         u3960 0083                                           u5480 0133  
                                         u4760 018F                                           u4680 0119  
                                         u4920 01A6                                           u4840 005A  
                                         u5800 03CF                                           u5720 0281  
                                         u5640 0161                                           u5560 0089  
                                         u6360 02B9                                           u6280 013D  
                                         u6600 013E                                           u6521 007A  
                                         u6441 0029                                           u3961 0082  
                                         u5481 0132                                           u5465 011C  
                                         u4761 018E                                           u4745 0155  
                                         u4681 0118                                           u4585 00B6  
                                         u4921 01A5                                           u4905 0189  
                                         u4841 0059                                           u5801 03CE  
                                         u5721 0280                                           u5641 0160  
                                         u5561 0088                                           u6281 013C  
                                         u6601 013D                                           u6530 008F  
                                         u3890 001A                                           u3970 00AD  
                                         u5490 013A                                           u4770 01A4  
                                         u4690 011E                                           u4850 005F  
                                         u5810 0421                                           u5730 0296  
                                         u5650 01CD                                           u5570 009B  
                                         u6370 02C8                                           u6290 015F  
                                         u3891 0019                                           u3875 000B  
                                         u3971 00AC                                           u5491 0139  
                                         u5475 012A                                           u4771 01A3  
                                         u4755 0170                                           u4691 011D  
                                         u4675 010B                                           u4595 00BD  
                                         u4915 019C                                           u4851 005E  
                                         u5811 0420                                           u5731 0295  
                                         u5651 01CC                                           u5571 0099  
                                         u6371 02C7                                           u6291 015E  
                                         u6540 009E                                           u6460 0049  
                                         u3980 00CC                                           u4940 01B6  
                                         u4780 000E                                           u5900 056E  
                                         u5820 0443                                           u5740 02AB  
                                         u5660 0225                                           u5580 009C  
                                         u6380 032F                                           u6541 009D  
                                         u6461 0048                                           u3885 0010  
                                         u3981 00CB                                           u4765 018B  
                                         u4941 01B5                                           u4781 000D  
                                         u5901 056D                                           u5821 0442  
                                         u5805 03CB                                           u5741 02AA  
                                         u5725 027D                                           u5661 0224  
                                         u6381 032E                                           u6550 00A2  
                                         u3990 00D1                                           u4950 01BB  
                                         u4790 0014                                           u5910 057A  
                                         u5830 0448                                           u5750 02B1  
                                         u5670 023F                                           u5590 00A8  
                                         u6390 002E                                           u6551 00A1  
                                         u6535 008B                                           u6455 003D  
                                         u3991 00D0                                           u3975 00A9  
                                         u4951 01BA                                           u4935 01A8  
                                         u4791 0013                                           u5911 0579  
                                         u5831 0447                                           u5751 02B0  
                                         u5735 0292                                           u5671 023E  
                                         u5591 00A7                                           u6391 002D  
                                         u6480 0063                                           u4960 01CF  
                                         u4880 0167                                           u5920 057E  
                                         u5840 04A7                                           u5760 02B5  
                                         u5680 0246                                           u6481 0062  
                                         u4961 01CE                                           u4865 00DE  
                                         u5921 057D                                           u5841 04A6  
                                         u5761 02B4                                           u5681 0245  
                                         u6617 000E                                           u4970 01D6  
                                         u4890 017E                                           u5930 05AF  
                                         u5850 04DE                                           u5770 02BF  
                                         u5690 0259                                           u6475 0057  
                                         u4971 01D5                                           u4875 010D  
                                         u5931 05AE                                           u5851 04DD  
                                         u5771 02BE                                           u5691 0258  
                                         u6627 0022                                           u4980 01DC  
                                         u5940 0651                                           u5860 04F1  
                                         u5780 02C3                                           u6580 00F0  
                                         u4981 01DB                                           u4885 0163  
                                         u5941 0650                                           u5861 04F0  
                                         u5781 02C2                                           u6637 0144  
                                         u6581 00EF                                           u4990 01E8  
                                         u5950 065F                                           u5870 055D  
                                         u5790 02D3                                           u6590 00FC  
                                         u6495 0067                                           u4991 01E7  
                                         u4895 017A                                           u5951 065E  
                                         u5871 055C                                           u5791 02D2  
                                         u5695 0255                                           u6591 00FB  
                                         u5960 0666                                           u5880 0564  
                                         u5961 0665                                           u5945 064D  
                                         u5881 0563                                           u5970 066B  
                                         u5890 056A                                           u5971 066A  
                                         u5955 065B                                           u5891 0569  
                                         u5980 0686                                           u5981 0685  
                                         u5990 0696                                           u5991 0695  
                                         _WPUA 020C                                           _WPUC 020E  
                                         abs@a 0003                                           _dbuf 0000  
                                         _atoi 0000                                           _main 0000  
                                         _dtoa 0000                                           _tSys 231C  
                                         _prec 0000                                           _nout 0008  
                                         pad@i 0007                                           pad@p 0005  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0009                                           btemp 007E  
                                ___fpclassifyf 0000                                           start 0000* 
                              ___fldiv@new_exp 0022                                   _tolower$1171 000C  
                                        ??_abs 0005                                          ??_pad 000C  
                              ?_FVR_Initialize 0000                                  ?_EUSART_Write 0000  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 0009  
                                ___fltol@sign1 000C                                __end_of___aodiv 0101  
                                        _ADACT 009F                                          ?_atoi 0006  
                              __end_of___fladd 023F                                          ?_main 0000  
                                        ?_dtoa 0010                                __end_of___aomod 00EA  
                              __end_of___fldiv 01B4                                __end_of___awdiv 005F  
                              __end_of___flneg 000B                                          STR_10 0000  
                                        STR_12 0000                                __end_of___awmod 0053  
                              __end_of___flmul 0257                                __end_of___flsub 0020  
                              __end_of___fltol 0075                                ___awdiv@divisor 0000  
                              ___awdiv@counter 0005                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0042                                          _TRISA 008C  
                                        _TRISC 008E                                          _RXPPS 0E24  
                                        _flags 0002                                 _WDT_Initialize 0000  
                                        _fputc 0000                                          _fputs 0000  
                              __end_of_isdigit 0018                                          atoi@n 0007  
                                        pad@fp 000B                                          atoi@s 0006  
                                        _width 000A                                          _putch 0000  
                                        main@n 004A                                          dtoa@d 0010  
                                        main@p 0049                                          main@s 002D  
                                        dtoa@i 002C                                          dtoa@n 0024  
                                        dtoa@p 001E                                          dtoa@s 0022  
                                        dtoa@w 0020                                __end_of_isspace 0021  
                              __end_of_isupper 0018                                          status 0003  
                                        wtemp0 007E                                __end_of_sprintf 002C  
                               ?___fpclassifyf 0000                                __end_of_tolower 0025  
                              __end_of_strncmp 005B                                __initialization 0000  
                                 __end_of_atoi 00AF                                   __end_of_main 014E  
                                 __end_of_dtoa 0170                                 ??_EUSART_Write 0000  
                                       ??_atoi 0008                                         ??_main 002B  
                                       ??_dtoa 0018                         __end_of_WDT_Initialize 0004  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0002  
                                       ?_fputc 0000                                         ?_fputs 0008  
                                       _ADRESH 009C                                         _ADRESL 009B  
                             ___awdiv@dividend 0002                                         _ANSELA 018C  
                                       ?_putch 0000                                         _ANSELC 018E  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                                         _ODCONA 028C  
                                       _ODCONC 028E                                         _INLVLA 038C  
                                       _INLVLC 038E                                         _FVRCON 0117  
                                       _OSCFRQ 091F                                         u400lld 00EF  
                                       u410lld 00D8                                         u402lld 002A  
                                       u404lld 0055                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                                       u391lld 002A                                         u393lld 0055  
                                       u539lld 0049                               __end_of___xxtofl 00AC  
                                 vfprintf@cfmt 0018                                         ___flge 0000  
                                       ___fleq 0000                                      ??___aodiv 0000  
                                    ??___fladd 0000                                      ??___aomod 0000  
                                       ___wmul 0000                                      ??___fldiv 0018  
                                    ??___awdiv 0004                                      ??___flneg 0004  
                                    ??___awmod 0004                                      ??___flmul 0032  
                                    ??___flsub 000C                                      ??___fltol 002E  
                                       _efgtoa 0000                                         _floorf 0000  
                             ___awdiv@quotient 0007                                ___awmod@divisor 0000  
                              ___awmod@counter 0005                                         pad@buf 0004  
                                       dtoa@fp 001D                                         _strcpy 0000  
                                       _strlen 0000                                         fputc@c 0000  
                               _PMD_Initialize 0000                                         fputs@c 0000  
                                       fputs@i 0001                                         fputs@s 0003  
                                    ??_isdigit 0002                             __size_of__Umul8_16 0023  
                              ___fpclassifyf@e 0000                                ___fpclassifyf@u 0002  
                              ___fpclassifyf@x 0000                                      ??_isspace 0002  
                              ?_WDT_Initialize 0000                                      ??_isupper 0002  
                     ADC_GetConversion@channel 0003                                         putch@c 0000  
                             __end_of_vfprintf 0037                                      ??_sprintf 004F  
                                    ??_tolower 0008                                      ??_strncmp 0004  
                                   ___flge@ff1 0044                                     ___flge@ff2 0048  
                              ??___fpclassifyf 0004                                   ___xxtofl@arg 000A  
                                 ___xxtofl@exp 0009                              _SYSTEM_Initialize 0000  
                                 ___xxtofl@val 0000                                     ___fleq@ff1 0000  
                                   ___fleq@ff2 0004                        __end_of__initialization 0026  
                                   ___flneg@f1 0000                             ?_SYSTEM_Initialize 0000  
                                   ___fltol@f1 002A                                 __pcstackCOMMON 0000  
                          ??_SYSTEM_Initialize 0002                                  __end_of_fputc 0056  
                                __end_of_fputs 0029                                  __end_of_putch 0001  
                       __end_of_PMD_Initialize 0008                ??_EUSART_SetOverrunErrorHandler 0002  
                                      ??_fputc 0003                      __end_of_SYSTEM_Initialize 0016  
                                      ??_fputs 0009                                        ??_putch 0000  
                                   __pbssBANK2 0000                                     __pbssBANK3 0000  
                                   __pbssBANK4 0000                           __end_of_EUSART_Write 000A  
                            __end_of__Umul8_16 0023                               ??_FVR_Initialize 0000  
                                   __pmaintext 0000                                        ?___flge 0044  
                                      ?___fleq 0000                              __end_of_co2_table 00CE  
                                      ?___wmul 0000                                        ?_efgtoa 0000  
                                      ?_floorf 002A                                ?_PMD_Initialize 0000  
                      __size_of_ADC_Initialize 0009                                        ?_strcpy 0000  
                                      ?_strlen 0000                                      ?___xxtofl 0000  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                           __size_of_vfpfcnvrt 037F                                        _OSCTUNE 091E  
                                      _SLRCONA 030C                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0002                           _ADC_InterruptHandler 000C  
                              __size_of___flge 008B                                __size_of___fleq 004E  
                                      ___aodiv 0000                                        ___fladd 0000  
                                      ___aomod 0000                                        ___fldiv 0000  
                                      ___awdiv 0000                                        ___flneg 0000  
                                      ___awmod 0000                                        ___flmul 0000  
                                      ___flsub 0000                                        ___fltol 0000  
                              __size_of___wmul 001F                                      ?_vfprintf 004A  
                              __size_of_efgtoa 0769                                __size_of_floorf 00EB  
                                      __ptext1 0000                                        __ptext2 0000  
                                      __ptext3 0000                                        __ptext4 0000  
                                      __ptext5 0000                                        __ptext6 0000  
                                      __ptext7 0000                                        __ptext8 0000  
                                      __ptext9 0000                                __size_of_strcpy 0021  
                              __size_of_strlen 001A                          _OSCILLATOR_Initialize 0000  
                                 __size_of_abs 001A                                   __size_of_pad 0059  
                                      _isdigit 0000                                     ??___xxtofl 0004  
                             ___awmod@dividend 0002                       ??_PIN_MANAGER_Initialize 0000  
                                      _isspace 0000                                        _isupper 0000  
                                      efgtoa@c 0004                                        efgtoa@d 0021  
                                      efgtoa@e 003A                                        efgtoa@f 0000  
                                      efgtoa@g 0036                                        efgtoa@h 002C  
                                      efgtoa@i 0034                                        efgtoa@l 0030  
                                      efgtoa@m 001B                                        efgtoa@n 003C  
                                      efgtoa@p 0026                                        efgtoa@t 0015  
                                      efgtoa@u 003E                                        efgtoa@w 0028  
                                      atoi@neg 0000                     __size_of_SYSTEM_Initialize 0016  
                                      _sprintf 0000                                        _tolower 0000  
                                      clrloop0 0001                                        _strncmp 0000  
                         end_of_initialization 0026                                        floorf@e 0038  
                                      floorf@m 0034                                        floorf@u 003A  
                                      floorf@x 002A           ?_INTERRUPT_PeripheralInterruptEnable 0000  
        ??_INTERRUPT_PeripheralInterruptEnable 0000            _INTERRUPT_PeripheralInterruptEnable 0000* 
        __end_of_EUSART_SetOverrunErrorHandler 0006         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0000                                        fputc@fp 0002  
                                      fputs@fp 0008                              _EUSART_Initialize 0000  
                           ?_EUSART_Initialize 0000                              __end_of_vfpfcnvrt 037F  
                                   efgtoa@mode 002B                                     efgtoa@sign 0023  
                                   ??_vfprintf 004D                                        strcpy@d 0006  
                                      strlen@a 0003                                        strcpy@s 0004  
                                      strlen@s 0004                            ??_EUSART_Initialize 0002  
                             ??_WDT_Initialize 0000                                    ___fladd@grs 000B  
                                ___xxtofl@sign 0008                          __size_of_EUSART_Write 000A  
                                  ___fldiv@grs 0024                                    ___fldiv@rem 001D  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 0038  
                    __end_of_EUSART_Initialize 0022                                 __end_of___flge 008B  
                               __end_of___fleq 004E                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 0043                                    vfpfcnvrt@ct 0012  
                                  vfpfcnvrt@fp 0016                                    vfpfcnvrt@ll 0000  
                               __end_of___wmul 001F                                 __end_of_efgtoa 0769  
                                 _EUSART_Write 0000                                 _ADC_Initialize 0000  
                               __end_of_floorf 00EB                         ?_OSCILLATOR_Initialize 0000  
                                   floorf@F527 0000                                 __end_of_strcpy 0021  
                               __end_of_strlen 001A                            start_initialization 0000  
              __size_of_PIN_MANAGER_Initialize 0024                                    __end_of_abs 001A  
                                  __end_of_pad 0059                          __end_of___fpclassifyf 007F  
               ?_EUSART_SetOverrunErrorHandler 0000                                    vfprintf@fmt 004A  
                   _EUSART_FramingErrorHandler 0004                                       ??___flge 004C  
                                     ??___fleq 0008                               ??_PMD_Initialize 0000  
                                     ??___wmul 0004                         _EUSART_SetErrorHandler 0000  
                                     ??_efgtoa 0005                         __end_of_ADC_Initialize 0009  
                                    __Umul8_16 0000                                       ??_floorf 002E  
                                    _co2_table 0000                                       ??_strcpy 0002  
                                     ??_strlen 0002                                      ___fladd@a 0004  
                                    ___fladd@b 0000                                      ___fldiv@a 0010  
                                    ___fldiv@b 0014                                    __pbssBIGRAM 231C  
                                    ___flmul@a 002E                                      ___flmul@b 002A  
                                    ___flsub@a 0008                                      ___flsub@b 000C  
                                    ___latbits 0002                                  __pcstackBANK0 0000  
                                __pcstackBANK1 0000                                  __pcstackBANK2 0000  
                             ___aodiv@dividend 0008                              __size_of___xxtofl 00AC  
                   __size_of_EUSART_Initialize 0022                                      _atoi$1076 0002  
                                    _atoi$1077 0006                                      _atoi$1078 0004  
                                    __pnvBANK3 0000                                    _efgtoa$1010 000B  
                                  _efgtoa$1020 0013                                    _efgtoa$1014 000D  
                                  _efgtoa$1009 0009                                    _efgtoa$1018 000F  
                                  _efgtoa$1019 0011                         _PIN_MANAGER_Initialize 0000  
                            _ADC_SelectChannel 0000                                       ?___aodiv 0000  
                                     ?___fladd 0000                                       ?___aomod 0000  
                                     ?___fldiv 0010                                       ?___awdiv 0000  
                             ___aodiv@quotient 0003                                       ?___flneg 0000  
                                     ?___awmod 0000                                       ?___flmul 002A  
                                     ?___flsub 0008                                       ?___fltol 002A  
                                   ?__Umul8_16 0000                                ?_ADC_Initialize 0000  
                           ?_ADC_SelectChannel 0000                              __size_of_vfprintf 0037  
                                     _BAUD1CON 019F                                       ?_isdigit 0000  
                          ??_ADC_SelectChannel 0000                                       ?_isspace 0000  
                                     ?_isupper 0000                                       ?_sprintf 001A  
                                     ?_tolower 0006                                 __size_of_fputc 0056  
                               __size_of_fputs 0029                                       ?_strncmp 0000  
                               __size_of_putch 0001               ?_INTERRUPT_GlobalInterruptEnable 0000  
            ??_INTERRUPT_GlobalInterruptEnable 0000                _INTERRUPT_GlobalInterruptEnable 0000* 
                               ___wmul@product 0004         EUSART_SetErrorHandler@interruptHandler 0000  
                                    clear_ram0 0000                              _eusartRxLastError 000E  
                    __end_of_ADC_SelectChannel 000D                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0002              _EUSART_DefaultOverrunErrorHandler 0000  
                                    _vfpfcnvrt 0000                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0000                       ADC_SelectChannel@channel 0001  
                      __size_of_FVR_Initialize 0004                                      main@fvr20 0045  
                                 _isspace$1107 0004                                     vfpfcnvrt@c 0015  
                                   vfpfcnvrt@f 000E                                     vfprintf@ap 004C  
                                   vfprintf@fp 0017                              _ADC_GetConversion 0000  
                      ??_OSCILLATOR_Initialize 0000                                    ??__Umul8_16 0002  
                          _EUSART_ErrorHandler 0000                             ?_ADC_GetConversion 0000  
                             __size_of___aodiv 0101                               __size_of___fladd 023F  
                             __size_of___aomod 00EA                               __size_of___fldiv 01B4  
                             __size_of___awdiv 005F                               __size_of___flneg 000B  
                             __size_of___awmod 0053                               __size_of___flmul 0257  
                             __size_of___flsub 0020                               __size_of___fltol 0075  
                                   ?_vfpfcnvrt 0042                                ___aodiv@divisor 0000  
                              ___aodiv@counter 0001                             ___fpclassifyf@F465 0004  
                          ??_ADC_GetConversion 0002                                     sprintf@fmt 001A  
                                     ___xxtofl 0000                               __size_of_isdigit 0018  
                                     _dtoa$985 001B                               __size_of_isspace 0021  
                                     __ptext10 0000                                       __ptext11 0000  
                                     __ptext20 0000                                       __ptext12 0000  
                                     __ptext21 0000                                       __ptext13 0000  
                                     __ptext30 0000                                       __ptext22 0000  
                                     __ptext14 0000                                       __ptext31 0000  
                                     __ptext23 0000                                       __ptext15 0000  
                                     __ptext40 0000                                       __ptext32 0000  
                                     __ptext24 0000                                       __ptext16 0000  
                                     __ptext41 0000                                       __ptext33 0000  
                                     __ptext25 0000                                       __ptext17 0000  
                                     __ptext42 0000                                       __ptext34 0000  
                                     __ptext26 0000                                       __ptext18 0000  
                                     __ptext43 0000                                       __ptext35 0000  
                                     __ptext27 0000                                       __ptext19 0000  
                                     __ptext44 0000                                       __ptext36 0000  
                                     __ptext28 0000                                       __ptext45 0000  
                                     __ptext37 0000                                       __ptext29 0000  
                                     __ptext46 0000                                       __ptext38 0000  
                                     __ptext47 0000                                       __ptext39 0000  
                                     __ptext48 0000                                       __ptext49 0000  
                             __size_of_isupper 0018                               __size_of_sprintf 002C  
                             __size_of_tolower 0025                                     strcpy@dest 0007  
                             __size_of_strncmp 005B                                  __size_of_atoi 00AF  
                                __size_of_main 014E                                  __size_of_dtoa 0170  
                    __end_of_ADC_GetConversion 001A                        ?_EUSART_SetErrorHandler 0000  
                   __size_of_ADC_SelectChannel 000D                                     _RC1STAbits 019D  
                                     efgtoa@fp 0025                                       efgtoa@ne 0019  
                                     efgtoa@pp 0017                                       efgtoa@ou 001D  
EUSART_SetOverrunErrorHandler@interruptHandler 0000                                       _vfprintf 0000  
                                     main@fco2 0041          __end_of_EUSART_SetFramingErrorHandler 0006  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0000  
                             ___aomod@dividend 0008                                 _vfpfcnvrt$1040 000C  
                               _vfpfcnvrt$1034 0008                                 _vfpfcnvrt$1035 000A  
                                   _FVRCONbits 0117                                       isdigit@c 0000  
                      __size_of_WDT_Initialize 0004                                      sprintf@ap 0025  
                                     isspace@c 0000                        ?_PIN_MANAGER_Initialize 0000  
               __end_of_EUSART_SetErrorHandler 0006                                      strcpy@src 0000  
                                     isupper@c 0000                                      strncmp@_l 0005  
                                    strncmp@_r 0000                               ??_ADC_Initialize 0000  
                                  efgtoa@nmode 002A  EUSART_SetFramingErrorHandler@interruptHandler 0000  
                              ___aomod@divisor 0000                                    ??_vfpfcnvrt 0044  
                              ___aomod@counter 0001                                  __pstringtext1 0000  
                                __pstringtext2 0000                                  __pstringtext3 0000  
                                __pstringtext4 0000                                  __pstringtext5 0000  
                                __pstringtext6 0000                                  __pstringtext7 0000  
                                __pstringtext8 0000                                 _FVR_Initialize 0000  
                       __Umul8_16@multiplicand 0000                                       sprintf@f 0026  
                                     tolower@c 0006                                       sprintf@s 0024  
                       __size_of___fpclassifyf 007F                                       strncmp@l 0008  
                                     strncmp@n 0002                                       strncmp@r 0006  
                                   _TX1STAbits 019E                                  ___fladd@signs 0008  
                           EUSART_Write@txData 0000                                   ___aodiv@sign 0002  
               __end_of_PIN_MANAGER_Initialize 0024                                   ___fladd@aexp 0009  
                                 ___fladd@bexp 000A                           __Umul8_16@multiplier 0008  
                   __size_of_ADC_GetConversion 001A                                   ___aomod@sign 0002  
                            __Umul8_16@product 0004  
